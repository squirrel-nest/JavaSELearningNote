From: <ÓÉ Windows Internet Explorer 7 ±£´æ>
Subject: Configuring and Using WebLogic JDBC
Date: Mon, 31 Dec 2007 23:25:48 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01C84C04.79B822F0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/jdbc/programming.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML lang=3Den xml:lang=3D"en" =
xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>Configuring and =
Using WebLogic JDBC</TITLE><!-- LOCALIZATION RELATED INFORMATION -->
<META content=3DWLPF8.1 name=3DLOC_PROJ_ID>
<META content=3DBEAJ name=3DLOC_OWNER>
<META content=3DREADY! name=3DLOC_STATUS>
<META content=3DLOC_COMMENT name=3DLOC_COMMENT>
<META content=3D117 name=3DLOC_US_REV>
<META content=3D781290 name=3DLOC_US_CHANGE>
<META content=3D//depot/docs/olympic/fm/jdbc/programming.fm =
name=3DLOC_US_SRCFILE><!-- LOCALIZATION RELATED INFORMATION -->
<META http-equiv=3Dcontent-type content=3D"text/html; charset=3Dutf-8">
<META http-equiv=3Dpragma content=3Dno-cache>
<META http-equiv=3DContent-Language content=3Den-us>
<META content=3D"BEA WebLogic Server and WebLogic Express Documentation" =

name=3Ddescription>
<META content=3D"WebLogic Server and WebLogic Express" name=3Dkeywords>
<STYLE type=3Dtext/css media=3Dall>@import url( ../styles.css );
</STYLE>

<STYLE type=3Dtext/css media=3Dall>@import url( ../edocs.css );
</STYLE>

<SCRIPT language=3DJavascript=20
src=3D"http://e-docs.bea.com/wls/docs81/jdbc/floatwin.js"=20
type=3Dtext/javascript></SCRIPT>
<!-- This script opens a new small floating window and puts =
TOC<i>&lt;name&gt;</i>.html and IX<i>&lt;name&gt;</i>.html files in it =
and sets a generic popup window code to enable the display of some =
viewlets in the WebLogic Platform Tour. -->
<SCRIPT language=3DJavaScript1.1 =
src=3D"http://e-docs.bea.com/wls/docs81/search.js"=20
type=3Dtext/javascript></SCRIPT>
<!-- This script is not for online documents. It is only used by the =
QuestAgent Java Applet for CD search indexes. -->
<SCRIPT language=3DJavascript1.1=20
src=3D"http://e-docs.bea.com/wls/docs81/googlesearch.js"=20
type=3Dtext/javascript></SCRIPT>
<!-- This script outputs the google search form. -->
<SCRIPT language=3DJavascript1.1=20
src=3D"http://e-docs.bea.com/wls/docs81/copyright.js"=20
type=3Dtext/javascript></SCRIPT>
<!-- This script outputs the correct copyright date and link to =
copyright page.-->
<META content=3D"MSHTML 6.00.6000.16587" name=3DGENERATOR></HEAD>
<BODY><A name=3D1054307></A>
<DIV class=3Dhide><A title=3D"Skip navigation" accessKey=3D2=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#wrap">Skip=
=20
navigation</A>.</DIV>
<SCRIPT language=3DJavascript1.1 type=3Dtext/javascript>
GoogleURL();
</SCRIPT>
<NOSCRIPT>This script outputs the google search URL required for search =
on edocs=20
documentation.</NOSCRIPT>=20
<DIV id=3Dheader>
<DIV id=3Dfloater>
<DIV class=3Dbuttons><A href=3D"http://commerce.bea.com/">Downloads</A>=20
&nbsp;|&nbsp; <A href=3D"http://edocs.bea.com/">Product =
Documentation</A>=20
&nbsp;|&nbsp; <A href=3D"http://support.bea.com/">Support</A> </DIV>
<DIV class=3Dsearchbox><LABEL for=3DSearch></LABEL><INPUT class=3Dsearch =
id=3DSearch=20
onclick=3D"this.value=3D'';" value=3DSearch name=3Dq> <INPUT=20
style=3D"VERTICAL-ALIGN: middle" type=3Dimage alt=3DSearch=20
src=3D"http://e-docs.bea.com/wls/docs81/images/whitearrow.gif"> =
</DIV></DIV>
<DIV id=3Dheadergraphic><A href=3D"http://www.bea.com/"><IMG=20
style=3D"BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; =
MARGIN: 0px; WIDTH: 98px; PADDING-TOP: 0px; HEIGHT: 85px; =
BORDER-RIGHT-WIDTH: 0px"=20
height=3D85 alt=3D"BEA logo"=20
src=3D"http://e-docs.bea.com/wls/docs81/images/header_logo.gif" =
width=3D98=20
align=3Dleft border=3D0></A> <IMG=20
style=3D"BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; =
MARGIN: 0px; WIDTH: 701px; PADDING-TOP: 0px; HEIGHT: 85px; =
BORDER-RIGHT-WIDTH: 0px; align: right"=20
height=3D85 alt=3D"Blue banner"=20
src=3D"http://e-docs.bea.com/wls/docs81/images/header_right.gif" =
width=3D701=20
align=3Dright border=3D0></DIV>
<DIV class=3Dblueline><IMG height=3D1 alt=3D""=20
src=3D"http://e-docs.bea.com/wls/docs81/images/_.gif" width=3D1></DIV>
<DIV id=3Dgraybar>
<DIV class=3Dtopnav><A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#wrap"></A>=
<A=20
href=3D"http://dev2dev.bea.com/">dev2dev =
Home</A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://dev2dev.bea.com/products/all.jsp">Dev&nbsp;Centers</A>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=20
<A=20
href=3D"http://www.projects.dev2dev.bea.com/">CodeShare</A>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;=20
<A=20
href=3D"http://dev2dev.bea.com/community/">Community</A>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;=20
<A =
href=3D"http://forums.bea.com/">Newsgroups</A>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;=20
</DIV></DIV>
<DIV class=3Dtwodots><IMG height=3D1 alt=3D""=20
src=3D"http://e-docs.bea.com/wls/docs81/images/_.gif" =
width=3D1></DIV></DIV>
<SCRIPT language=3DJavascript1.1 type=3Dtext/javascript>
GoogleSearchCollection();
</SCRIPT>
<NOSCRIPT>This script outputs the google search parameters required for =
search=20
on edocs documentation.</NOSCRIPT> <!-- page contents --><!-- =
breadcrumbs -->
<P class=3Dbreadcrumb><A href=3D"http://edocs.bea.com/">eDocs Home</A> =
&gt; <A=20
href=3D"http://e-docs.bea.com/wls/docs81/index.html">BEA WebLogic Server =
and=20
WebLogic Express 8.1 Documentation</A> &gt; <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/index.html">Programming =
WebLogic=20
JDBC</A> &gt; Configuring and Using WebLogic JDBC </P><!-- breadcrumbs =
END --><A=20
name=3Dwrap></A>
<DIV id=3Dwrap><!-- page title -->
<P class=3Dbooktitle>Programming WebLogic JDBC</P><!-- page title end =
--><!-- Doc Nav -->
<TABLE cellSpacing=3D0 cellPadding=3D6 border=3D0>
  <TBODY>
  <TR>
    <TD>&nbsp;</TD>
    <TD><A =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/intro.html"><IMG=20
      title=3DPrevious height=3D44 alt=3DPrevious=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/doc_nav_prev.gif" =
width=3D35=20
      border=3D0></A> </TD>
    <TD>
    <TD><A =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/performance.html"><IMG=20
      title=3DNext height=3D44 alt=3DNext=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/doc_nav_next.gif" =
width=3D44=20
      border=3D0></A></TD>
    <TD><IMG height=3D44=20
      alt=3D"vertical dots separating previous/next from =
contents/index/pdf"=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/doc_nav_dots.gif" =
width=3D5=20
      border=3D0></TD>
    <TD><A onblur=3D"window.status=3D''; return true"=20
      onmouseover=3D"window.status=3D'Table of Contents'; return true"=20
      title=3D"Open TOC in new window"=20
      onfocus=3D"window.status=3D'Table of Contents'; return true"=20
      onmouseout=3D"window.status=3D''; return true"=20
      href=3D"javascript:OpenWindowToc();"><IMG title=3DContents =
height=3D44=20
      alt=3DContents=20
      =
src=3D"http://e-docs.bea.com/wls/docs81/images/doc_nav_contents.gif"=20
      width=3D52 border=3D0></A> </TD>
    <TD></TD>
    <TD><A href=3D"http://e-docs.bea.com/wls/docs81/pdf/jdbc.pdf"=20
      target=3Dpdf><IMG title=3D"View as PDF" height=3D44 alt=3D"View as =
PDF"=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/doc_nav_pdf.gif" =
width=3D59=20
      border=3D0></A></TD>
    <TD>&nbsp;</TD>
    <TD><A href=3D"http://www.adobe.com/products/acrobat/alternate.html" =

      target=3D_blank><IMG title=3D"Get Adobe Reader" height=3D44=20
      alt=3D"Get Adobe Reader"=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/get_reader.gif" =
width=3D52=20
      border=3D0></A></TD></TR></TBODY></TABLE><!-- Doc Nav End --><!-- =
CONTENT -->
<H1 class=3Dchaphead><A name=3D1054307></A>Configuring and Using =
WebLogic JDBC</H1>
<P><A name=3D1045624></A>You use the WebLogic Server Administration =
Console to=20
enable, configure, and monitor features of WebLogic Server, including =
JDBC=20
connection pools, data sources, and MultiPools. You can do the same =
tasks=20
programmatically using the JMX API and the <CODE=20
style=3D"FONT-FAMILY: courier">weblogic.Admin</CODE> command line =
utility. After=20
configuring JDBC connectivity components, you can use them in your=20
applications.</P>
<P><A name=3D1061441></A>The following sections describe how to program =
the JDBC=20
connectivity components:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1034804></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1053561">C=
onfiguring=20
  and Using Connection Pools</A>=20
  <LI type=3Dsquare><A name=3D1057016></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1056955">C=
onfiguring=20
  and Using DataSources</A>=20
  <LI type=3Dsquare><A name=3D1057023></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061596">M=
anaging=20
  Connection Pools</A>=20
  <LI type=3Dsquare><A name=3D1057031></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1050534">C=
onfiguring=20
  and Using Application-Scoped JDBC Connection Pools</A>=20
  <LI type=3Dsquare><A name=3D1034808></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1023962">C=
onfiguring=20
  and Using MultiPools</A> </LI></UL>
<P><A name=3D1046672></A>For additional information, see</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1046679></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/index.html">Administ=
ration=20
  Console Online Help</A>.=20
  <LI type=3Dsquare><A name=3D1053348></A><A=20
  href=3D"http://e-docs.bea.com/wls/docs81/javadocs/index.html">WebLogic =
Server=20
  Javadocs</A> for the following interfaces and packages:=20
  <UL type=3Ddisc>
    <LI type=3Ddisc><A name=3D1053633></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.configuration.JDBCConnectionPoolMBean</CODE>=
=20

    <LI type=3Ddisc><A name=3D1053634></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.configuration.JDBCDataSourceFactoryMBean</CO=
DE>=20

    <LI type=3Ddisc><A name=3D1053635></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.configuration.JDBCDataSourceMBean</CODE>=20

    <LI type=3Ddisc><A name=3D1053587></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.configuration.JDBCMultiPoolMBean</CODE>=20

    <LI type=3Ddisc><A name=3D1053724></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.configuration.JDBCTxDataSourceMBean</CODE>=20

    <LI type=3Ddisc><A name=3D1053757></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">weblogic.management.runtime.JDBCConnectionPoolRuntimeMBean</CODE=
>=20

    <LI type=3Ddisc><A name=3D1055261></A><CODE=20
    style=3D"FONT-FAMILY: courier">weblogic.jdbc.extensions</CODE>=20
</LI></UL></LI></UL>
<P>&nbsp;</P>
<HR noShade>

<H1 class=3Dhead1><A name=3D1053561></A>Configuring and Using Connection =
Pools<A=20
name=3Dprogramming001></A></H1>
<P><A name=3D1031516></A>A connection pool is a named group of identical =
JDBC=20
connections to a database that are created when the connection pool is =
deployed,=20
either at WebLogic Server startup or dynamically during run time. Your=20
application "borrows" a connection from the pool, uses it, then returns =
it to=20
the pool by closing it. Also see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/intro.html#1029888">Overvie=
w of=20
Connection Pools</A>.</P>
<H2 class=3Dhead2><A name=3D1031537></A>Advantages to Using Connection =
Pools<A=20
name=3Dprogramming002></A></H2>
<P><A name=3D1031529></A>Connection pools provide numerous performance =
and=20
application design advantages:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1023873></A>Using connection pools is far =
more=20
  efficient than creating a new connection for each client each time =
they need=20
  to access the database.=20
  <LI type=3Dsquare><A name=3D1023874></A>You do not need to hard-code =
details such=20
  as the DBMS username and password in your application.=20
  <LI type=3Dsquare><A name=3D1023875></A>You can limit the number of =
connections to=20
  your DBMS. This can be useful for managing licensing restrictions on =
the=20
  number of connections to your DBMS.=20
  <LI type=3Dsquare><A name=3D1023876></A>You can change the DBMS you =
are using=20
  without changing your application code. </LI></UL>
<P><A name=3D1035123></A>The attributes for a configuring a connection =
pool are=20
defined in the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc.html">Administr=
ation=20
Console Online Help</A>. There is also an API that you can use to=20
programmatically create connection pools in a running WebLogic Server; =
see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1049692">C=
reating a=20
Connection Pool Dynamically</A>. You can also use the command line; see =
the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/admin_ref/cli.html">Web Logic =
Server=20
Command-Line Interface Reference</A> . </P>
<H2 class=3Dhead2><A name=3D1035128></A>Creating a Connection Pool at =
Startup<A=20
name=3Dprogramming003></A></H2>
<P><A name=3D1032410></A>To create a startup (static) connection pool, =
you define=20
attributes and permissions in the Administration Console. WebLogic =
Server opens=20
JDBC connections to the database during the startup process and adds the =

connections to the pool. </P>
<P><A name=3D1047499></A>To configure a connection pool in the =
Administration=20
Console, in the navigation tree in the left pane, expand the Services =
and JDBC=20
nodes, then select Connection Pool. The right pane displays a list of =
existing=20
connection pools. Click the <EM>Configure a new JDBC Connection =
Pool</EM> text=20
link to create a connection pool.</P>
<P><A name=3D1048073></A>For step-by-step instructions and a description =
of=20
connection pool attributes, see the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_connection_pool=
s.html">Administration=20
Console Online Help</A>, available when you click the question mark in =
the=20
upper-right corner of the Administration Console. </P>
<H3 class=3Dhead3><A name=3D1049427></A><A =
name=3Djdbc_cp_size></A>Avoiding Server=20
Lockup with the Correct Number of Connections</H3>
<P><A name=3D1049428></A>When your applications attempt to get a =
connection from a=20
connection pool in which there are no available connections, the =
connection pool=20
throws an exception stating that a connection is not available in the =
connection=20
pool. To avoid this error, make sure your connection pool can expand to =
the size=20
required to accommodate your peak load of connection requests.</P>
<P><A name=3D1049429></A>To set the maximum number of connections for a =
connection=20
pool in the Administration Console, expand the navigation tree in the =
left pane=20
to show the =
Services<NOBR>=E2=80=94&gt;</NOBR>JDBC<NOBR>=E2=80=94&gt;</NOBR>Connectio=
n Pools=20
nodes and select a connection pool. Then, in the right pane, select the=20
Configuration<NOBR>=E2=80=94&gt;</NOBR>Connections tab and specify a =
value for <CODE=20
style=3D"FONT-FAMILY: courier">Maximum Capacity</CODE>.</P>
<H3 class=3Dhead3><A name=3D1049282></A>Database Passwords in Connection =
Pool=20
Configuration<A name=3Dpassword></A></H3>
<P><A name=3D1049283></A>When you create a connection pool, you =
typically include=20
at least one password to connect to the database. If you use an open =
string to=20
enable XA, you may use two passwords. You can enter the passwords as a=20
name-value pair in the <CODE style=3D"FONT-FAMILY: =
courier">Properties</CODE>=20
field or you can enter them in their respective fields:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1049284></A><CODE=20
  style=3D"FONT-WEIGHT: bold; FONT-FAMILY: courier">Password</CODE>. Use =
this=20
  field to set the database password. This value overrides any <CODE=20
  style=3D"FONT-FAMILY: courier">password</CODE> value defined in the =
<CODE=20
  style=3D"FONT-FAMILY: courier">Properties</CODE> passed to the tier-2 =
JDBC=20
  Driver when creating physical database connections. BEA recommends =
that you=20
  use the Password attribute in place of the password property in the =
properties=20
  string because the value is encrypted in the <CODE=20
  style=3D"FONT-FAMILY: courier">config.xml</CODE> file (stored as the =
<CODE=20
  style=3D"FONT-FAMILY: courier">Password</CODE> attribute in the <CODE=20
  style=3D"FONT-FAMILY: courier">JDBCConnectionPool</CODE> tag) and is =
hidden on=20
  the administration console.=20
  <LI type=3Dsquare><A name=3D1049285></A><CODE=20
  style=3D"FONT-WEIGHT: bold; FONT-FAMILY: courier">Open String =
Password</CODE>.=20
  Use this field to set the password in the open string that the =
transaction=20
  manager in WebLogic Server uses to open a database connection. This =
value=20
  overrides any password defined as part of the open string in the <CODE =

  style=3D"FONT-FAMILY: courier">Properties</CODE> field. The value is =
encrypted=20
  in the <CODE style=3D"FONT-FAMILY: courier">config.xml</CODE> file =
(stored as=20
  the <CODE style=3D"FONT-FAMILY: courier">XAPassword</CODE> attribute =
in the=20
  <CODE style=3D"FONT-FAMILY: courier">JDBCConnectionPool</CODE> tag) =
and is=20
  hidden on the Administration Console. At runtime, WebLogic Server =
reconstructs=20
  the open string with the password you specify in this field. The open =
string=20
  in the Properties field should follow this format:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1049286></A>openString=3DOracle_XA+Acc=3DP/userName/+SesTm=3D177+D=
B=3DdemoPool+Threads=3Dtrue=3DSqlnet=3Ddvi0+logDir=3D.</CODE></PRE></BLOC=
KQUOTE>
  <DL>
    <DT>
    <P class=3Dlistpara><A name=3D1049287></A>Note that after the <CODE=20
    style=3D"FONT-FAMILY: courier">userName</CODE> there is no password. =

  </P></DT></DL></LI></UL>
<P><A name=3D1049685></A>If you specify a password in the <CODE=20
style=3D"FONT-FAMILY: courier">Properties</CODE> field when you first =
configure=20
the connection pool, WebLogic Server removes the password from the <CODE =

style=3D"FONT-FAMILY: courier">Properties</CODE> string and sets the =
value as the=20
<CODE style=3D"FONT-FAMILY: courier">Password</CODE> value in an =
encrypted form=20
the next time you start WebLogic Server. If there is already a value for =
the=20
<CODE style=3D"FONT-FAMILY: courier">Password</CODE> attribute for the =
connection=20
pool, WebLogic Server does not change any values. However, the value for =
the=20
<CODE style=3D"FONT-FAMILY: courier">Password</CODE> attribute overrides =
the=20
password value in the <CODE style=3D"FONT-FAMILY: =
courier">Properties</CODE>=20
string. The same behavior applies to any password that you define as =
part of an=20
open string. For example, if you include the following properties when =
you first=20
configure a connection pool:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1051209></A>user=3Dscott;<BR>password=3Dtiger;<BR>openString=3DOra=
cle_XA+Acc=3Dp/scott/tiger+SesTm=3D177+db=3DjtaXaPool+Threads=3Dtrue+Sqln=
et=3Dlcs817+logDir=3D.+dbgFl=3D0x15;server=3Dlcs817</CODE></PRE></BLOCKQU=
OTE>
<P><A name=3D1051071></A>The next time you start WebLogic Server, it =
moves the=20
database password and the password included in the open string to the =
Password=20
and Open String Password attributes, respectively, and the following =
value=20
remains for the <CODE style=3D"FONT-FAMILY: courier">Properties</CODE> =
field:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1051273></A>user=3Dscott;<BR>openString=3DOracle_XA+Acc=3Dp/scott/=
+SesTm=3D177+db=3DjtaXaPool+Threads=3Dtrue+Sqlnet=3Dlcs817+logDir=3D.+dbg=
Fl=3D0x15;server=3Dlcs817</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1051267></A>After a value is established for the <CODE=20
style=3D"FONT-FAMILY: courier">Password</CODE> or <CODE=20
style=3D"FONT-FAMILY: courier">Open String Password</CODE> attributes, =
the values=20
in these attributes override the respective values in the <CODE=20
style=3D"FONT-FAMILY: courier">Properties</CODE> attribute. That is, =
continuing=20
with the previous example, if you specify <CODE=20
style=3D"FONT-FAMILY: courier">tiger2</CODE> as the database password in =
the <CODE=20
style=3D"FONT-FAMILY: courier">Properties</CODE> attribute, WebLogic =
Server=20
ignores the value and continues to use <CODE=20
style=3D"FONT-FAMILY: courier">tiger</CODE> as the database password, =
which is the=20
current encrypted value of the <CODE=20
style=3D"FONT-FAMILY: courier">Password</CODE> attribute. To change the =
database=20
password, you must change the <CODE style=3D"FONT-FAMILY: =
courier">Password</CODE>=20
attribute.</P>
<P><STRONG><A name=3D1051258></A>Note: </STRONG>The value for <CODE=20
style=3D"FONT-FAMILY: courier">Password</CODE> and <CODE=20
style=3D"FONT-FAMILY: courier">Open String Password</CODE> do not need =
to be the=20
same. </P>
<H2 class=3Dhead2><A name=3D1080562></A>SQL Statement Timeout =
Enhancements for=20
Pooled JDBC Connections<A name=3DStatementTimeout></A></H2>
<P><A name=3D1080730></A>In WebLogic Server 8.1SP3, the following =
attributes were=20
added to JDBC connection pools to enable you to limit the amount of time =
that a=20
statement can execute on a database connection from a JDBC connection =
pool:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1080740></A><CODE=20
  style=3D"FONT-FAMILY: courier">StatementTimeout</CODE>=E2=80=94The =
time in seconds after=20
  which a statement executing on a pooled JDBC connection times out. =
When set to=20
  -1, (the default) statements do not timeout.=20
  <LI type=3Dsquare><A name=3D1080789></A><CODE=20
  style=3D"FONT-FAMILY: courier">TestStatementTimeout</CODE>=E2=80=94The =
time in seconds=20
  after which a statement executing on a pooled JDBC connection for =
connection=20
  initialization or testing times out. When set to -1, (the default) =
statements=20
  do not timeout. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1055503">I=
nitializing=20
  Connections with a SQL Query</A> and <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
  Connection Pools and Database Connections</A> for more information =
about SQL=20
  statements used for initializing and testing connections. </LI></UL>
<P><A name=3D1081092></A>These attributes rely on underlying JDBC driver =
support.=20
WebLogic Server passes the time specified to the JDBC driver using the =
<CODE=20
style=3D"FONT-FAMILY: =
courier">java.sql.Statement.setQueryTimeout()</CODE> method.=20
If your JDBC driver does not support this method, it may throw an =
exception and=20
the timeout value is ignored.</P>
<P><STRONG><A name=3D1081028></A>Note: </STRONG>Using these features may =
cause a=20
performance degradation. You should test these features in a staging or =
testing=20
environment before using them in production.</P>
<DT>
<P class=3Dnotepara><STRONG><A name=3D1081175></A></STRONG>Also, these =
attributes=20
are not available in the Administration Console. You must manually edit =
the=20
<CODE style=3D"FONT-FAMILY: courier">config.xml</CODE> file to enable =
these=20
features.</P>
<H2 class=3Dhead2><A name=3D1080632></A>JDBC Connection Pool Testing =
Enhancements<A=20
name=3Djdbc_connection_pool_testing_enhancements></A></H2>
<P><A name=3D1080563></A>In WebLogic Server 8.1SP3, the following =
attributes were=20
added to JDBC connection pools to improve the functionality of database=20
connection testing for pooled connections:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1080564></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">CountOfTestFailuresTillFlush</CODE>=E2=80=94Closes all=20
  connections in the connection pool after the number of test failures =
that you=20
  specify to minimize the delay caused by further database testing. See =
<A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1080573">M=
inimizing=20
  Connection Test Delay After Database Connectivity Loss.</A>=20
  <LI type=3Dsquare><A name=3D1080568></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">CountOfRefreshFailuresTillDisable</CODE>=E2=80=94Disables=20
  the connection pool after the number of test failures that you specify =
to=20
  minimize the delay in handling the connection request after a database =

  failure. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1080583">M=
inimizing=20
  Connection Request Delay After Connection Test Failures.</A>=20
  <LI type=3Dsquare><A =
name=3D1081286></A>SecondsToTrustAnIdlePoolConnection=E2=80=94Skips=20
  the connection test if the connection was used or tested successfully =
within=20
  the time specified. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1081295">M=
inimizing=20
  Connection Request Delay with Seconds to Trust an Idle Pool =
Connection</A>.=20
  </LI></UL>
<H3 class=3Dhead3><A name=3D1080573></A>Minimizing Connection Test Delay =
After=20
Database Connectivity Loss</H3>
<P><A name=3D1080574></A>When connectivity to the DBMS is lost, even if =
only=20
momentarily, some or all of the JDBC connections in the connection pool=20
typically become defunct. If the connection pool is configured to test=20
connections on reserve (recommended), when an application requests a =
database=20
connection, WebLogic Server tests the connection, discovers that the =
connection=20
is dead, and tries to replace it with a new connection to satisfy the =
request.=20
Ordinarily, when the DBMS comes back online, the refresh process =
succeeds.=20
However, in some cases and for some modes of failure, testing a dead =
connection=20
can impose a long delay. This delay occurs for each dead connection in =
the=20
connection pool until all connections are replaced. </P>
<P><A name=3D1080575></A>To minimize the delay that occurs during the =
test of dead=20
database connections, you can set the <CODE=20
style=3D"FONT-FAMILY: courier">CountOfTestFailuresTillFlush</CODE> =
attribute on=20
the connection pool. With this attribute set, WebLogic Server considers=20
<EM>all</EM> connections in the connection pool as dead after the number =
of=20
consecutive test failures that you specify, and closes all connections =
in the=20
connection pool. </P>
<P><A name=3D1080576></A>When an application requests a connection, the =
connection=20
pool creates a connection without first having to test a dead =
connection. This=20
behavior minimizes the delay for connection requests following the =
connection=20
pool flush. </P>
<P><A name=3D1080577></A>You specify the <CODE=20
style=3D"FONT-FAMILY: courier">CountOfTestFailuresTillFlush</CODE> =
attribute in=20
the JDBCConnectionPool entry in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file. <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE> must also =
be set to=20
<CODE style=3D"FONT-FAMILY: courier">true</CODE>. For example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1080578></A>&lt;JDBCConnectionPool <BR>  =
CapacityIncrement=3D"1" <BR>  =
DriverName=3D"com.pointbase.xa.xaDataSource" <BR>  InitialCapacity=3D"2" =
MaxCapacity=3D"10" <BR>  Name=3D"demoXAPool" Password=3D"password"<BR>  =
Properties=3D"user=3Dexamples;<BR>    =
DatabaseName=3Djdbc:pointbase:server://localhost/demo" <BR>  =
Targets=3D"examplesServer" <BR> <STRONG> =
TestConnectionsOnReserve=3D"true"<BR>  =
CountOfTestFailuresTillFlush=3D"1"<BR>  =
</STRONG>TestTableName=3D"SYSTABLES"<BR>  =
URL=3D"jdbc:pointbase:server://localhost/demo" <BR>/&gt; =
</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1080579></A>Note: </STRONG>The <CODE=20
style=3D"FONT-FAMILY: courier">CountOfTestFailuresTillFlush</CODE> =
attribute is=20
not available in the Administration Console.</P>
<P><A name=3D1080580></A>If you tend to see small network glitches or =
have a=20
firewall that may occasionally kill only one socket or connection, you =
may want=20
to set the number of test failures to 2 or 3, but a value of 1 will =
provide the=20
best performance after database availability issues have been =
resolved.</P>
<H3 class=3Dhead3><A name=3D1080583></A>Minimizing Connection Request =
Delay After=20
Connection Test Failures</H3>
<P><A name=3D1080584></A>If your DBMS becomes and remains unavailable, =
the=20
connection pool will persistently test and try to replace dead =
connections while=20
trying to satisfy connection requests. This behavior is beneficial =
because it=20
enables the connection pool to react immediately when the database =
becomes=20
available. However, testing a dead database connection can take as long =
as the=20
network timeout, and can cause a long delay for clients.</P>
<P><A name=3D1080585></A>To minimize the delay that occurs for client =
applications=20
while a database is unavailable, you can set the <CODE=20
style=3D"FONT-FAMILY: courier">CountOfRefreshFailuresTillDisable</CODE> =
attribute=20
on the connection pool. With this attribute set, WebLogic Server =
disables the=20
connection pool after the number of consecutive failures to replace a =
dead=20
connection. When an application requests a connection from a disabled =
connection=20
pool, WebLogic Server throws a <CODE=20
style=3D"FONT-FAMILY: courier">ConnectDisabledException</CODE> =
immediately to=20
notify the client that a connection is not available.</P>
<P><A name=3D1080586></A>For connection pools that are disabled in this =
manner,=20
WebLogic Server periodically run the refresh process. When the refresh =
process=20
succeeds in creating a new database connection, WebLogic Server =
re-enables the=20
connection pool. You can also manually re-enable the connection pool =
using the=20
administration console or the <CODE style=3D"FONT-FAMILY: =
courier">weblogic.Admin=20
ENABLE_POOL</CODE> command. </P>
<P><A name=3D1080587></A>You specify the <CODE=20
style=3D"FONT-FAMILY: courier">CountOfRefreshFailuresTillDisable</CODE> =
attribute=20
in the JDBCConnectionPool entry in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file. <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE> must also =
be set to=20
<CODE style=3D"FONT-FAMILY: courier">true</CODE>. For example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1080588></A>&lt;JDBCConnectionPool <BR>  =
CapacityIncrement=3D"1" <BR>  =
DriverName=3D"com.pointbase.xa.xaDataSource" <BR>  InitialCapacity=3D"2" =
MaxCapacity=3D"10" <BR>  Name=3D"demoXAPool" Password=3D"password"<BR>  =
Properties=3D"user=3Dexamples;<BR>    =
DatabaseName=3Djdbc:pointbase:server://localhost/demo" <BR>  =
Targets=3D"examplesServer" <BR> <STRONG> =
TestConnectionsOnReserve=3D"true"<BR>  =
CountOfRefreshFailuresTillDisable=3D"1"<BR>  =
</STRONG>TestTableName=3D"SYSTABLES"<BR>  =
URL=3D"jdbc:pointbase:server://localhost/demo" <BR>/&gt; =
</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1080589></A>Note: </STRONG>The <CODE=20
style=3D"FONT-FAMILY: courier">CountOfRefreshFailuresTillDisable</CODE> =
attribute=20
is not available in the Administration Console.</P>
<P><A name=3D1080590></A>If you tend to see small network glitches or =
have a=20
firewall that may occasionally kill only one socket or connection, you =
may want=20
to set the number of refresh failures to 2 or 3, but a value of 1 will =
usually=20
provide the best performance.</P>
<H3 class=3Dhead3><A name=3D1081295></A>Minimizing Connection Request =
Delay with=20
Seconds to Trust an Idle Pool Connection<A=20
name=3DSecondsToTrustAnIdlePoolConnection></A></H3>
<P><A name=3D1081305></A>Database connection testing during heavy =
traffic can=20
reduce application performance. To minimize the impact of connection =
testing,=20
you can set the SecondsToTrustAnIdlePoolConnection attribute in the JDBC =

connection pool configuration to trust recently-used or recently-tested =
database=20
connections as viable and skip the connection test.</P>
<P><A name=3D1081331></A>If your connection pool is configured to test =
connections=20
on reserve (recommended), when an application requests a database =
connection,=20
WebLogic Server tests the database connection before giving it to the=20
application. If the request is made within the time specified for=20
SecondsToTrustAnIdlePoolConnection since the connection was tested or=20
successfully used and returned to the connection pool, WebLogic Server =
skips the=20
connection test before delivering it to the application.</P>
<P><A name=3D1081307></A>If your connection pool is configured to =
periodically=20
test available connections in the connection pool (TestFrequencySeconds =
is=20
specified), WebLogic Server also skips the connection test if the =
connection was=20
successfully used and returned to the connection pool within the time =
specified=20
for SecondsToTrustAnIdlePoolConnection.</P>
<P><A name=3D1081372></A>To set SecondsToTrustAnIdlePoolConnection, you =
can=20
specify the value on the JDBC Connection Pool <NOBR>=E2=80=94&gt;</NOBR> =
Configuration=20
<NOBR>=E2=80=94&gt;</NOBR> Connections tab in the Administration =
Console. See "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/domain_jdbcconnectio=
npool_config_connections.html">JDBC=20
Connection Pool --&gt; Configuration --&gt; Connections</A>" in the=20
<EM>Administration Console Online Help</EM>. You can also set it =
directly in the=20
<CODE style=3D"FONT-FAMILY: courier">config.xml</CODE> file. For =
example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1081494></A>&lt;JDBCConnectionPool <BR>  =
CapacityIncrement=3D"1" <BR>  =
DriverName=3D"com.pointbase.xa.xaDataSource" <BR>  InitialCapacity=3D"2" =
MaxCapacity=3D"10" <BR>  Name=3D"demoXAPool" Password=3D"password"<BR>  =
Properties=3D"user=3Dexamples;<BR>    =
DatabaseName=3Djdbc:pointbase:server://localhost/demo" <BR>  =
Targets=3D"examplesServer" <BR> <STRONG> =
SecondsToTrustAnIdlePoolConnection=3D"15"<BR>  =
TestConnectionsOnreserve=3D"true"<BR>  =
</STRONG>TestTableName=3D"SYSTABLES"<BR>  =
URL=3D"jdbc:pointbase:server://localhost/demo" <BR>/&gt; =
</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1081303></A>SecondsToTrustAnIdlePoolConnection is a tuning =
feature=20
that can improve application performance by minimizing the delay caused =
by=20
database connection testing, especially during heavy traffic. However, =
it can=20
reduce the effectiveness of connection testing, especially if the value =
is set=20
too high. The appropriate value depends on your environment and the =
likelihood=20
that a connection will become defunct.</P>
<H2 class=3Dhead2><A name=3D1049692></A><A =
name=3Ddynamic_conn_pool></A>Creating a=20
Connection Pool Dynamically <A name=3Dprogramming004></A><A=20
name=3Ddynamic_conn_pool></A></H2>
<P><A name=3D1023891></A>The <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPool</CODE> administration =
MBean as=20
part of the WebLogic Server management architecture (JMX). You can use =
the JMX=20
API to create and configure a connection pool dynamically from within a =
Java=20
application. That is, from your client or server application code, you =
can=20
create a connection pool in a WebLogic Server instance that is already =
running.=20
</P>
<P><A name=3D1050436></A>You can also use the <CODE=20
style=3D"FONT-FAMILY: courier">CREATE_POOL</CODE> command in the =
WebLogic Server=20
command line interface to dynamically create a connection pool. See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/admin_ref/cli.html#cli_create_po=
ol">CREATE_POOL</A>.</P>
<P><A name=3D1036328></A>To dynamically create a connection pool using =
the JMX=20
API, follow these main steps:</P>
<OL>
  <DIV class=3Dlists>
  <LI value=3D1><A name=3D1036337></A>Import required packages. =
</LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D2><A name=3D1036384></A>Look up the administration =
MBeanHome in the=20
  JNDI tree. </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D3><A name=3D1036341></A>Get the server MBean. </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D4><A name=3D1036373></A>Create the connection pool MBean. =
</LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D5><A name=3D1036395></A>Set the properties for the =
connection pool.=20
  </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D6><A name=3D1036406></A>Add the target. </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D7><A name=3D1045272></A>Create a DataSource object. =
</LI></DIV></OL>
<P><STRONG><A name=3D1027910></A>Note: </STRONG>Dynamically created =
connection=20
pools must use dynamically created DataSource objects. For a DataSource =
to=20
exist, it must be associated with a connection pool. Also, a one-to-one=20
relationship exists between DataSource objects and connection pools in =
WebLogic=20
Server. Therefore, you must create a DataSource to use with a connection =

pool.</P>
<P><A name=3D1023892></A>When you create a connection pool using the JMX =
API, the=20
connection pool is added to the server configuration and will be =
available even=20
if you stop and restart the server. If you do not want the connection =
pool to be=20
persistent, you must remove it programmatically.</P>
<P><A name=3D1036701></A>For more information about using MBeans to =
manage=20
WebLogic Server, see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jmx/index.html">Programming =
WebLogic=20
Management Services with JMX</A>. For more information about the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPool</CODE> MBean, see the =
<A=20
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/management/con=
figuration/JDBCConnectionPoolMBean.html">Javadoc</A>=20
at.</P>
<H2 class=3Dhead2><A name=3D1038230></A>Dynamic Connection Pool Sample =
Code<A=20
name=3Dprogramming007></A></H2>
<P><A name=3D1048533></A>The following sections show code samples for =
performing=20
the main steps to create a connection pool dynamically.</P>
<H3 class=3Dhead3><A name=3D1038257></A>Import Packages</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1048265></A>import java.sql.*;<BR>import =
java.util.*;<BR>import javax.naming.Context;<BR>import =
javax.sql.DataSource;<BR>import weblogic.jndi.Environment;<BR>import =
weblogic.management.configuration.JDBCConnectionPoolMBean;<BR>import =
weblogic.management.runtime.JDBCConnectionPoolRuntimeMBean;<BR>import =
weblogic.management.configuration.JDBCTxDataSourceMBean;<BR>import =
weblogic.management.configuration.ServerMBean;<BR>import =
weblogic.management.MBeanHome;<BR>import =
weblogic.management.WebLogicObjectName;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1061933></A>String cpName =3D null;<BR>String =
cpJNDIName =3D null;</CODE></PRE></BLOCKQUOTE>
<H3 class=3Dhead3><A name=3D1039508></A>Look Up the Administration =
MBeanHome</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044849></A>mbeanHome =3D =
(MBeanHome)ctx.lookup(MBeanHome.ADMIN_JNDI_NAME);</CODE></PRE></BLOCKQUOT=
E>
<H3 class=3Dhead3><A name=3D1039519></A>Get the Server MBean</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1082154></A>svrAdminMBean =3D =
(ServerMBean)mbeanHome.getAdminMBean("myserver",<BR> =
"Server");</CODE></PRE></BLOCKQUOTE>
<H3 class=3Dhead3><A name=3D1082156></A>Create the Connection Pool =
MBean</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1040165></A>  // Create ConnectionPool MBean<BR>  =
cpMBean =3D (JDBCConnectionPoolMBean)mbeanHome.createAdminMBean(<BR>    =
cpName, "JDBCConnectionPool", <BR>    =
mbeanHome.getDomainName());</CODE></PRE></BLOCKQUOTE>
<H3 class=3Dhead3><A name=3D1039591></A>Set the Connection Pool =
Properties</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1040646></A>  Properties pros =3D new =
Properties();<BR>  pros.put("user", "scott");<BR>    pros.put("server", =
"dbserver1t1");</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1040647></A>  // Set DataSource attributes<BR>  =
cpMBean.setURL("jdbc:weblogic:oracle");<BR>  =
cpMBean.setDriverName("weblogic.jdbc.oci.xa.XADataSource");<BR>  =
cpMBean.setProperties(pros);<BR>  =
<STRONG>cpMBean.setPassword("tiger");</STRONG></CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1044557></A>Note: </STRONG>In this example, the =
database=20
password is set using the <CODE=20
style=3D"FONT-FAMILY: courier">setPassword(String)</CODE> method instead =
of=20
including it with the user and server names in <CODE=20
style=3D"FONT-FAMILY: courier">Properties</CODE>. When you use the <CODE =

style=3D"FONT-FAMILY: courier">setPassword(String)</CODE> method, =
WebLogic Server=20
encrypts the password in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file and when displayed =
on the=20
administration console. BEA recommends that you use this method to avoid =
storing=20
database passwords in clear text in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file.</P>
<H3 class=3Dhead3><A name=3D1039621></A>Add the Target</H3>
<P><A name=3D1061755></A>When you add a deployment target, the =
connection pool is=20
deployed and database connections in the connection pool are =
created.</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1040674></A>  =
cpMBean.addTarget(serverMBean);</CODE></PRE></BLOCKQUOTE>
<H3 class=3Dhead3><A name=3D1057046></A>Create a DataSource</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1061267></A>public void createDataSource() throws =
SQLException {<BR>  try {<BR>    // Get context<BR>    Environment env =
=3D new Environment();<BR>    env.setProviderUrl(url);<BR>    =
env.setSecurityPrincipal(userName);<BR>    =
env.setSecurityCredentials(password);<BR>    ctx =3D =
env.getInitialContext();</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045445></A>      // Create TxDataSource  MBean<BR>   =
   dsMBean =3D (JDBCTxDataSourceMBean)mbeanHome.createAdminMBean(<BR>    =
    cpName, "JDBCTxDataSource",<BR>        =
mbeanHome.getDomainName());</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045446></A>      // Set TxDataSource attributes<BR>  =
    dsMBean.setJNDIName(cpJNDIName);<BR>      =
dsMBean.setPoolName(cpName);</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045447></A>      // Startup datasource<BR>      =
dsMBean.addTarget(serverMBean);</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045448></A>    } catch (Exception ex) {<BR>      =
ex.printStackTrace();<BR>      throw new =
SQLException(ex.toString());</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045449></A>    }</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1045450></A>  }</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1060382></A>Note: </STRONG>The JDBCDataSourceMBean =
is=20
deprecated in WebLogic server 8.1. Use the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCTxDataSourceMBean</CODE> instead. The =

attributes that are not available in the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCTxDataSourceMBean</CODE> (<CODE=20
style=3D"FONT-FAMILY: courier">WaitForConnectionEnabled</CODE> and <CODE =

style=3D"FONT-FAMILY: courier">ConnectionWaitPeriod</CODE>) have been =
deprecated=20
and are replaced with the <CODE=20
style=3D"FONT-FAMILY: courier">ConnectionReserveTimeoutSeconds</CODE> =
attribute in=20
the <CODE style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE>. =
See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057259">E=
nabling=20
Connection Requests to Wait for a Connection</A>.</P>
<H3 class=3Dhead3><A name=3D1055278></A>Removing a Dynamic Connection =
Pool and=20
DataSource</H3>
<P><A name=3D1041095></A>The following code sample shows how to remove a =

dynamically created connection pool. If you do not remove dynamically =
created=20
connection pools, they will remain available even after the server is =
stopped=20
and restarted.</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1040799></A>public void deleteConnectionPool() throws =
SQLException {<BR>  try {<BR>    // Remove dynamically created =
connection pool from the server<BR>    =
cpMBean.removeTarget(serverMBean);<BR>    // Remove dynamically created =
connection pool from the configuration<BR>    =
mbeanHome.deleteMBean(cpMBean);<BR>  } catch (Exception ex) {<BR>    =
throw new SQLException(ex.toString());<BR>  =
}<BR>}</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044674></A>public void deleteDataSource() throws =
SQLException {</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044676></A>    try {</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044677></A>      // Remove dynamically created =
TxDataSource from the server</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044678></A>      =
dsMBean.removeTarget(serverMBean);</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044679></A>      // Remove dynamically created =
TxDataSource from the configuration</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044680></A>      =
mbeanHome.deleteMBean(dsMBean);</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044681></A>    } catch (Exception ex) =
{</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044682></A>      throw new =
SQLException(ex.toString());</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044683></A>    }</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1044672></A>  }</CODE></PRE></BLOCKQUOTE>
<P>&nbsp;</P>
<HR noShade>

<H1 class=3Dhead1><A name=3D1056955></A>Configuring and Using =
DataSources<A=20
name=3Dprogramming030></A><A name=3Duse_ds></A></H1>
<P><A name=3D1056958></A>As with Connection Pools and MultiPools, you =
can create=20
DataSource objects in the Administration Console or using the WebLogic=20
Management API. DataSource objects can be defined with or without =
transaction=20
services. You configure connection pools and MultiPools before you =
define the=20
pool name attribute for a DataSource. </P>
<P><A name=3D1056960></A>DataSource objects, along with the JNDI, =
provide access=20
to connection pools for database connectivity. Each DataSource can refer =
to one=20
connection pool or MultiPool. However, you can define multiple =
DataSources that=20
use a single connection pool. This allows you to define both transaction =
and=20
non-transaction-enabled DataSource objects that share the same =
database.</P>
<P><A name=3D1056961></A>WebLogic Server supports two types of =
DataSource=20
objects:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1056962></A>DataSources (for local =
transactions only)=20
  <LI type=3Dsquare><A name=3D1056963></A>TxDataSources (for distributed =

  transactions) </LI></UL>
<P><STRONG><A name=3D1061114></A>Note: </STRONG>In the Administration =
Console,=20
Data Sources and Tx Data Sources are distinguished by the Honor Global=20
Transactions setting that you select when you create the datasource:</P>
<DT>
<P class=3Dnotepara><STRONG><A name=3D1061118></A></STRONG><CODE=20
style=3D"FONT-FAMILY: courier">true</CODE> for Tx Data Sources</P>
<DT>
<P class=3Dnotepara><STRONG><A name=3D1061122></A></STRONG><CODE=20
style=3D"FONT-FAMILY: courier">false</CODE> for Data Sources =
(non-Tx)</P>
<DT>
<P class=3Dnotepara><STRONG><A name=3D1061129></A></STRONG>Tx Data =
Sources are=20
created by default when you create the data source in the Administration =

Console.</P>
<P><A name=3D1056964></A>If your application meets any of the following =
criteria,=20
you should use a TxDataSource in WebLogic Server:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1056965></A>Uses the Java Transaction API =
(JTA)=20
  <LI type=3Dsquare><A name=3D1056966></A>Uses the WebLogic Server EJB =
container to=20
  manage transactions=20
  <LI type=3Dsquare><A name=3D1056967></A>Includes updates to multiple =
databases=20
  during a single transaction. </LI></UL>
<P><A name=3D1056968></A>The only time you should use a non-Tx Data =
Source is when=20
you want to do some work on the database that you do not want to include =
in the=20
current transaction.</P>
<P><A name=3D1061762></A>If you want applications to use a DataSource =
(Tx or=20
non-Tx) to get a database connection from a connection pool (the =
preferred=20
method), you should define the DataSource in the Administration Console =
before=20
running your application. For more information about how to configure a=20
DataSource and when to use a TxDataSource, see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_datasources.htm=
l">JDBC=20
DataSources</A>.</P>
<P><STRONG><A name=3D1060424></A>Note: </STRONG>The JDBCDataSourceMBean =
is=20
deprecated in WebLogic server 8.1. Use the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCTxDataSourceMBean</CODE> instead. The =

attributes that are not available in the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCTxDataSourceMBean</CODE> (<CODE=20
style=3D"FONT-FAMILY: courier">WaitForConnectionEnabled</CODE> and <CODE =

style=3D"FONT-FAMILY: courier">ConnectionWaitPeriod</CODE>) have been =
deprecated=20
and are replaced with the <CODE=20
style=3D"FONT-FAMILY: courier">ConnectionReserveTimeoutSeconds</CODE> =
attribute in=20
the <CODE style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE>. =
See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057259">E=
nabling=20
Connection Requests to Wait for a Connection</A>.</P>
<H2 class=3Dhead2><A name=3D1056974></A>Importing Packages to Access =
DataSource=20
Objects</H2>
<P><A name=3D1056975></A>To use the DataSource objects in your =
applications,=20
import the following classes in your client code:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1056976></A>import java.sql.*;<BR>import =
java.util.*;<BR>import javax.naming.*;</CODE></PRE></BLOCKQUOTE>
<H2 class=3Dhead2><A name=3D1056980></A>Obtaining a Client Connection =
Using a=20
DataSource<A name=3Dds_connection></A><A name=3Dprogramming033></A></H2>
<P><A name=3D1056981></A>To obtain a connection for a JDBC client, use a =
Java=20
Naming and Directory Interface (JDNI) lookup to locate the DataSource =
object, as=20
shown in the following code fragment.</P>
<P><STRONG><A name=3D1081217></A>Note: </STRONG>When using a JDBC =
connection in a=20
client-side application, the <EM>exact same</EM> JDBC driver classes =
must be in=20
the <CODE style=3D"FONT-FAMILY: courier">CLASSPATH</CODE> on both the =
server and=20
the client. If the driver classes do not match, you may see <CODE=20
style=3D"FONT-FAMILY: courier">java.rmi.UnmarshalException</CODE> =
exceptions.</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067370></A>Context ctx =3D null;<BR>  Hashtable ht =
=3D new Hashtable();<BR>  ht.put(Context.INITIAL_CONTEXT_FACTORY,<BR>    =
     "weblogic.jndi.WLInitialContextFactory");<BR>  =
ht.put(Context.PROVIDER_URL,<BR>         =
"t3://hostname:port");</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067371></A>  Connection conn =3D null;<BR>  =
Statement stmt =3D null;<BR>  ResultSet rs =3D =
null;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067372></A>  try {<BR>    ctx =3D new =
InitialContext(ht);<BR>    javax.sql.DataSource ds <BR>      =3D =
(javax.sql.DataSource) ctx.lookup ("myDataSource");<BR>    conn =3D =
ds.getConnection();</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067373></A>   // You can now use the conn object to =
create <BR>   //  Statements and retrieve result =
sets:</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067374></A>    stmt =3D conn.createStatement();<BR>  =
  stmt.execute("select * from someTable");<BR>    rs =3D =
stmt.getResultSet(); </CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067375></A>...</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067376></A>//Close JDBC objects as soon as =
possible<BR>    stmt.close();<BR>    =
stmt=3Dnull;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067377></A>    conn.close();<BR>    =
conn=3Dnull;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1067378></A> }<BR>  catch (Exception e) {<BR>    // a =
failure occurred<BR>    log message;<BR>  }<BR>finally {    <BR>  try { =
<BR>    ctx.close(); <BR>  } catch (Exception e) {<BR>     log message; =
}<BR>  try { <BR>    if (rs !=3D null) rs.close(); <BR>  } catch =
(Exception e) {  <BR>     log message; }<BR>  try { <BR>    if (stmt =
!=3D null) stmt.close(); <BR>  } catch (Exception e) {  <BR>     log =
message; }<BR>  try { <BR>    if (conn !=3D null) conn.close(); <BR>  } =
catch (Exception e) {  <BR>     log message; =
}<BR>}</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1056988></A>(Substitute the correct <CODE =
style=3D"FONT-FAMILY: courier">hostname</CODE> and <CODE =
style=3D"FONT-FAMILY: courier">port</CODE> number for your WebLogic =
Server.)</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1056989></A>Note: </STRONG>The code above uses one =
of several=20
available procedures for obtaining a JNDI context. For more information =
on JNDI,=20
see <A =
href=3D"http://e-docs.bea.com/wls/docs81/jndi/index.html">Programming=20
WebLogic JNDI</A><CODE style=3D"FONT-FAMILY: courier">.</CODE></P>
<H2 class=3Dhead2><A name=3D1057195></A>Possible Exceptions When a =
Connection=20
Request Fails<A name=3Dconn_exceptions></A></H2>
<P><A name=3D1057199></A>The weblogic.jdbc.extensions package includes =
the=20
following exceptions that can be thrown when an application request =
fails. Each=20
exception extends <CODE=20
style=3D"FONT-FAMILY: courier">java.sql.SQLException</CODE>.</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1057815></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">ConnectionDeadSQLException</CODE>=E2=80=94generated when=20
  an application request to get a connection fails because the =
connection test=20
  on the reserved connection failed. This typically happens when the =
database=20
  server is unavailable. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
  Connection Pools and Database Connections</A>.=20
  <LI type=3Dsquare><A name=3D1057834></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">ConnectionUnavailableSQLException</CODE>=E2=80=94generated=20
  when an application request to get a connection fails because there =
are=20
  currently no connections available in the pool to be allocated. This =
is a=20
  transient failure, and is generated if all connections in the pool are =

  currently in use. It can also be thrown when connections are =
unavailable=20
  because they are being tested. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
  Connection Pools and Database Connections</A>.=20
  <LI type=3Dsquare><A name=3D1057827></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">PoolDisabledSQLException</CODE>=E2=80=94generated when an=20
  application request to get a connection fails because the JDBC =
Connection Pool=20
  has been administratively disabled. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1055751">S=
uspending=20
  a Connection Pool</A>.=20
  <LI type=3Dsquare><A name=3D1057858></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">PoolLimitSQLException</CODE>=E2=80=94generated when an=20
  application request to get a connection fails due to a configured =
threshold of=20
  the connection pool, such as <CODE=20
  style=3D"FONT-FAMILY: courier">HighestNumWaiters</CODE>, <CODE=20
  style=3D"FONT-FAMILY: courier">ConnectionReserveTimeoutSeconds</CODE>, =
and so=20
  forth. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057259">E=
nabling=20
  Connection Requests to Wait for a Connection</A>.=20
  <LI type=3Dsquare><A name=3D1057852></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">PoolPermissionsSQLException</CODE>=E2=80=94generated when=20
  an application request to get a connection fails a (security) =
authentication=20
  or authorization check. </LI></UL>
<H2 class=3Dhead2><A name=3D1061453></A>Connection Pool Limitation<A=20
name=3Dnon-standard_SQL></A></H2>
<P><A name=3D1067275></A>When using connection pools, it is possible to =
execute=20
DBMS-specific SQL code that will alter the database connection =
properties and=20
that WebLogic Server and the JDBC driver will be unaware of. When the =
connection=20
is returned to the connection pool, the characteristics of the =
connection may=20
not be set back to a valid state. For example, with a Sybase DBMS, if =
you use a=20
statement such as <CODE style=3D"FONT-FAMILY: courier">"set rowcount 3 =
select *=20
from y"</CODE>, the connection will only ever return a maximum of 3 rows =
from=20
any subsequent query on this connection. When the connection is returned =
to the=20
connection pool and then reused, the next user of the connection will =
still only=20
get 3 rows returned, even if the table being selected from has 500 rows. =
</P>
<P><A name=3D1062133></A>In most cases, there is standard JDBC code that =
can=20
accomplish the same result. In this example, you could use <CODE=20
style=3D"FONT-FAMILY: courier">setMaxRows()</CODE> instead of <CODE=20
style=3D"FONT-FAMILY: courier">set rowcount</CODE>. BEA recommends that =
you use=20
the standard JDBC code instead of the DBMS-specific SQL code. When you =
use=20
standard JDBC calls to alter the connection, Weblogic Server returns the =

connection to a standard state when the connection is returned to the =
connection=20
pool.</P>
<P><A name=3D1061588></A>If you use DBMS-specific SQL code that alters =
the=20
connection, you must set the connection back to an acceptable state =
before=20
returning the connection to the connection pool.</P>
<P>&nbsp;</P>
<HR noShade>

<H1 class=3Dhead1><A name=3D1061596></A>Managing Connection Pools<A=20
name=3Dcp_mgmt></A><A name=3Dprogramming014></A></H1>
<P><A name=3D1052909></A>The <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPool</CODE> and <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolRuntime</CODE> MBeans =
provide=20
methods to manage connection pools and obtain information about them. =
All of=20
these management options are available in the Administration Console. =
However,=20
you can also use the methods provided to manage connection pools using =
the JMX=20
API. Methods are provided for these and other operations: </P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1058658></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1060759">G=
etting=20
  Status and Statistics for a Connection Pool</A>=20
  <LI type=3Dsquare><A name=3D1061095></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1023922">E=
nabling=20
  Connection Creation Retries</A>=20
  <LI type=3Dsquare><A name=3D1058663></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1055503">I=
nitializing=20
  Connections with a SQL Query</A>=20
  <LI type=3Dsquare><A name=3D1058668></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
  Connection Pools and Database Connections</A>=20
  <LI type=3Dsquare><A name=3D1058687></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057259">E=
nabling=20
  Connection Requests to Wait for a Connection</A>=20
  <LI type=3Dsquare><A name=3D1058691></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057291">C=
onfiguring=20
  and Managing the Statement Cache for a Connection Pool</A>=20
  <LI type=3Dsquare><A name=3D1058696></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1057349">S=
hrinking=20
  a Connection Pool</A>=20
  <LI type=3Dsquare><A name=3D1058705></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1058171">R=
esetting=20
  a Connection Pool</A>=20
  <LI type=3Dsquare><A name=3D1058716></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1055751">S=
uspending=20
  a Connection Pool</A>=20
  <LI type=3Dsquare><A name=3D1058720></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1058224">R=
esuming=20
  a Connection Pool</A> </LI></UL>
<P><A name=3D1055350></A>To see all of the methods available and for =
more=20
information about the methods described in this section, see the =
Javadocs for=20
the following MBeans:</P>
<UL type=3Dsquare>
  <UL type=3Dsquare>
    <LI type=3Dsquare><A name=3D1055352></A><A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/management/con=
figuration/JDBCConnectionPoolMBean.html">JDBCConnectionPoolMBean</A>
    <LI type=3Dsquare><A name=3D1055354></A><A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/management/run=
time/JDBCConnectionPoolRuntimeMBean.html">JDBCConnectionPoolRuntimeMBean<=
/A></LI></UL></UL>
<H2 class=3Dhead2><A name=3D1060759></A>Getting Status and Statistics =
for a=20
Connection Pool</H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1060775></A>JDBCConnectionPoolRuntimeMBean.getState()</CODE></PRE>=
</BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1061156></A>JDBCConnectionPoolRuntimeMBean.getActiveConnectionsAve=
rageCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getActiveConnectionsCurrentCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getActiveConnectionsHighCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getConnectionLeakProfileCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getConnectionsTotalCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getCurrCapacity() =
<BR>JDBCConnectionPoolRuntimeMBean.getFailuresToReconnectCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getHighestNumAvailable() =
<BR>JDBCConnectionPoolRuntimeMBean.getHighestNumUnavailable() =
<BR>JDBCConnectionPoolRuntimeMBean.getLeakedConnectionCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getMaxCapacity() =
<BR>JDBCConnectionPoolRuntimeMBean.getNumAvailable() =
<BR>JDBCConnectionPoolRuntimeMBean.getNumUnavailable() =
<BR>JDBCConnectionPoolRuntimeMBean.getStatementProfileCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getVersionJDBCDriver() =
<BR>JDBCConnectionPoolRuntimeMBean.getWaitingForConnectionCurrentCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getWaitingForConnectionHighCount() =
<BR>JDBCConnectionPoolRuntimeMBean.getWaitSecondsHighCount() =
</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1060884></A>The <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolRuntimeMBean</CODE> =
provides=20
methods for getting the current state of the connection pool and for =
getting=20
statistics about the connection pool, such as the average number of =
active=20
connections, the current number of active connections, the highest =
number of=20
active connections, and so forth.</P>
<P><A name=3D1061045></A>The <CODE style=3D"FONT-FAMILY: =
courier">getState()</CODE>=20
method returns the current state of the connection pool. The current =
state can=20
be: </P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1060885></A><CODE=20
  style=3D"FONT-FAMILY: courier">Running</CODE> if the pool is enabled =
(deployed=20
  and not suspended). This is the normal state of the connection pool.=20
  <LI type=3Dsquare><A name=3D1060886></A><CODE=20
  style=3D"FONT-FAMILY: courier">Suspended</CODE> if the pool is =
disabled.=20
  <LI type=3Dsquare><A name=3D1061064></A><CODE=20
  style=3D"FONT-FAMILY: courier">Shutdown</CODE> if the pool is shutdown =
and all=20
  database connections have been closed.=20
  <LI type=3Dsquare><A name=3D1060887></A><CODE=20
  style=3D"FONT-FAMILY: courier">Unknown</CODE> if the pool state is =
unknown.=20
  <LI type=3Dsquare><A name=3D1060888></A><CODE=20
  style=3D"FONT-FAMILY: courier">Unhealthy</CODE> if all connections are =

  unavailable (not because they are in use). This state occurs if the =
database=20
  server is unavailable when the connection pool is created (creation =
retry must=20
  be enabled) or if all connections have failed connection tests (on =
creation,=20
  on reserve, on release, or periodic testing). </LI></UL>
<P><A name=3D1060773></A>For more information about methods for getting =
connection=20
pool statistics, see the Javadoc for the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/management/run=
time/JDBCConnectionPoolRuntimeMBean.html">JDBCConnectionPoolRuntimeMBean<=
/A>.=20
Also see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
Connection Pools and Database Connections</A>.</P>
<H2 class=3Dhead2><A name=3D1023922></A>Enabling Connection Creation =
Retries<A=20
name=3Dconnection_retry></A><A name=3Dconnection_retries></A></H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1055521></A>JDBCConnectionPoolMBean.setConnectionCreationRetryFreq=
uencySeconds(int seconds)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1055684></A>The <CODE=20
style=3D"FONT-FAMILY: =
courier">setConnectionCreationRetryFrequencySeconds()</CODE>=20
method sets the number of seconds between attempts to create database=20
connections when the connection pool is created. If you do not set this =
value,=20
connection pool creation fails if the database is unavailable. If set =
and if the=20
database is unavailable when the connection pool is created, WebLogic =
Server=20
will attempt to create connections in the pool again after the number of =
seconds=20
you specify, and will continue to attempt to create the connections =
until it=20
succeeds. </P>
<P><A name=3D1055650></A>By default, this attribute is set to <CODE=20
style=3D"FONT-FAMILY: courier">0</CODE>, which disables connection =
creation=20
retries.</P>
<P><STRONG><A name=3D1067572></A>Note: </STRONG>Do not use connection =
creation=20
retries with connection pools in a High Availability MultiPool. =
Connection=20
requests to the MultiPool will fail (not fail-over) when a connection =
pool in=20
the list is dead and the number of connection requests equals the number =
of=20
connections in the first connection pool, even if connections are =
available in=20
subsequent connection pools in the MultiPool.</P>
<H2 class=3Dhead2><A name=3D1055503></A>Initializing Connections with a =
SQL=20
Query</H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1055695></A>JDBCConnectionPoolMBean.setInitSQL(java.lang.String =
string)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1056420></A>With the <CODE=20
style=3D"FONT-FAMILY: courier">setInitSQL()</CODE> method, you set a =
value for the=20
<CODE style=3D"FONT-FAMILY: courier">initSQL</CODE> MBean attribute. =
WebLogic=20
Server runs this SQL code whenever it creates a database connection for =
the=20
connection pool, which includes at server startup, when expanding the =
connection=20
pool, when deploying the connection pool on a server, and when =
refreshing a=20
connection. In essence, WebLogic Server "primes" the connection with =
this SQL=20
code before applications can use the connection. You can use this =
feature to set=20
DBMS-specific operational settings that are connection-specific or to =
ensure=20
that a connection has memory or permissions to perform required =
actions.</P>
<P><A name=3D1055696></A>Start the code with <CODE=20
style=3D"FONT-FAMILY: courier">SQL</CODE> followed by a space. For =
example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1056405></A>SQL alter session set =
NLS_DATE_FORMAT=3D'YYYY-MM-DD HH24:MI:SS'</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1056410></A>or </P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1056418></A>SQL SET LOCK MODE TO =
WAIT</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1061853></A>Options that you can set using <CODE=20
style=3D"FONT-FAMILY: courier">InitSQL</CODE> vary by DBMS.</P>
<P><A name=3D1081044></A>For information about setting this attribute =
with the=20
Administration Console, see "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_connection_pool=
s.html#initSQL">Initializing=20
Database Connections with SQL Code</A>" and "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/domain_jdbcconnectio=
npool_config_connections.html#InitTableName">Init=20
SQL</A>" in the <EM>Administration Console Online Help</EM>.</P>
<P><STRONG><A name=3D1061854></A>Note: </STRONG><CODE=20
style=3D"FONT-FAMILY: courier">InitSQL</CODE> is not a dynamic =
attribute. When you=20
change the value for <CODE style=3D"FONT-FAMILY: =
courier">InitSQL</CODE>, you must=20
either undeploy and redeploy the connection pool or restart the =
server.</P>
<H2 class=3Dhead2><A name=3D1061856></A>Testing Connection Pools and =
Database=20
Connections<A name=3Dtesting_database_connections></A></H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1055757></A>JDBCConnectionPoolRuntimeMBean.testPool()<BR>JDBCConne=
ctionPoolMBean.setTestConnectionsOnCreate(boolean enable) =
<BR>JDBCConnectionPoolMBean.setTestConnectionsOnRelease(boolean enable) =
<BR>JDBCConnectionPoolMBean.setTestConnectionsOnReserve(boolean enable) =
<BR>JDBCConnectionPoolMBean.setTestFrequencySeconds(int seconds) =
<BR>JDBCConnectionPoolMBean.setTestTableName(java.lang.String =
table)<BR>JDBCConnectionPoolMBean.setHighestNumUnavailable(int =
count)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1055768></A>To make sure that the database connections in a =

connection pool remain healthy, you should periodically test the =
connections.=20
WebLogic Server includes two basic types of testing: <EM>automatic</EM> =
testing=20
that you configure with attributes on the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE> (the =
configuration=20
MBean) and <EM>manual</EM> testing that you can do to trouble-shoot a =
connection=20
pool with the <CODE style=3D"FONT-FAMILY: courier">testPool()</CODE> =
method on the=20
<CODE style=3D"FONT-FAMILY: =
courier">JDBCConnectionPoolRuntimeMBean</CODE> (the=20
runtime MBean).</P>
<P><A name=3D1055772></A>Allowing WebLogic Server to automatically =
maintain the=20
integrity of pool connections should prevent most DBMS connection =
problems. You=20
use the following methods on the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE> to =
configure=20
automatic connection testing:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1056335></A><CODE=20
  style=3D"FONT-FAMILY: courier">setTestFrequencySeconds(int =
seconds)</CODE>=E2=80=94Use=20
  this method to enable periodic connection testing and to specify the =
number of=20
  seconds between tests of unused connections. The server tests unused=20
  connections and reopens any faulty connections. If you do not set =
<CODE=20
  style=3D"FONT-FAMILY: courier">TestFrequencySeconds</CODE>, periodic =
connection=20
  testing is not enabled. You must also set the <CODE=20
  style=3D"FONT-FAMILY: courier">HighestNumUnavailable</CODE> and <CODE=20
  style=3D"FONT-FAMILY: courier">TestTableName</CODE>.=20
  <LI type=3Dsquare><A name=3D1056372></A><CODE=20
  style=3D"FONT-FAMILY: courier">setTestConnectionsOnCreate(boolean=20
  enable)</CODE>=E2=80=94Use this method to enable testing on each =
database connection=20
  after it is created. This applies to connections created at server =
startup,=20
  when the connection pool is expanded, and when a connection is =
recreated after=20
  failing a test. You must also set a <CODE=20
  style=3D"FONT-FAMILY: courier">TestTableName</CODE>.=20
  <LI type=3Dsquare><A name=3D1056336></A><CODE=20
  style=3D"FONT-FAMILY: courier">setTestConnectionsOnReserve(boolean=20
  enable)</CODE>=E2=80=94Use this method to enable testing on each =
connection before it=20
  is given to a client. This may add a slight delay to the connection =
request,=20
  but it guarantees that the connection is healthy. You must also set a =
<CODE=20
  style=3D"FONT-FAMILY: courier">TestTableName</CODE>.=20
  <LI type=3Dsquare><A name=3D1055776></A><CODE=20
  style=3D"FONT-FAMILY: courier">setTestConnectionsOnRelease(boolean=20
  enable)</CODE>=E2=80=94Use this method to enable testing on database =
connections when=20
  they are returned to the connection pool. You must also set a <CODE=20
  style=3D"FONT-FAMILY: courier">TestTableName</CODE>.=20
  <LI type=3Dsquare><A name=3D1055777></A><CODE=20
  style=3D"FONT-FAMILY: courier">setHighestNumUnavailable(int =
count)</CODE>=E2=80=94Use=20
  this method to limit the number of idle connections that the server =
will test.=20
  For example, if you have 10 connections in your connection pool and 5 =
are in=20
  use, if the server were to begin testing all 5 connections that are =
not in=20
  use, there would be no connections available to fill a connection =
request from=20
  an application. If you set the <CODE=20
  style=3D"FONT-FAMILY: courier">HighestNumUnavailable</CODE> attribute =
to <CODE=20
  style=3D"FONT-FAMILY: courier">3</CODE>, the connection pool =
maintenance thread=20
  would take 3 connections from the connection pool for testing, and =
there would=20
  still be 2 connections available to fill a connection request.=20
  <LI type=3Dsquare><A name=3D1055778></A><CODE=20
  style=3D"FONT-FAMILY: courier">setTestTableName(java.lang.String=20
  table)</CODE>=E2=80=94Use this method to specify a table name to use =
for connection=20
  testing. You can also specify SQL code to run in place of the standard =
test by=20
  entering <CODE style=3D"FONT-FAMILY: courier">SQL</CODE> followed by a =
space and=20
  the SQL code you want to run as a test. <CODE=20
  style=3D"FONT-FAMILY: courier">TestTableName</CODE> is required to =
enable any=20
  automatic database connection testing. </LI></UL>
<P><A name=3D1081074></A>For information about setting these attributes =
in the=20
Administration Console, see "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_connection_pool=
s.html#test_opt">Connection=20
Testing Options</A>" and "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/domain_jdbcconnectio=
npool_config_connections.html#InitTableName">JDBC=20
Connection Pool --&gt; Configuration --&gt; Connections</A>" in the=20
<EM>Administration Console Online Help</EM>.</P>
<H2 class=3Dhead2><A name=3D1057259></A>Enabling Connection Requests to =
Wait for a=20
Connection<A name=3Dwait_for_connection></A></H2>
<P><A name=3D1057262></A>The <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE> has two =
attributes=20
that you can set to enable connection requests to wait for a connection =
from a=20
connection pool: <CODE=20
style=3D"FONT-FAMILY: courier">ConnectionReserveTimeoutSeconds</CODE> =
and <CODE=20
style=3D"FONT-FAMILY: courier">HighestNumWaiters</CODE>. You use these =
two=20
attributes together to enable connection requests to wait for a =
connection=20
without disabling your system by blocking too many threads.</P>
<H3 class=3Dhead3><A name=3D1057263></A>Connection Res<A =
name=3DCR207412></A>erve=20
Timeout</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1057427></A>JDBCConnectionPoolMBean.setConnectionReserveTimeoutSec=
onds(int seconds)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1058149></A>When an application requests a connection from =
a=20
connection pool, if all connections in the connection pool are in use =
and if the=20
connection pool has expanded to its maximum capacity, the application =
will get a=20
Connection Unavailable SQL Exception. To avoid this, you can configure a =

Connection Reserve Timeout value (in seconds) so that connection =
requests will=20
wait for a connection to become available. After the Connection Reserve =
Timeout=20
has expired, if no connection becomes available, the request will fail =
and the=20
application will get a <CODE=20
style=3D"FONT-FAMILY: courier">PoolLimitSQLException</CODE> exception. =
</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1057266></A>If you set Connection Reserve =
Timeout to=20
  <CODE style=3D"FONT-FAMILY: courier">0</CODE>, a connection request =
will wait=20
  indefinitely. Setting Connection Reserve Timeout to -1 will cause the=20
  connection to timeout immediately.=20
  <LI type=3Dsquare><A name=3D1081690></A>The default value is 10 =
seconds.=20
  <LI type=3Dsquare><A name=3D1081573></A>If you use global =
transactions, the=20
  Connection Reserve Timeout value is ignored. In this situation, a =
connection=20
  request automatically waits for a connection if one is not available. =
The=20
  amount of time available for an application to wait for a connection =
(if=20
  necessary), connect, and complete the transaction is determined by the =

  transaction time out value. </LI></UL>
<H3 class=3Dhead3><A name=3D1057267></A>Limiting the Number of Waiting =
Connection=20
Requests</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1057433></A>JDBCConnectionPoolMBean.setHighestNumWaiters(int =
count)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1057268></A>Connection requests that wait for a connection =
block a=20
thread. If too many connection requests concurrently wait for a =
connection and=20
block threads, your system performance can degrade. To avoid this, you =
can set=20
the <CODE style=3D"FONT-FAMILY: courier">HighestNumWaiters</CODE> =
attribute, which=20
limits the number connection requests that can concurrently wait for a=20
connection.</P>
<P><A name=3D1062025></A>If you set <CODE=20
style=3D"FONT-FAMILY: courier">HighestNumWaiters</CODE> to <CODE=20
style=3D"FONT-FAMILY: courier">MAX-INT</CODE> (the default), there is =
effectively=20
no bound on how many connection requests can wait for a connection. If =
you set=20
<CODE style=3D"FONT-FAMILY: courier">HighestNumWaiters</CODE> to <CODE=20
style=3D"FONT-FAMILY: courier">0</CODE>, connection requests cannot wait =
for a=20
connection.</P>
<H2 class=3Dhead2><A name=3D1057291></A>Configuring and Managing the =
Statement Cache=20
for a Connection Pool<A name=3Dmanage_cache></A></H2>
<P><A name=3D1057478></A>For each connection in a connection pool in =
your system,=20
WebLogic Server creates a statement cache. When a prepared statement or =
callable=20
statement is used on a connection, WebLogic Server caches the statement =
so that=20
it can be reused. Statement caching is controlled by the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE> and the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE>. For more =
information=20
about how the statement cache works and configuration options, see "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_connection_pool=
s.html#statementcache">Increasing=20
Performance with the Statement Cache</A>" in the <EM>WebLogic Server=20
Administration Console Online Help</EM>.</P>
<P><A name=3D1057479></A>Each connection in the connection pool has its =
own=20
statement cache, but configuration settings are made for all connections =
in the=20
connection pool.</P>
<H3 class=3Dhead3><A name=3D1055761></A>Configuring the Statement =
Cache</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1057312></A>JDBCConnectionPoolMBean.setStatementCacheSize(int =
cacheSize)<BR>JDBCConnectionPoolMBean.setStatementCacheType(java.lang.Str=
ing type)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1055760></A>WebLogic Server provides methods to set the =
size (<CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE>) and algorithm =
(<CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE>) of the =
statement cache=20
for each connection pool. </P>
<P><A name=3D1057442></A>When you set the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE>, that number of =

statements (prepared and callable) are cached for each connection in the =

connection pool. </P>
<P><A name=3D1058109></A>By default, the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE> is set to <CODE =

style=3D"FONT-FAMILY: courier">LRU</CODE> for Least Recently Used. With =
this=20
algorithm, the connection pool replaces the least recently used =
statement in the=20
cache when a new prepared or callable statement is used. In most cases, =
this=20
option provides the best performance. You can also set the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE> to <CODE=20
style=3D"FONT-FAMILY: courier">Fixed</CODE>. With the fixed algorithm, =
prepared=20
and callable statements are cached until the <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE> value is met. =
Statements=20
remain in the cache until the cache is cleared manually or the =
connection is=20
closed.</P>
<P><STRONG><A name=3D1061879></A>Note: </STRONG><CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE> is not a =
dynamic=20
attribute. When you change the value for <CODE=20
style=3D"FONT-FAMILY: courier">StatementCacheType</CODE>, you must =
either undeploy=20
and redeploy the connection pool or restart the server.</P>
<H3 class=3Dhead3><A name=3D1058111></A>Deprecated Statement Cache =
Configuration=20
Options<A name=3Dcache_precedence></A></H3>
<P><A name=3D1062174></A>In releases before WebLogic Server 8.1, there =
were=20
separate statement cache implementations for XA and non-XA JDBC =
connection pools=20
(connection pools that use an XA JDBC driver and connection pools that =
use a=20
non-XA JDBC driver to create database connections). In WebLogic Server =
8.1, the=20
statement cache was rewritten. There is now one statement cache =
implementation=20
for both XA and non-XA connection pools. With the statement cache =
revision,=20
there are connection pool attributes in the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolMBean</CODE> for =
configuring the=20
statement cache that are now deprecated. <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1062588">T=
able&nbsp;2-1</A>=20
lists the deprecated MBean attributes from previous releases and the =
equivalent=20
option in WebLogic Server 8.1.</P>
<P><A name=3D1062248></A>
<DIV class=3Dtblmargin>
<TABLE cellSpacing=3D0 borderColorDark=3D#000000 cellPadding=3D3=20
borderColorLight=3D#ffffff border=3D1>
  <P class=3Dtabletitle><A name=3D1062588></A>Table 2-1 Deprecated =
Statement Cache=20
  Attributes and Equivalents
  <P></P>
  <TBODY>
  <TR bgColor=3D#cccccc>
    <TH vAlign=3Dtop scope=3Dcol align=3Dleft>
      <P class=3Dcellheading><A name=3D1062592></A>Deprecated MBean =
Attribute</P></TH>
    <TH vAlign=3Dtop scope=3Dcol align=3Dleft>
      <P class=3Dcellheading><A name=3D1062594></A>Equivalent in =
WebLogic=20
      Server&nbsp;8.1</P></TH></TR>
  <TR>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062596></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">PreparedStatementCacheSize</CODE></P></TD>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062598></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">StatementCacheSize</CODE></P></TD></TR>
  <TR>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062600></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">XAPreparedStatementCacheSize</CODE></P></TD>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062602></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">StatementCacheSize</CODE></P></TD></TR></P></TABLE></DIV>
<P></P><BR>&nbsp;=20
<P><A name=3D1062186></A>To enable migration of a WebLogic Server =
configuration=20
from an earlier release to version 8.1, Weblogic Server enforces the =
following=20
order of precedence for these MBean attributes:</P>
<OL>
  <DIV class=3Dlists>
  <LI value=3D1><A name=3D1062503></A><CODE=20
  style=3D"FONT-FAMILY: courier">PreparedStatementCacheSize</CODE> =
</LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D2><A name=3D1062514></A><CODE=20
  style=3D"FONT-FAMILY: courier">XAPreparedStatementCacheSize</CODE> =
</LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D3><A name=3D1062517></A><CODE=20
  style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE> =
</LI></DIV></OL>
<P><A name=3D1062505></A>For example, if the <CODE=20
style=3D"FONT-FAMILY: courier">PreparedStatementCacheSize</CODE> for a =
JDBC=20
connection pool is set to <CODE style=3D"FONT-FAMILY: courier">5</CODE> =
and the=20
<CODE style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE> is set to =
<CODE=20
style=3D"FONT-FAMILY: courier">10</CODE>, the actual statement cache =
size for each=20
connection in the connection pool will be 5 because <CODE=20
style=3D"FONT-FAMILY: courier">PreparedStatementCacheSize</CODE> takes =
precedence=20
over <CODE style=3D"FONT-FAMILY: courier">StatementCacheSize</CODE>.</P>
<H3 class=3Dhead3><A name=3D1062173></A>Clearing the Statement Cache for =
a=20
Connection Pool</H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1057325></A>JDBCConnectionPoolRuntimeMBean.clearStatementCache()</=
CODE></PRE></BLOCKQUOTE>
<P><A name=3D1057378></A>You can manually clear the statement cache for =
all=20
connections in a connection pool with the <CODE=20
style=3D"FONT-FAMILY: courier">clearStatementCache()</CODE> method. </P>
<H3 class=3Dhead3><A name=3D1057382></A>Clearing the Statement Cache for =
a Single=20
Connection<A name=3Dwlconnection></A></H3>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1057406></A>weblogic.jdbc.extensions.WLConnection.clearStatementCa=
che()<BR>weblogic.jdbc.extensions.WLConnection.clearCallableStatement(jav=
a.lang.<BR>String =
sql)<BR>weblogic.jdbc.extensions.WLConnection.clearCallableStatement(java=
.lang.<BR>String sql,int resSetType,int =
resSetConcurrency)<BR>weblogic.jdbc.extensions.WLConnection.clearPrepared=
Statement(java.lang.<BR>String =
sql)<BR>weblogic.jdbc.extensions.WLConnection.clearPreparedStatement(java=
.lang.<BR>String sql,int resSetType,int =
resSetConcurrency)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1057541></A>You can use methods in the <CODE=20
style=3D"FONT-FAMILY: =
courier">weblogic.jdbc.extensions.WLConnection</CODE>=20
interface to clear the statement cache for a single connection or to =
clear an=20
individual statement from the cache. These methods return <CODE=20
style=3D"FONT-FAMILY: courier">true</CODE> if the operation was =
successful and=20
<CODE style=3D"FONT-FAMILY: courier">false</CODE> if the operation fails =
because=20
the statement was not found.</P>
<P><A name=3D1057754></A>When prepared and callable statements are =
stored in the=20
cache, they are stored (keyed) based on the exact SQL statement and =
result set=20
parameters (type and concurrency options), if any. When clearing an =
individual=20
prepared or callable statement, you must use the method that takes the =
proper=20
result set parameters. For example, if you have callable statement in =
the cache=20
with <CODE style=3D"FONT-FAMILY: courier">resSetType</CODE> of <CODE=20
style=3D"FONT-FAMILY: courier">ResultSet.TYPE_SCROLL_INSENSITIVE</CODE> =
and a=20
<CODE style=3D"FONT-FAMILY: courier">resSetConcurrency</CODE> of <CODE=20
style=3D"FONT-FAMILY: courier">ResultSet.CONCUR_READ_ONLY</CODE>, you =
must use the=20
method that takes the result set parameters:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1057787></A>clearCallableStatement(java.lang.String =
sql,int resSetType,int resSetConcurrency)</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1057527></A>If you use the method that only takes the SQL =
string as a=20
parameter, the method will not find the statement, nothing will be =
cleared from=20
the cache, and the method will return <CODE=20
style=3D"FONT-FAMILY: courier">false</CODE>. </P>
<P><A name=3D1058040></A>When you clear a statement that is currently in =
use by an=20
application, WebLogic Server removes the statement from the cache, but =
does not=20
close it. When you clear a statement that is not currently in use, =
WebLogic=20
Server removes the statement from the cache and closes it.</P>
<P><A name=3D1057795></A>For more details about these methods, see the =
Javadoc for=20
<A=20
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/jdbc/extension=
s/WLConnection.html">WLConnection</A>.</P>
<H2 class=3Dhead2><A name=3D1057349></A>Shrinking a Connection Pool<A=20
name=3Dprogramming018></A></H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1057350></A><CODE style=3D"FONT-FAMILY: =
courier">JDBCConnectionPoolRuntimeMBean.shrink()</CODE></CODE></PRE></BLO=
CKQUOTE>
<P><A name=3D1057351></A>A connection pool has a set of properties that =
define the=20
initial and maximum number of connections in the pool (<CODE=20
style=3D"FONT-FAMILY: courier">initialCapacity</CODE> and <CODE=20
style=3D"FONT-FAMILY: courier">maxCapacity</CODE>), and the number of =
connections=20
added to the pool when all connections are in use (<CODE=20
style=3D"FONT-FAMILY: courier">capacityIncrement</CODE>). When the pool =
reaches=20
its maximum capacity, the maximum number of connections are opened, and =
they=20
remain opened unless you enable automatic shrinking on the connection =
pool or=20
manually shrink the connection pool with the <CODE=20
style=3D"FONT-FAMILY: courier">shrink()</CODE> method. </P>
<P><A name=3D1057352></A>You may want to drop some connections from the =
connection=20
pool when a peak usage period has ended, freeing up WebLogic Server and =
DBMS=20
resources. </P>
<H2 class=3Dhead2><A name=3D1058171></A>Resetting a Connection Pool<A=20
name=3Dprogramming013></A></H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1058172></A><CODE style=3D"FONT-FAMILY: =
courier">JDBCConnectionPoolRuntimeMBean.reset()</CODE></CODE></PRE></BLOC=
KQUOTE>
<P><A name=3D1058174></A>The <CODE=20
style=3D"FONT-FAMILY: =
courier">JDBCConnectionPoolRuntimeMBean.reset()</CODE>=20
method closes and reopens all connections in a connection pool. This may =
be=20
necessary after the DBMS has been restarted, for example. Often when one =

connection in a connection pool has failed, all of the connections in =
the pool=20
are bad. </P>
<H2 class=3Dhead2><A name=3D1055751></A>Suspending a Connection Pool<A=20
name=3Dprogramming017></A><A name=3Dsuspend></A></H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1058263></A>JDBCConnectionPoolRuntimeMBean.suspend()</CODE></PRE><=
/BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1058279></A>JDBCConnectionPoolRuntimeMBean.forceSuspend()</CODE></=
PRE></BLOCKQUOTE>
<P><A name=3D1058334></A>WebLogic server includes two methods in the =
<CODE=20
style=3D"FONT-FAMILY: courier">JDBCConnectionPoolRuntimeMbean</CODE> to =
suspend a=20
connection pool: <CODE style=3D"FONT-FAMILY: courier">suspend()</CODE> =
and <CODE=20
style=3D"FONT-FAMILY: courier">forceSuspend()</CODE>. You can use these =
methods to=20
temporarily disable a connection pool, preventing any clients from =
obtaining or=20
using a connection from the pool. Only users with the proper permissions =
can=20
suspend a connection pool. </P>
<P><A name=3D1058265></A>When you suspend a connection pool with the =
<CODE=20
style=3D"FONT-FAMILY: courier">suspend()</CODE> method, the connection =
pool is=20
marked as disabled and applications cannot use connections from the =
pool.=20
Applications that already have a reserved connection from the connection =
pool=20
when it is suspended will get an exception when trying to use the =
connection.=20
WebLogic Server preserves all connections in the connection pool exactly =
as they=20
were before the connection pool was suspended.</P>
<P><A name=3D1058296></A>When you suspend a connection pool with the =
<CODE=20
style=3D"FONT-FAMILY: courier">forceSuspend()</CODE> method, WebLogic =
Server marks=20
the connection pool as disabled, forcibly disconnects applications that =
are=20
currently using a connection, and recreates (closes and reopens) =
connections=20
that were in use when the connection pool was suspended. Any transaction =
on the=20
connections that are closed are rolled back. WebLogic Server preserves =
all other=20
connections exactly as they were before the connection pool was =
suspended.</P>
<P><A name=3D1058307></A>The <CODE style=3D"FONT-FAMILY: =
courier">suspend()</CODE>=20
and <CODE style=3D"FONT-FAMILY: courier">forceSuspend()</CODE> methods =
replace the=20
<CODE style=3D"FONT-FAMILY: courier">disableFreezingUsers()</CODE> and =
<CODE=20
style=3D"FONT-FAMILY: courier">disableDroppingUsers()</CODE> methods, =
which are=20
deprecated.</P>
<H2 class=3Dhead2><A name=3D1058224></A>Resuming a Connection Pool</H2>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1058251></A>JDBCConnectionPoolRuntimeMBean.resume()</CODE></PRE></=
BLOCKQUOTE>
<P><A name=3D1058422></A>To re-enable a connection pool that you =
disabled with the=20
<CODE style=3D"FONT-FAMILY: courier">suspend()</CODE> or <CODE=20
style=3D"FONT-FAMILY: courier">forceSuspend()</CODE> method, you can use =
the <CODE=20
style=3D"FONT-FAMILY: courier">resume()</CODE> method, which marks the =
connection=20
pool as enabled and allows applications to use connections from the =
connection=20
pool. If you suspended the connection pool with the <CODE=20
style=3D"FONT-FAMILY: courier">suspend()</CODE> method, all connections =
are=20
preserved exactly as they were before the connection pool was suspended. =
Clients=20
that had reserved a connection before the connection pool was suspended =
can=20
continue JDBC operations exactly where they left off. If you suspended =
the=20
connection pool with the <CODE=20
style=3D"FONT-FAMILY: courier">forceSuspend()</CODE> method, connections =
that were=20
not in use when the connection pool was suspended are preserved exactly =
as they=20
were before the suspension. Connections that <EM>were</EM> in use were =
closed=20
and reopened. Clients that had reserved a connection no longer have a =
valid JDBC=20
context. </P>
<P><A name=3D1058368></A>The <CODE style=3D"FONT-FAMILY: =
courier">resume()</CODE>=20
method replaces the <CODE style=3D"FONT-FAMILY: courier">enable()</CODE> =
method,=20
which is deprecated.</P>
<P><STRONG><A name=3D1061309></A>Note: </STRONG>You cannot use the <CODE =

style=3D"FONT-FAMILY: courier">resume()</CODE> method to start a =
connection pool=20
that did not start correctly, for example, if the database server is=20
unavailable. </P>
<P>&nbsp;</P>
<HR noShade>

<H1 class=3Dhead1><A name=3D1050534></A>Configuring and Using =
Application-Scoped=20
JDBC Connection Pools<A name=3Dapp_scoped_pools></A></H1>
<P><A name=3D1052078></A>When you package your enterprise applications, =
you can=20
include the <CODE style=3D"FONT-FAMILY: =
courier">weblogic-application.xml</CODE>=20
supplemental deployment descriptor, which you use to configure =
<EM>application=20
scoping</EM>. Within the <CODE=20
style=3D"FONT-FAMILY: courier">weblogic-application.xml</CODE> file, you =
can=20
configure JDBC connection pools that are created when you deploy the =
enterprise=20
application.</P>
<P><A name=3D1052079></A>An instance of the connection pool is created =
with each=20
instance of your application. This means an instance of the pool is =
created with=20
the application on each node that the application is targeted to. It is=20
important to keep this in mind when considering pool sizing.</P>
<P><A name=3D1052080></A>Connection pools created in this manner are =
known as=20
<EM>application-scoped connection pools</EM>, <EM>app scoped pools</EM>, =

<EM>application local pools</EM>, <EM>app local pools</EM>, or <EM>local =

pools</EM>, and are scoped for the enterprise application only. That is, =
they=20
are isolated for use by the enterprise application. </P>
<P><A name=3D1052081></A>For more information about application scoping =
and=20
application scoped resources, see:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1052085></A><A=20
  href=3D"http://e-docs.bea.com/wls/docs81/xml/xml_appscop.html">XML =
Application=20
  Scoping</A> in <EM>Programming WebLogic XML</EM>.=20
  <LI type=3Dsquare><A name=3D1052087></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/deployment/concepts.html#two_pha=
se">Two-Phase=20
  Deployment Protocol</A> in <EM>Deploying WebLogic Server =
Applications</EM>.=20
  </LI></UL>
<H2 class=3Dhead2><A name=3D1053831></A>Configuring Application-Scoped =
Connection=20
Pools</H2>
<P><A name=3D1053863></A>To configure an application-scoped connection =
pool, you=20
add a jdbc-connection-pool element with connection pool configuration =
parameters=20
to the <CODE style=3D"FONT-FAMILY: =
courier">weblogic-application.xml</CODE> file=20
for your enterprise application. For example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059157></A>&lt;jdbc-connection-pool&gt;<BR>      =
&lt;data-source-name&gt;XA_LocalDS1&lt;/data-source-name&gt;<BR>      =
&lt;connection-factory&gt;<BR>        =
&lt;factory-name&gt;XA_LocalCF1&lt;/factory-name&gt;<BR>        =
&lt;connection-properties&gt;<BR>          =
&lt;user-name&gt;SCOTT&lt;/user-name&gt;<BR>          =
&lt;password&gt;tiger&lt;/password&gt;<BR>          =
&lt;url&gt;jdbc:oracle:thin:@dbserver:1521:sid&lt;/url&gt;<BR>          =
&lt;driver-class-name&gt;oracle.jdbc.xa.client.OracleXADataSource<BR>    =
        &lt;/driver-class-name&gt;<BR>          =
&lt;connection-params&gt;<BR>            &lt;parameter&gt;<BR>           =
   &lt;param-name&gt;foo&lt;/param-name&gt;<BR>              =
&lt;param-value&gt;xyz&lt;/param-value&gt;<BR>            =
&lt;/parameter&gt;<BR>            &lt;parameter&gt;<BR>              =
&lt;param-name&gt;bar&lt;/param-name&gt;<BR>              =
&lt;param-value&gt;abc&lt;/param-value&gt;<BR>            =
&lt;/parameter&gt;<BR>          &lt;/connection-params&gt;<BR>        =
&lt;/connection-properties&gt;<BR>      =
&lt;/connection-factory&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059180></A>      &lt;pool-params&gt;<BR>        =
&lt;size-params&gt;<BR>          =
&lt;initial-capacity&gt;5&lt;/initial-capacity&gt;<BR>          =
&lt;max-capacity&gt;10&lt;/max-capacity&gt;<BR>          =
&lt;capacity-increment&gt;2&lt;/capacity-increment&gt;<BR>          =
&lt;shrinking-enabled&gt;true&lt;/shrinking-enabled&gt;<BR>          =
&lt;shrink-frequency-seconds&gt;300&lt;/shrink-frequency-seconds&gt;<BR> =
         &lt;highest-num-waiters&gt;100&lt;/highest-num-waiters&gt;<BR>  =
        =
&lt;highest-num-unavailable&gt;4&lt;/highest-num-unavailable&gt;<BR>     =
   &lt;/size-params&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059395></A>        &lt;xa-params&gt;<BR>          =
&lt;debug-level&gt;3&lt;/debug-level&gt;<BR>          =
&lt;local-transaction-supported&gt;true&lt;/local-transaction-supported&g=
t;<BR>          =
&lt;xa-set-transaction-timeout&gt;true&lt;/xa-set-transaction-timeout&gt;=
<BR>          =
&lt;xa-transaction-timeout&gt;30&lt;/xa-transaction-timeout&gt;<BR>      =
  &lt;/xa-params&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059204></A>        =
&lt;login-delay-seconds&gt;1&lt;/login-delay-seconds&gt;<BR>        =
&lt;leak-profiling-enabled&gt;false&lt;/leak-profiling-enabled&gt;<BR>   =
     &lt;connection-check-params&gt;<BR>          =
&lt;table-name&gt;check_table&lt;/table-name&gt;<BR>          =
&lt;check-on-create-enabled&gt;true&lt;/check-on-create-enabled&gt;<BR>  =
        =
&lt;check-on-reserve-enabled&gt;true&lt;/check-on-reserve-enabled&gt;<BR>=
          =
&lt;check-on-release-enabled&gt;false&lt;/check-on-release-enabled&gt;<BR=
>          &lt;connection-reserve-timeout-seconds&gt;30<BR>            =
&lt;/connection-reserve-timeout-seconds&gt;<BR>          =
&lt;test-frequency-seconds&gt;600&lt;/test-frequency-seconds&gt;<BR>     =
     &lt;connection-creation-retry-frequency-seconds&gt;360<BR>          =
  &lt;/connection-creation-retry-frequency-seconds&gt;<BR>          =
&lt;inactive-connection-timeout-seconds&gt;360<BR>            =
&lt;/inactive-connection-timeout-seconds&gt;<BR>          =
&lt;init-sql&gt;SQL SET LOCK MODE TO WAIT&lt;/init-sql&gt;<BR>        =
&lt;/connection-check-params&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059213></A>      =
&lt;/pool-params&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059215></A>      &lt;driver-params&gt;<BR>        =
&lt;prepared-statement&gt;<BR>          =
&lt;cache-size&gt;10&lt;/cache-size&gt;<BR>          =
&lt;cache-type&gt;LRU&lt;/cache-type&gt;<BR>        =
&lt;/prepared-statement&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059228></A>        =
&lt;row-prefetch-enabled&gt;true&lt;/row-prefetch-enabled&gt;<BR>        =
&lt;row-prefetch-size&gt;500&lt;/row-prefetch-size&gt;<BR>        =
&lt;stream-chunk-size&gt;1024&lt;/stream-chunk-size&gt;<BR>      =
&lt;/driver-params&gt;</CODE></PRE></BLOCKQUOTE>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059277></A>    =
&lt;/jdbc-connection-pool&gt;</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1059530></A>For more details about JDBC connection pool =
element=20
entries, see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/programming/app_xml.html#app-sco=
ped-pool">weblogic-application.xml=20
Deployment Descriptor Elements</A> in <EM>Developing WebLogic Server=20
Applications</EM>.</P>
<P><A name=3D1059527></A>If you deploy your enterprise application as an =
exploded=20
archive, you can also change configuration options using the =
Administration=20
Console. See "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_connection_pool=
s.html#app_scoped_pools">Application-Scoped=20
JDBC Data Sources and Connection Pools</A>" in the <EM>Administration =
Console=20
Online Help</EM>.</P>
<H3 class=3Dhead3><A name=3D1053873></A>Required Elements Within the=20
jdbc-connection-pool Element</H3>
<P><A name=3D1059569></A>When configuring and application-scoped =
connection pool=20
within the <CODE style=3D"FONT-FAMILY: =
courier">weblogic-application.xml</CODE>=20
file, you must include the following sub-elements:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1059601></A><CODE=20
  style=3D"FONT-FAMILY: courier">data-source-name</CODE>, which defines =
a name for=20
  the application-scoped data source created (always a TxDataSource) =
with the=20
  application-scoped connection pool when you deploy your application. =
The=20
  application uses this name to look up the data source on the local =
JNDI tree=20
  to get a connection from the connection pool.=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A =
name=3D1059618></A>&lt;data-source-name&gt;XA_LocalDS1&lt;/data-source-na=
me&gt;</CODE></PRE></BLOCKQUOTE>
  <DL>
    <DT>
    <P class=3Dlistpara><A name=3D1059614></A>See <A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1060099">G=
etting=20
    a Connection from an Application-Scoped Connection Pool</A> for more =

    information.</P></DT></DL>
  <LI type=3Dsquare><A name=3D1059593></A><CODE=20
  style=3D"FONT-FAMILY: courier">connection-factory</CODE>, which is a =
reference=20
  to the data source factory in your WebLogic domain to use to create =
the=20
  application-scoped data source and connection pool when you deploy =
your=20
  application. The data source factory also supplies some default values =
for=20
  connections in the application-scoped connection pool. You can =
over-ride these=20
  values. For example:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059691></A>&lt;connection-factory&gt;<BR>  =
&lt;factory-name&gt;XA_LocalCF1&lt;/factory-name&gt;<BR>  =
&lt;connection-properties&gt;<BR>    =
&lt;user-name&gt;SCOTT&lt;/user-name&gt;<BR>    =
&lt;password&gt;tiger&lt;/password&gt;<BR>    =
&lt;url&gt;jdbc:oracle:thin:@dbserver:1521:sid&lt;/url&gt;<BR>    =
&lt;driver-class-name&gt;oracle.jdbc.xa.client.OracleXADataSource<BR>    =
  &lt;/driver-class-name&gt;<BR>    &lt;connection-params&gt;<BR>      =
&lt;parameter&gt;<BR>        =
&lt;param-name&gt;foo&lt;/param-name&gt;<BR>        =
&lt;param-value&gt;xyz&lt;/param-value&gt;<BR>      =
&lt;/parameter&gt;<BR>      &lt;parameter&gt;<BR>        =
&lt;param-name&gt;bar&lt;/param-name&gt;<BR>        =
&lt;param-value&gt;abc&lt;/param-value&gt;<BR>      =
&lt;/parameter&gt;<BR>    &lt;/connection-params&gt;<BR>  =
&lt;/connection-properties&gt;<BR>&lt;/connection-factory&gt;</CODE></PRE=
></BLOCKQUOTE>
  <DL>
    <DT>
    <P class=3Dlistpara><A name=3D1059632></A>If you do not specify a =
data source=20
    factory name, you must provide all parameters necessary to create =
the=20
    connection pool, including the user name, password, URL, driver =
class name,=20
    and connection parameters in the <CODE=20
    style=3D"FONT-FAMILY: courier">connection-properties</CODE> tag.</P>
    <DT>
    <P class=3Dlistpara><A name=3D1060302></A>For more information about =
configuring=20
    a data source factory in your WebLogic domain, see "<A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_datasources.htm=
l#dsfact">JDBC=20
    Data Source Factories</A>" in the <EM>Administration Console Online=20
    Help</EM>.</P></DT></DL></LI></UL>
<H3 class=3Dhead3><A name=3D1054024></A>Encrypting the Database Password =
in=20
weblogic-application.xml<A name=3Dpwd_encrypt></A></H3>
<P><A name=3D1054068></A>To avoid storing or transmitting database =
passwords in=20
clear text, you can encrypt database passwords in the <CODE=20
style=3D"FONT-FAMILY: courier">weblogic-application.xml</CODE> file with =
the <CODE=20
style=3D"FONT-FAMILY: courier">weblogic.j2ee.PasswordEncrypt</CODE> =
utility. This=20
utility searches for database passwords in the following places:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1059896></A>In the password tag:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059868></A>&lt;connection properties&gt;<BR>  =
&lt;password&gt;tiger&lt;/password&gt;<BR>&lt;/connection =
properties&gt;</CODE></PRE></BLOCKQUOTE>
  <LI type=3Dsquare><A name=3D1059892></A>In the connection-params tag:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1060018></A>&lt;connection properties&gt;<BR>  =
&lt;parameter&gt;<BR>     =
&lt;param-name&gt;password&lt;/param-name&gt;<BR>     =
&lt;param-value&gt;tiger&lt;/param-value&gt;<BR>  =
&lt;/parameter&gt;<BR>&lt;/connection =
properties&gt;</CODE></PRE></BLOCKQUOTE></LI></UL>
<P><A name=3D1059861></A>The utility hashes the passwords, replaces the =
passwords=20
in the <CODE style=3D"FONT-FAMILY: =
courier">weblogic-application.xml</CODE> file=20
with a hashed version, and stores the hashed values in the <CODE=20
style=3D"FONT-FAMILY: courier">SerializedSystemIni.dat</CODE> in your =
WebLogic=20
domain.</P>
<P><STRONG><A name=3D1060168></A>Note: </STRONG>Password encryption is =
<EM>domain=20
specific</EM>. That is, when you run the encryption utility, you must =
specify=20
the domain in which you will deploy your application. If you try to =
deploy the=20
application in another domain, WebLogic Server will not be able to =
decrypt the=20
passwords for use at runtime. For more information about encrypting =
passwords,=20
see "<A=20
href=3D"http://e-docs.bea.com/wls/docs81/secmanage/passwords.html#protect=
_passwords">Protecting=20
Passwords</A>" in <EM>Managing WebLogic Security</EM>.</P>
<P><A name=3D1059941></A>You run this utility before your application =
archive is=20
created. You cannot run it on a file that is already archived.</P>
<P><A name=3D1059944></A>Before you run this utility, you should have =
WebLogic=20
Server installed and your environment configured (so that the utility =
can find=20
required classes). The server does not have to running when you run the =
password=20
encryption utility.</P>
<P><A name=3D1059734></A>To run the password encryption utility, enter =
the=20
following command:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1059767></A>java weblogic.j2ee.PasswordEncrypt =
&lt;descriptor file&gt; &lt;domain config =
dir&gt;</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1059769></A>Where:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1059969></A><CODE=20
  style=3D"FONT-FAMILY: courier">descriptor file</CODE> is the=20
  weblogic-application.xml for the application.=20
  <LI type=3Dsquare><A name=3D1059770></A><CODE style=3D"FONT-FAMILY: =
courier">domain=20
  config dir</CODE> is the root directory of the WebLogic domain (which =
contains=20
  the config.xml file). </LI></UL>
<P><A name=3D1059789></A>After you run the password encryption utility, =
passwords=20
may look like:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1060034></A>In the password tag:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1060035></A>&lt;connection properties&gt;<BR>  =
&lt;password&gt;{3DES}iaHh5dH7clU=3D&lt;/password&gt;<BR>&lt;/connection =
properties&gt;</CODE></PRE></BLOCKQUOTE>
  <LI type=3Dsquare><A name=3D1060036></A>In the connection-params tag:=20
  <BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1060037></A>&lt;connection properties&gt;<BR>  =
&lt;parameter&gt;<BR>     =
&lt;param-name&gt;password&lt;/param-name&gt;<BR>     =
&lt;param-value&gt;{3DES}iaHh5dH7clU=3D&lt;/param-value&gt;<BR>  =
&lt;/parameter&gt;<BR>&lt;/connection =
properties&gt;</CODE></PRE></BLOCKQUOTE></LI></UL>
<P><STRONG><A name=3D1060095></A>Notes: </STRONG>If you need to change a =
password,=20
you can change it in the weblogic-application.xml file and then re-run =
the=20
password encryption utility. The utility will not re-encrypt passwords =
that are=20
already encrypted. </P>
<DT>
<P class=3Dnotepara><STRONG><A name=3D1060201></A></STRONG>You must =
re-encrypt=20
passwords in the descriptor file if:</P>
<UL type=3Dsquare>
  <UL type=3Dsquare>
    <LI type=3Dsquare><A name=3D1060206></A>You move the application =
from one=20
    installation of WebLogic Server to another.
    <LI type=3Dsquare><A name=3D1060213></A>You delete the domain =
directory=20
    referenced when encrypting passwords, even if the directory is=20
    recreated.</LI></UL></UL>
<H3 class=3Dhead3><A name=3D1062633></A>Deprecated Statement Cache =
Configuration=20
Options for Application-Scoped Connection Pools<A=20
name=3Dapp_scoped_cache_precedence></A></H3>
<P><A name=3D1062701></A>In releases before WebLogic Server 8.1, there =
were=20
separate statement cache implementations for XA and non-XA JDBC =
connection=20
pools. In WebLogic Server 8.1, the statement cache was rewritten. There =
is now=20
one statement cache implementation for both XA and non-XA connection =
pools. With=20
the statement cache revision, there is one tag available in the=20
weblogic-application.xml descriptor file that is deprecated. <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1062641">T=
able&nbsp;2-2</A>=20
lists the deprecated descriptor tag, its replacement, and the related =
MBean=20
attributes created when the application-scoped connection pool is =
deployed.</P>
<P><A name=3D1062656></A>
<DIV class=3Dtblmargin>
<TABLE cellSpacing=3D0 borderColorDark=3D#000000 cellPadding=3D3=20
borderColorLight=3D#ffffff border=3D1>
  <P class=3Dtabletitle><A name=3D1062641></A>Table 2-2 Deprecated =
Statement Cache=20
  Descriptor Tags and Related MBeans Attributes
  <P></P>
  <TBODY>
  <TR bgColor=3D#cccccc>
    <TH vAlign=3Dtop scope=3Dcol align=3Dleft>
      <P class=3Dcellheading><A name=3D1062645></A>Deprecated</P></TH>
    <TH vAlign=3Dtop scope=3Dcol align=3Dleft>
      <P class=3Dcellheading><A name=3D1062647></A>Equivalent in =
WebLogic=20
      Server&nbsp;8.1</P></TH></TR>
  <TR>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062790></A>Deprecated descriptor =
tag:</P>
      <P class=3Dtable><A name=3D1067210></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">&lt;pool-params&gt;<BR>&nbsp;&lt;xa-params&gt;<BR>&nbsp;&nbsp;&n=
bsp;</CODE><CODE=20
      style=3D"FONT-WEIGHT: bold; FONT-FAMILY: =
courier">&lt;prepared-statement-cache-size&gt;10<BR>&nbsp;&nbsp;&nbsp;&nb=
sp;&lt;/prepared-statement-cache-size&gt;<BR></CODE><CODE=20
      style=3D"FONT-FAMILY: =
courier">&nbsp;&lt;/xa-params&gt;<BR>&lt;/pool-params&gt;</CODE></P>
      <P class=3Dcellnote><A name=3D1062885></A><STRONG>Note: =
</STRONG>Only the tag=20
      in bold is deprecated. The other tags are listed for contextual =
purposes=20
      only.</P></TD>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062718></A>Use this tag instead:</P>
      <P class=3Dtable><A name=3D1062920></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">&lt;driver-params&gt;<BR>&nbsp;&lt;prepared-statement&gt;<BR>&nb=
sp;&nbsp;&nbsp;</CODE><CODE=20
      style=3D"FONT-WEIGHT: bold; FONT-FAMILY: =
courier">&lt;cache-size&gt;10<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cache-size&=
gt;<BR></CODE><CODE=20
      style=3D"FONT-FAMILY: =
courier">&nbsp;&lt;/prepared-statement&gt;<BR>&lt;/driver-params&gt;</COD=
E></P></TD></TR>
  <TR>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062903></A>MBean attribute set from =
tag above:</P>
      <P class=3Dtable><A name=3D1062927></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">XaParamsMBean.PreparedStatementCacheSize</CODE></P></TD>
    <TD vAlign=3Dtop scope=3Drow align=3Dleft>
      <P class=3Dtable><A name=3D1062905></A>MBean attribute set from =
tag above:</P>
      <P class=3Dtable><A name=3D1062940></A><CODE=20
      style=3D"FONT-FAMILY: =
courier">PreparedStatementMBean.CacheSize</CODE></P></TD></TR></P></TABLE=
></DIV>
<P></P><BR>&nbsp;=20
<P><A name=3D1062657></A>To enable migration of a WebLogic Server =
configuration or=20
enterprise application from an earlier release to version 8.1, Weblogic =
Server=20
enforces the following order of precedence for these MBean =
attributes:</P>
<OL>
  <DIV class=3Dlists>
  <LI value=3D1><A name=3D1062658></A><CODE=20
  style=3D"FONT-FAMILY: courier">PreparedStatementMBean.CacheSize</CODE> =

  </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D2><A name=3D1062659></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">XAParamsMBean.PreparedStatementCacheSize</CODE>=20
  </LI></DIV></OL>
<P><A name=3D1062661></A>For example, if the <CODE=20
style=3D"FONT-FAMILY: courier">&lt;cache-size&gt;</CODE> for a JDBC =
connection=20
pool is set to <CODE style=3D"FONT-FAMILY: courier">5</CODE> in the =
<CODE=20
style=3D"FONT-FAMILY: courier">weblogic-application.xml</CODE> file and =
the <CODE=20
style=3D"FONT-FAMILY: =
courier">&lt;prepared-statement-cache-size&gt;</CODE> is set=20
to <CODE style=3D"FONT-FAMILY: courier">10</CODE>, the actual statement =
cache size=20
for each connection in the connection pool will be 5 because <CODE=20
style=3D"FONT-FAMILY: courier">PreparedStatementMBean.CacheSize</CODE> =
takes=20
precedence over <CODE=20
style=3D"FONT-FAMILY: =
courier">XaParamsMBean.PreparedStatementCacheSize</CODE>.</P>
<P><STRONG><A name=3D1062682></A>Note: </STRONG>When migrating an =
application from=20
WebLogic Server 7.0 SP3 or later, to disable XA statement caching, you =
must set=20
the <CODE style=3D"FONT-FAMILY: courier">&lt;cache-size&gt;</CODE> for =
the JDBC=20
connection pool in the <CODE=20
style=3D"FONT-FAMILY: courier">weblogic-application.xml</CODE> file to =
<CODE=20
style=3D"FONT-FAMILY: courier">0</CODE>.</P>
<H2 class=3Dhead2><A name=3D1060099></A>Getting a Connection from an=20
Application-Scoped Connection Pool</H2>
<P><A name=3D1060112></A>To get a connection from an application-scoped =
connection=20
pool, you look up the data source defined in the =
weblogic-application.xml=20
descriptor file in the local environment (<CODE=20
style=3D"FONT-FAMILY: courier">java:comp/env</CODE>) and then request a =
connection=20
from the data source. For example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1060114></A>javax.sql.DataSource ds =3D <BR>    =
(javax.sql.DataSource) =
ctx.lookup("java:app/jdbc/myDataSource");<BR>java.sql.Connection conn =
=3D ds.getConnection();</CODE></PRE></BLOCKQUOTE>
<P><A name=3D1060115></A>When you are finished using the connection, =
make sure you=20
close the connection to return it to the connection pool:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1060136></A>conn.close();</CODE></PRE></BLOCKQUOTE>
<P>&nbsp;</P>
<HR noShade>

<H1 class=3Dhead1><A name=3D1023962></A><A =
name=3Dusing_multipools></A>Configuring and=20
Using MultiPools<A name=3Dprogramming020></A><A =
name=3Dmultipools></A></H1>
<P><A name=3D1081883></A>A MultiPool is a pool of connection pools. All =
the=20
connections in a particular <EM>connection pool</EM> are created =
identically=20
with a single database, single user, and the same connection attributes; =
that=20
is, they are attached to a single database. However, the connection =
pools within=20
a <EM>MultiPool</EM> may be associated with different users or DBMSs. =
</P>
<H2 class=3Dhead2><A name=3D1025003></A>Configuring MultiPools <A=20
name=3Dprogramming021></A></H2>
<P><A name=3D1081905></A>MultiPools contain a configurable algorithm for =
choosing=20
which connection pool will return a connection to the client. </P>
<P><A name=3D1081906></A>Create a MultiPool using the following =
steps:</P>
<OL>
  <DIV class=3Dlists>
  <LI value=3D1><A name=3D1081907></A>Create necessary connection pools. =
</LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D2><A name=3D1081908></A>Determine if the primary purpose =
of the=20
  MultiPool is high availability or load balancing. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1025123">C=
hoosing=20
  the MultiPool Algorithm</A>. </LI></DIV>
  <DIV class=3Dlists>
  <LI value=3D3><A name=3D1081918></A>Create the MultiPool using the =
Administration=20
  Console or WebLogic Management API and assign the connection pools to =
the=20
  MultiPool. </LI></DIV></OL>
<P><A name=3D1081910></A>For more information about MultiPools, see the =
<A=20
href=3D"http://e-docs.bea.com/wls/docs81/ConsoleHelp/jdbc_multipools.html=
">Administration=20
Console Online Help</A>. For information about the <CODE=20
style=3D"FONT-FAMILY: courier">JDBCMultiPoolMBean</CODE>, see the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/management/con=
figuration/JDBCMultiPoolMBean.html">WebLogic=20
Server Javadocs</A>.</P>
<H2 class=3Dhead2><A name=3D1025123></A>Choosing the MultiPool =
Algorithm<A=20
name=3Dprogramming022></A></H2>
<P><A name=3D1050824></A>Before you set up a MultiPool, you need to =
determine the=20
primary purpose of the MultiPool=E2=80=94high availability or load =
balancing. You can=20
choose the algorithm that corresponds with your requirements.</P>
<H3 class=3Dhead3><A name=3D1025299></A>High Availability <A=20
name=3Dprogramming023></A></H3>
<P><A name=3D1025218></A>The High Availability algorithm provides an =
ordered list=20
of connection pools. Normally, every connection request to this kind of=20
MultiPool is served by the first pool in the list. If a database =
connection test=20
fails and the connection cannot be replaced, or if the connection pool =
is=20
suspended, a connection is sought sequentially from the next pool on the =

list.</P>
<P><STRONG><A name=3D1061353></A>Note: </STRONG>This algorithm relies on =
<CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE> to test =
to see if a=20
connection in the first connection pool is healthy. If the connection =
fails the=20
test, the MultiPool uses a connection from the next connection pool in =
the=20
MultiPool. See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1061856">T=
esting=20
Connection Pools and Database Connections</A> for information about =
configuring=20
<CODE style=3D"FONT-FAMILY: =
courier">TestConnectionsOnReserve</CODE>.</P>
<H3 class=3Dhead3><A name=3D1027020></A>Load Balancing</H3>
<P><A name=3D1068435></A>Connection requests to a load balancing =
MultiPool are=20
served from any connection pool in the list. Pools are accessed using a=20
round-robin scheme. When the MultiPool provides a connection, it selects =
a=20
connection from the connection pool listed just after the last pool that =
was=20
used to provide a connection. MultiPools that use the Load Balancing =
algorithm=20
also fail over to the next connection pool in the list if a database =
connection=20
test fails and the connection cannot be replaced, or if the connection =
pool is=20
suspended.</P>
<H2 class=3Dhead2><A name=3D1081754></A>Transaction Support in JDBC =
MultiPools<A=20
name=3Dtxsupport></A></H2>
<P><A name=3D1081958></A>In WebLogic Server 8.1SP5, MultiPools were =
enhanced to=20
provide support for global transactions.</P>
<P><STRONG><A name=3D1082081></A>Note: </STRONG>WebLogic Server 8.1 SP5 =
is=20
certified to support Multipools with XA only on Oracle RAC. For =
information on=20
supported versions of Oracle RAC, see <A=20
href=3D"http://e-docs.bea.com/platform/suppconfigs/configs81/81_over/supp=
orted_db.html">Supported=20
Database Configurations</A>.</P>
<P><A name=3D1081974></A>For an example of a MultiPool configuration =
that supports=20
global transactions, see <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/oracle_rac.html#1076509">Us=
ing=20
MultiPools with Global Transactions</A>.</P>
<H3 class=3Dhead3><A name=3D1081775></A>Transaction Failover Processing =
for=20
MultiPools</H3>
<P><A name=3D1081776></A>If a connection from a MultiPool fails while a =
global=20
transaction is in progress, the result of the transaction depends on the =
stage=20
of the transaction at the time of the connection failure.</P>
<P><A name=3D1081777></A>The first stage at which a failure may occur is =
before=20
the application calls for the transaction to be committed. If a database =

connection fails at this stage, the application gets an exception and =
must get a=20
new connection and make a new attempt at processing the transaction. =
WebLogic=20
Server does not support transparent failover. </P>
<P><A name=3D1081778></A>If a failure occurs after the application has =
called for=20
the transaction to be committed, the handling of any in-flight =
transaction=20
depends upon whether the <CODE style=3D"FONT-FAMILY: =
courier">PREPARE</CODE>=20
operation is complete. If the <CODE style=3D"FONT-FAMILY: =
courier">PREPARE</CODE>=20
operation is not complete, the transaction manager rolls back the =
transaction=20
and sends the application an exception for the failed transaction. If =
the <CODE=20
style=3D"FONT-FAMILY: courier">PREPARE</CODE> operation is complete, the =

transaction manager attempts to drive the in-flight transaction to =
completion=20
using another connection.</P>
<P><A name=3D1081779></A>If a failure occurs during the <CODE=20
style=3D"FONT-FAMILY: courier">COMMIT</CODE> operation, the transaction =
manager=20
attempts to retry the <CODE style=3D"FONT-FAMILY: courier">COMMIT</CODE> =
operation=20
several times, depending on the <CODE=20
style=3D"FONT-FAMILY: courier">XARetryDurationSeconds</CODE> setting. =
Note that=20
the connection is blocked during these attempts. If the <CODE=20
style=3D"FONT-FAMILY: courier">COMMIT</CODE> operation is not successful =
during=20
the first set of retry attempts, the application gets an exception. The=20
transaction manager then continues to retry the <CODE=20
style=3D"FONT-FAMILY: courier">COMMIT</CODE> operation periodically =
until it is=20
successful or until it reaches the JTA <A=20
href=3D"http://e-docs.bea.com/wls/docs81//ConsoleHelp/domain_domain_confi=
g_jta.html">Abandon=20
Timeout</A> period defined in the configuration file and abandons the=20
transaction.</P>
<H2 class=3Dhead2><A name=3D1068438></A>MultiPool Failover <A=20
name=3Dmultipool_failover_enhancements></A>Enhancements<A =
name=3DCR108826></A></H2>
<P><A name=3D1068439></A>In WebLogic Server 8.1SP3, the following =
enhancements=20
were made to MultiPools:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068261></A>Connection request routing =
enhancements to=20
  avoid requesting a connection from an automatically disabled (dead) =
connection=20
  pool within a MultiPool. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068282">C=
onnection=20
  Request Routing Enhancements When a Connection Pool Fails.</A>=20
  <LI type=3Dsquare><A name=3D1068265></A>Automatic failback on recovery =
of a failed=20
  connection pool within a MultiPool. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068290">A=
utomatic=20
  Re-enablement on Recovery of a Failed Connection Pool within a =
MultiPool.</A>=20
  <LI type=3Dsquare><A name=3D1068271></A>Failover for busy connection =
pools within=20
  a MultiPools. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068305">E=
nabling=20
  Failover for Busy Connection Pools in a MultiPool.</A>=20
  <LI type=3Dsquare><A name=3D1068273></A>Failover callbacks for =
MultiPools with the=20
  High Availability algorithm. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068317">C=
ontrolling=20
  MultiPool Failover with a Callback.</A>=20
  <LI type=3Dsquare><A name=3D1068279></A>Failback callbacks for =
MultiPools with=20
  either algorithm. See <A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068361">C=
ontrolling=20
  MultiPool Failback with a Callback.</A> </LI></UL>
<H3 class=3Dhead3><A name=3D1068282></A>Connection Request Routing =
Enhancements When=20
a Connection Pool Fails</H3>
<P><A name=3D1068283></A>To improve performance when a connection pool =
within a=20
MultiPool fails, WebLogic Server automatically disables the connection =
pool when=20
a pooled connection fails a connection test. After a connection pool is=20
disabled, WebLogic Server does not route connection requests from =
applications=20
to the connection pool. Instead, it routes connection requests to the =
next=20
available connection pool listed in the MultiPool.</P>
<P><A name=3D1068284></A>This feature requires that connection pool =
testing=20
options are configured for all connection pools in a MultiPool, =
specifically=20
<CODE style=3D"FONT-FAMILY: courier">TestTableName</CODE> and <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE>. </P>
<P><A name=3D1068285></A>If a callback handler is registered for the =
MultiPool,=20
WebLogic Server calls the callback handler before failing over to the =
next=20
connection pool in the list. See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068317">C=
ontrolling=20
MultiPool Failover with a Callback</A> for more details. </P>
<H3 class=3Dhead3><A name=3D1068290></A>Automatic Re-enablement on =
Recovery of a=20
Failed Connection Pool within a MultiPool<A =
name=3Dmultipool_recovery></A></H3>
<P><A name=3D1068292></A>After a connection pool is automatically =
disabled because=20
a connection failed a connection test, WebLogic Server periodically =
tests a=20
connection from the disabled connection pool to determine when the =
connection=20
pool (or underlying database) is available again. When the connection =
pool=20
becomes available, WebLogic Server automatically re-enables the =
connection pool=20
and resumes routing connection requests to the connection pool, =
depending on the=20
MultiPool algorithm and the position of the connection pool in the list =
of=20
included connection pools.</P>
<P><A name=3D1068293></A>To control how often WebLogic Server checks =
automatically=20
disabled connection pools in a MultiPool, you add a value for the <CODE=20
style=3D"FONT-FAMILY: courier">HealthCheckFrequencySeconds</CODE> =
attribute to the=20
MultiPool configuration in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file. For example:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1068294></A>&lt;JDBCMultiPool =
<BR>AlgorithmType=3D"High-Availability" <BR>Name=3D"demoMultiPool" =
<BR>PoolList=3D"demoPool2,demoPool" <BR><CODE style=3D"FONT-WEIGHT: =
bold; FONT-FAMILY: courier">HealthCheckFrequencySeconds=3D"240" =
<BR></CODE>Targets=3D"examplesServer" /&gt;</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1068295></A>Note: </STRONG>This attribute is not =
available in=20
the administration console. To implement this functionality, you must =
manually=20
add the attribute to the MultiPool configuration in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file.</P>
<P><A name=3D1068296></A>WebLogic Server waits for the period you =
specify between=20
connection tests for each disabled connection pool. The default value is =
300=20
seconds. If you do not specify a value, WebLogic Server will test =
automatically=20
disabled connection pools every 300 seconds.</P>
<P><A name=3D1068297></A>This feature requires that connection pool =
testing=20
options are configured for all connection pools in a MultiPool, =
specifically=20
<CODE style=3D"FONT-FAMILY: courier">TestTableName</CODE> and <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE>. </P>
<P><A name=3D1068298></A>WebLogic Server does not test and automatically =
re-enable=20
connection pools that you manually disable. It only tests connection =
pools that=20
it automatically disables.</P>
<P><A name=3D1068299></A>If a callback handler is registered for the =
MultiPool,=20
WebLogic Server calls the callback handler before re-enabling the =
connection=20
pool. See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068361">C=
ontrolling=20
MultiPool Failback with a Callback</A> for more details. </P>
<H3 class=3Dhead3><A name=3D1068305></A>Enabling Failover for Busy =
Connection Pools=20
in a MultiPool<A name=3DFailoverRequestIfBusy></A></H3>
<P><A name=3D1068306></A>By default, for MultiPools with the High =
Availability=20
algorithm, when the number of requests for a database connection exceeds =
the=20
number of available connections in the current connection pool in the =
MultiPool,=20
subsequent connection requests fail.</P>
<P><A name=3D1068307></A>To enable the MultiPool to failover when all =
connections=20
in the current connection pool are in use, you must set a value for the =
<CODE=20
style=3D"FONT-FAMILY: courier">FailoverRequestIfBusy</CODE> attribute in =
the=20
MultiPool configuration in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file. If set to <CODE=20
style=3D"FONT-FAMILY: courier">true</CODE>, when all connections in the =
current=20
connection pool are in use, application requests for connections will be =
routed=20
to the next available connection pool within the MultiPool. When set to =
<CODE=20
style=3D"FONT-FAMILY: courier">false</CODE> (the default), connection =
requests do=20
not failover. Weblogic Server throws a <CODE=20
style=3D"FONT-FAMILY: =
courier">weblogic.jdbc.extensions.PoolUnavailableSQLException</CODE>.</P>=

<P><A name=3D1068308></A>After you add the <CODE=20
style=3D"FONT-FAMILY: courier">FailoverRequestIfBusy</CODE> attribute to =
the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file, the MultiPool =
entry may=20
look like the following:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1068309></A>&lt;JDBCMultiPool =
<BR>AlgorithmType=3D"High-Availability" <BR>Name=3D"demoMultiPool" =
<BR>PoolList=3D"demoPool2,demoPool" <BR><CODE style=3D"FONT-WEIGHT: =
bold; FONT-FAMILY: courier">FailoverRequestIfBusy=3D"true" =
<BR></CODE>Targets=3D"examplesServer" /&gt;</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1068310></A>Note: </STRONG>The <CODE=20
style=3D"FONT-FAMILY: courier">FailoverRequestIfBusy</CODE> attributes =
is not=20
available in the administration console. To implement this =
functionality, you=20
must manually add this attribute to the MultiPool configuration in the =
<CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file.</P>
<P><A name=3D1068311></A>If a <CODE=20
style=3D"FONT-FAMILY: =
courier">ConnectionPoolFailoverCallbackHandler</CODE> is=20
included in the MultiPool configuration, WebLogic Server calls the =
callback=20
handler before failing over. See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068317">C=
ontrolling=20
MultiPool Failover with a Callback</A> for more details.</P>
<H3 class=3Dhead3><A name=3D1068317></A>Controlling MultiPool Failover =
with a=20
Callback<A name=3Dmultipool_failover_callback></A></H3>
<P><A name=3D1068318></A>You can register a callback handler with =
WebLogic Server=20
that controls when a MultiPool with the High-Availability algorithm =
fails over=20
connection requests from one JDBC connection pool in the MultiPool to =
the next=20
connection pool in the list. </P>
<P><A name=3D1068319></A>You can use callback handlers to control if or =
when the=20
failover occurs so that you can make any other system preparations =
before the=20
failover, such as priming a database or communicating with a =
high-availability=20
framework.</P>
<P><A name=3D1068320></A>Callback handlers are registered via an =
attribute of the=20
MultiPool in the <CODE style=3D"FONT-FAMILY: courier">config.xml</CODE> =
file and=20
are registered per MultiPool. Therefore, you must register a callback =
handler=20
for each MultiPool to which you want the callback to apply. And you can =
register=20
different callback handlers for each MultiPool.</P>
<H4 class=3Dhead4><A name=3D1068322></A>Callback Handler =
Requirements</H4>
<P><A name=3D1068323></A>A callback handler used to control the failover =
and=20
failback within a MultiPool must include an implementation of the <CODE=20
style=3D"FONT-FAMILY: =
courier">weblogic.jdbc.extensions.ConnectionPoolFailoverCallback</CODE>=20
interface. When the MultiPool needs to failover to the next connection =
pool in=20
the list or when a previously disabled connection pool becomes =
available,=20
WebLogic Server calls the <CODE=20
style=3D"FONT-FAMILY: courier">allowPoolFailover()</CODE>method in the =
<CODE=20
style=3D"FONT-FAMILY: courier">ConnectionPoolFailoverCallback</CODE> =
interface,=20
and passes a value for the three parameters, <CODE=20
style=3D"FONT-FAMILY: courier">currPool</CODE>, <CODE=20
style=3D"FONT-FAMILY: courier">nextPool</CODE>, and <CODE=20
style=3D"FONT-FAMILY: courier">opcode</CODE>, as defined below. WebLogic =
Server=20
then waits for the return from the callback handler before completing =
the=20
task.</P>
<P><A name=3D1068324></A>Your application must return OK, RETRY_CURRENT, =
or=20
DONOT_FAILOVER as defined below.The application should handle failover =
and=20
failback cases.</P>
<P><A name=3D1068325></A>See the Javadoc for the <A=20
href=3D"http://e-docs.bea.com/wls/docs81/javadocs/weblogic/jdbc/extension=
s/ConnectionPoolFailoverCallback.html">weblogic.jdbc.extensions.Connectio=
nPoolFailoverCallback</A>=20
interface for more details. </P>
<P><STRONG><A name=3D1068326></A>Note: </STRONG>Failover callback =
handlers are=20
optional.If no callback handler is specified in the MultiPool =
configuration,=20
WebLogic Server proceeds with the operation (failing over or re-enabling =
the=20
disabled connection pool).</P>
<H4 class=3Dhead4><A name=3D1068328></A>Callback Handler =
Configuration</H4>
<P><A name=3D1068329></A>There are two MultiPool configuration =
attributes=20
associated with the failover and failback functionality: </P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068330></A><CODE=20
  style=3D"FONT-FAMILY: =
courier">ConnectionPoolFailoverCallbackHandler</CODE>=E2=80=94To=20
  register a failover callback handler for a MultiPool, you add a value =
for this=20
  attribute to the MultiPool configuration in the <CODE=20
  style=3D"FONT-FAMILY: courier">config.xml</CODE> file. The value must =
be an=20
  absolute name, such as <CODE=20
  style=3D"FONT-FAMILY: =
courier">com.bea.samples.wls.jdbc.MultiPoolFailoverCallbackApplication</C=
ODE>.=20

  <DL>
    <DT>
    <P class=3Dlistpara><A name=3D1082136></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">HealthCheckFrequencySeconds</CODE>=E2=80=94To control=20
    how often WebLogic Server checks disabled (dead) connection pools in =
a=20
    MultiPool to see if they are now available, you can add a value for =
this=20
    attribute to the MultiPool configuration in the <CODE=20
    style=3D"FONT-FAMILY: courier">config.xml</CODE> file. </P>
    <DT>
    <P class=3Dlistpara><A name=3D1082145></A>The maximum value that can =
be passed=20
    to the method is MAXINT while the minimum value is 0. Setting the =
value to=20
    zero disables the attribute.See <A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068290">A=
utomatic=20
    Re-enablement on Recovery of a Failed Connection Pool within a =
MultiPool</A>=20
    for more details.</P></DT></DL></LI></UL>
<P><A name=3D1068335></A>After you add the attributes to the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file, the MultiPool =
entry may=20
look like the following:</P>
<BLOCKQUOTE><PRE><CODE style=3D"FONT-SIZE: 10pt; FONT-FAMILY: =
courier"><A name=3D1068336></A>&lt;JDBCMultiPool =
<BR>AlgorithmType=3D"High-Availability" <BR>Name=3D"demoMultiPool" =
<BR><CODE style=3D"FONT-WEIGHT: bold; FONT-FAMILY: =
courier">ConnectionPoolFailoverCallbackHandler=3D"com.bea.samples.wls.jdb=
c.MultiPoolFailoverCallbackApplication"<BR></CODE>PoolList=3D"demoPool2,d=
emoPool" <BR><CODE style=3D"FONT-WEIGHT: bold; FONT-FAMILY: =
courier">HealthCheckFrequencySeconds=3D"120" =
<BR></CODE>Targets=3D"examplesServer" /&gt;</CODE></PRE></BLOCKQUOTE>
<P><STRONG><A name=3D1068337></A>Note: </STRONG>These attributes are not =
available=20
in the administration console. To implement this functionality, you must =

manually add these attributes to the MultiPool configuration in the =
<CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file.</P>
<H4 class=3Dhead4><A name=3D1068338></A>How It =
Works=E2=80=94Failover</H4>
<P><A name=3D1068339></A>WebLogic Server attempts to failover connection =
requests=20
to the next connection pool in the list when the current connection pool =
fails a=20
connection test or, if you enabled <CODE=20
style=3D"FONT-FAMILY: courier">FailoverRequestIfBusy</CODE>, when all =
connections=20
in the current connection pool are busy. </P>
<P><A name=3D1068340></A>To enable the callback feature, you register =
the callback=20
handler with Weblogic Server using the <CODE=20
style=3D"FONT-FAMILY: =
courier">ConnectionPoolFailoverCallbackHandler</CODE>=20
attribute in the MultiPool configuration in the <CODE=20
style=3D"FONT-FAMILY: courier">config.xml</CODE> file. </P>
<P><A name=3D1068341></A>With the High Availability algorithm, =
connection requests=20
are served from the first connection pool in the list. If a connection =
from that=20
connection pool fails a connection test, WebLogic Server marks the =
connection=20
pool as dead and disables it. If a callback handler is registered, =
WebLogic=20
Server calls the callback handler, passing the following information, =
and waits=20
for a return:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068342></A><CODE=20
  style=3D"FONT-FAMILY: courier">currPool</CODE>=E2=80=94For failover, =
this is the name of=20
  connection pool currently being used to supply database connections. =
This is=20
  the "failover from" connection pool.=20
  <LI type=3Dsquare><A name=3D1068343></A><CODE=20
  style=3D"FONT-FAMILY: courier">nextPool</CODE>=E2=80=94The name of =
next available=20
  connection pool listed in the MultiPool. For failover, this is the =
"failover=20
  to" connection pool.=20
  <LI type=3Dsquare><A name=3D1068344></A><CODE=20
  style=3D"FONT-FAMILY: courier">opcode</CODE>=E2=80=94A code that =
indicates the reason=20
  for the call:=20
  <UL type=3Ddisc>
    <LI type=3Ddisc><A name=3D1068345></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">OPCODE_CURR_POOL_DEAD</CODE>=E2=80=94WebLogic Server=20
    determined that the current connection pool is dead and has disabled =
it.=20
    <LI type=3Ddisc><A name=3D1068346></A><CODE=20
    style=3D"FONT-FAMILY: =
courier">OPCODE_CURR_POOL_BUSY</CODE>=E2=80=94All database=20
    connections in the connection pool are in use. (Requires <CODE=20
    style=3D"FONT-FAMILY: courier">FailoverIfBusy=3Dtrue</CODE> in the =
MultiPool=20
    configuration. See <A=20
    =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068305">E=
nabling=20
    Failover for Busy Connection Pools in a MultiPool</A>.) =
</LI></UL></LI></UL>
<P><A name=3D1068350></A>Failover is synchronous with the connection =
request:=20
Failover occurs only when WebLogic Server is attempting to satisfy a =
connection=20
request. </P>
<P><A name=3D1068351></A>The return from the callback handler can =
indicate one of=20
three options:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068352></A><CODE=20
  style=3D"FONT-FAMILY: courier">OK</CODE>=E2=80=94proceed with the =
operation. In this=20
  case, that means to failover to the next connection pool in the list.=20
  <LI type=3Dsquare><A name=3D1068353></A><CODE=20
  style=3D"FONT-FAMILY: courier">RETRY_CURRENT</CODE>=E2=80=94Retry the =
connection request=20
  with the current connection pool.=20
  <LI type=3Dsquare><A name=3D1068354></A><CODE=20
  style=3D"FONT-FAMILY: courier">DONOT_FAILOVER</CODE>=E2=80=94Do not =
retry the current=20
  connection request and do not failover. WebLogic Server will throw a =
<CODE=20
  style=3D"FONT-FAMILY: =
courier">weblogic.jdbc.extensions.PoolUnavailableSQLException</CODE>.=20
  </LI></UL>
<P><A name=3D1068355></A>WebLogic Server acts according to the value =
returned by=20
the callback handler.</P>
<P><A name=3D1068356></A>If the secondary connection pools fails, =
WebLogic Server=20
calls the callback handler again, as in the previous failover, in an =
attempt to=20
failover to the next available connection pool in the MultiPool, if =
there is=20
one.</P>
<P><STRONG><A name=3D1068357></A>Note: </STRONG>WebLogic Server does =
<EM>not</EM>=20
call the callback handler when you manually disable a connection =
pool.</P>
<P><A name=3D1068358></A>For MultiPools with the Load-Balancing =
algorithm,=20
WebLogic Server does not call the callback handler when a connection =
pool is=20
disabled. However, it does call the callback handler when attempting to=20
re-enable a disabled connection pool. See the following section for more =

details.</P>
<H3 class=3Dhead3><A name=3D1068361></A>Controlling MultiPool Failback =
with a=20
Callback<A name=3Dmultipool_failback></A></H3>
<P><A name=3D1068362></A>If you register a failover callback handler for =
a=20
MultiPool, WebLogic Server calls the same callback handler when =
re-enabling a=20
connection pool that was automatically disabled. You can use the =
callback to=20
control if or when the disabled connection pool is re-enabled so that =
you can=20
make any other system preparations before the connection pool is =
re-enabled,=20
such as priming a database or communicating with a high-availability=20
framework.</P>
<P><A name=3D1068363></A>Callback handlers are registered via an =
attribute of the=20
MultiPool in the <CODE style=3D"FONT-FAMILY: courier">config.xml</CODE> =
file and=20
are registered per MultiPool. Therefore, you must register a callback =
handler=20
for each MultiPool to which you want the callback to apply. And you can =
register=20
different callback handlers for each MultiPool.</P>
<P><A name=3D1068364></A>See the following sections for more details =
about the=20
callback handler:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068368></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068322">C=
allback=20
  Handler Requirements</A>=20
  <LI type=3Dsquare><A name=3D1068372></A><A=20
  =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068328">C=
allback=20
  Handler Configuration</A> </LI></UL>
<H4 class=3Dhead4><A name=3D1068373></A>How It =
Works=E2=80=94Failback</H4>
<P><A name=3D1068374></A>WebLogic Server periodically checks the status =
of=20
connection pools in a MultiPool that were automatically disabled. (See =
<A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068290">A=
utomatic=20
Re-enablement on Recovery of a Failed Connection Pool within a =
MultiPool</A>.)=20
If a disabled connection pool becomes available and if a failover =
callback=20
handler is registered, WebLogic Server calls the callback handler with =
the=20
following information and waits for a return:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068378></A><CODE=20
  style=3D"FONT-FAMILY: courier">currPool</CODE>=E2=80=94For failback, =
this is the name of=20
  the connection pool that was previously disabled and is now available =
to be=20
  re-enabled.=20
  <LI type=3Dsquare><A name=3D1068379></A><CODE=20
  style=3D"FONT-FAMILY: courier">nextPool</CODE>=E2=80=94For failback, =
this is null.=20
  <LI type=3Dsquare><A name=3D1068380></A><CODE=20
  style=3D"FONT-FAMILY: courier">opcode</CODE>=E2=80=94A code that =
indicates the reason=20
  for the call. For failback, the code is always <CODE=20
  style=3D"FONT-FAMILY: courier">OPCODE_REENABLE_CURR_POOL</CODE>, which =
indicates=20
  that the connection pool named in <CODE=20
  style=3D"FONT-FAMILY: courier">currPool</CODE> is now available. =
</LI></UL>
<P><A name=3D1068381></A>Failback, or automatically re-enabling a =
disabled=20
connection pool, differs from failover in that failover is synchronous =
with the=20
connection request, but failback is asynchronous with the connection =
request.=20
</P>
<P><A name=3D1068382></A>The callback handler can return one of the =
following=20
values:</P>
<UL type=3Dsquare>
  <LI type=3Dsquare><A name=3D1068383></A><CODE=20
  style=3D"FONT-FAMILY: courier">OK</CODE>=E2=80=94proceed with the =
operation. In this=20
  case, that means to re-enable the indicated connection pool. WebLogic =
Server=20
  resumes routing connection requests to the connection pool, depending =
on the=20
  MultiPool algorithm and the position of the connection pool in the =
list of=20
  included connection pools.=20
  <LI type=3Dsquare><A name=3D1068384></A><CODE=20
  style=3D"FONT-FAMILY: courier">DONOT_FAILOVER</CODE>=E2=80=94Do not =
re-enable the <CODE=20
  style=3D"FONT-FAMILY: courier">currPool</CODE> connection pool. =
Continue to=20
  serve connection requests from the connection pool(s) in use. =
</LI></UL>
<P><A name=3D1068385></A>WebLogic Server acts according to the value =
returned by=20
the callback handler.</P>
<P><A name=3D1068386></A>If the callback handler returns DONOT_FAILOVER, =
WebLogic=20
Server will attempt to re-enable the connection pool during the next =
testing=20
cycle as determined by the <CODE=20
style=3D"FONT-FAMILY: courier">HealthCheckFrequencySeconds</CODE> =
attribute in the=20
MultiPool configuration, and will call the callback handler as part of =
that=20
process.</P>
<P><A name=3D1068387></A>The order in which connection pools are listed =
in a=20
MultiPool is very important. A MultiPool with the High Availability =
algorithm=20
will always attempt to serve connection requests from the first =
available=20
connection pool in the list of connection pools in the MultiPool. =
Consider the=20
following scenario:</P>
<P><A name=3D1068388></A><CODE style=3D"FONT-FAMILY: =
courier">MultiPool_1</CODE>=20
uses the High Availability algorithm, has a registered <CODE=20
style=3D"FONT-FAMILY: =
courier">ConnectionPoolFailoverCallbackHandler</CODE>, and=20
includes three connection pools: <CODE style=3D"FONT-FAMILY: =
courier">CP1</CODE>,=20
<CODE style=3D"FONT-FAMILY: courier">CP2</CODE>, and <CODE=20
style=3D"FONT-FAMILY: courier">CP3</CODE>, listed in that order. </P>
<P><A name=3D1068389></A><CODE style=3D"FONT-FAMILY: courier">CP1</CODE> =
becomes=20
disabled, so <CODE style=3D"FONT-FAMILY: courier">MultiPool_1</CODE> =
fails over=20
connection requests to <CODE style=3D"FONT-FAMILY: courier">CP2</CODE>. =
</P>
<P><A name=3D1068390></A><CODE style=3D"FONT-FAMILY: courier">CP2</CODE> =
then=20
becomes disabled, so <CODE style=3D"FONT-FAMILY: =
courier">MultiPool_1</CODE> fails=20
over connection requests to <CODE style=3D"FONT-FAMILY: =
courier">CP3</CODE>. </P>
<P><A name=3D1068391></A>After some time, <CODE=20
style=3D"FONT-FAMILY: courier">CP1</CODE> becomes available again and =
the callback=20
handler allows WebLogic Server to re-enable the connection pool. Future=20
connection requests will be served by <CODE=20
style=3D"FONT-FAMILY: courier">CP1</CODE> because <CODE=20
style=3D"FONT-FAMILY: courier">CP1</CODE> is the first connection pool =
listed in=20
the MultiPool.</P>
<P><A name=3D1068392></A>If <CODE style=3D"FONT-FAMILY: =
courier">CP2</CODE>=20
subsequently becomes available and the callback handler allows WebLogic =
Server=20
to re-enable the connection pool, connection requests will continue to =
be served=20
by <CODE style=3D"FONT-FAMILY: courier">CP1</CODE> because <CODE=20
style=3D"FONT-FAMILY: courier">CP1</CODE> is listed before <CODE=20
style=3D"FONT-FAMILY: courier">CP2</CODE> in the list of connection =
pools.</P>
<H2 class=3Dhead2><A name=3D1068130></A>MultiPool Fail-Over Limitations =
and=20
Requirements<A name=3Dmultipool_limitations></A></H2>
<P><A name=3D1068131></A>WebLogic Server provides the High Availability =
algorithm=20
for MultiPools so that if a connection pool fails (for example, if the =
database=20
management system crashes), your system can continue to operate. =
However, you=20
must consider the following limitations and requirements when =
configuring your=20
system.</P>
<H3 class=3Dhead3><A name=3D1067445></A>Test Connections on Reserve to =
Enable=20
Fail-Over</H3>
<P><A name=3D1067514></A>Connection pools rely on the <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve</CODE> feature =
to know=20
when database connectivity is lost. Connections are <EM>not</EM> =
automatically=20
tested before being reserved by an application. You must set <CODE=20
style=3D"FONT-FAMILY: courier">TestConnectionsOnReserve=3Dtrue</CODE> =
for the=20
connection pools within the MultiPool. After turning on this feature, =
WebLogic=20
Server will test each connection before returning it to an application, =
which is=20
crucial to the High Availability algorithm operation. With the High =
Availability=20
algorithm, the MultiPool uses the results from testing connections on =
reserve to=20
determine when to fail over to the next connection pool in the =
MultiPool. After=20
a test failure, the connection pool attempts to recreate the connection. =
If that=20
attempt fails, the MultiPool fails over to the next connection pool.</P>
<H3 class=3Dhead3><A name=3D1067507></A>By Default, No Fail-Over When =
All=20
Connections are In Use</H3>
<P><A name=3D1067520></A>By default, if all connections in the primary =
connection=20
pool are being used, a MultiPool with the High Availability algorithm =
will not=20
attempt to provide a connection from the next pool in the list. =
MultiPool=20
failover takes effect only if loss of database connectivity has occurred =
(or the=20
connection pool has been disabled). See <A=20
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#1068305">E=
nabling=20
Failover for Busy Connection Pools in a MultiPool</A> for information =
about=20
enabling failover in a MultiPool when all connections in a connection =
pool are=20
in use.</P>
<H3 class=3Dhead3><A name=3D1067541></A>Do Not Enable Connection =
Creation=20
Retries</H3>
<P><A name=3D1067590></A>Do not enable connection creation retries with =
connection=20
pools in a High Availability MultiPool. Connection requests to the =
MultiPool=20
will fail (not fail-over) when a connection pool in the list is dead and =
the=20
number of connection requests equals the number of connections in the =
first=20
connection pool, even if connections are available in subsequent =
connection=20
pools in the MultiPool.</P>
<P><A name=3D1067646></A>MultiPools and the connection creation retries =
feature=20
both attempt to solve the same problem=E2=80=94to gracefully handle =
database connections=20
when a database is unavailable. If you use these two features together, =
their=20
functionality will interfere with each other.</P>
<H3 class=3Dhead3><A name=3D1067446></A>No Fail-Over for In-Use =
Connections</H3>
<P><A name=3D1067524></A>It is possible for a connection to fail after =
being=20
reserved, in which case your application must handle the failure. =
WebLogic=20
Server cannot provide fail-over for connections that fail while being =
used by an=20
application. Any failure while using a connection requires that you =
restart the=20
transaction and provide code to handle such a failure.</P>
<P><A name=3D1031899></A></P></DT></DIV><!-- BACK TO TOP -->
<P>&nbsp;</P>
<TABLE cellSpacing=3D5 cellPadding=3D5 border=3D0>
  <TBODY>
  <TR>
    <TD vAlign=3Dcenter align=3Dleft width=3D125><A=20
      =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html#wrap"><IMG=
=20
      height=3D1 alt=3D"Skip navigation bar"=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/_.gif" width=3D1 =
border=3D0></A>=20
      &nbsp;<A=20
      =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/programming.html"><IMG=20
      title=3D"Back to Top" height=3D25 alt=3D"Back to Top"=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/backtop.gif" =
width=3D90=20
      border=3D0></A> </TD>
    <TD vAlign=3Dcenter align=3Dleft width=3D85><A=20
      href=3D"http://e-docs.bea.com/wls/docs81/jdbc/intro.html"><IMG=20
      title=3DPrevious height=3D25 alt=3DPrevious=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/prevtop.gif" =
width=3D82=20
      border=3D0></A> </TD>
    <TD vAlign=3Dcenter align=3Dleft width=3D85><A=20
      =
href=3D"http://e-docs.bea.com/wls/docs81/jdbc/performance.html"><IMG=20
      title=3DNext height=3D25 alt=3DNext=20
      src=3D"http://e-docs.bea.com/wls/docs81/images/nexttop.gif" =
width=3D66=20
      border=3D0></A> </TD></TR></TBODY></TABLE><BR><!-- BACK TO TOP end =
--><!-- FOOTER begin -->
<DIV id=3Dfooter><A =
href=3D"http://www.bea.com/contact/index.shtml">Contact=20
BEA</A>&nbsp;|&nbsp; <A=20
href=3D"mailto:docsupport@bea.com">Feedback</A>&nbsp;|&nbsp; <A=20
href=3D"http://www.bea.com/framework.jsp?CNT=3Dprivacy.htm&amp;FP=3D/cont=
ent/legal/">Privacy</A>=20
&nbsp;|&nbsp;
<SCRIPT language=3DJavascript1.1 type=3Dtext/javascript>
Copyright();
</SCRIPT>
 <NOSCRIPT><A href=3D"http://edocs.bea.com/copyright.html">=C2=A9 BEA=20
Systems</A></NOSCRIPT> </DIV><!-- FOOTER end --><!-- WebTrend begin =
--><!-- START OF Data Collection Server TAG --><!-- Copyright 2002 NetIQ =
Corporation --><!-- V2.1 -->
<SCRIPT language=3DJavaScript type=3Dtext/javascript>
<!--
var dcs_imgarray =3D new Array;
var dcs_ptr =3D 0;
var dCurrent =3D new Date();
var DCS=3Dnew Object();
var WT=3Dnew Object();
var DCSext=3Dnew Object();

var dcsADDR =3D "63.96.161.95";
var dcsID =3D "";

if (dcsID =3D=3D ""){
	var TagPath =3D dcsADDR;
} else {
	var TagPath =3D dcsADDR+"/"+dcsID;
}

function dcs_var(){
	WT.tz =3D dCurrent.getTimezoneOffset();
	WT.ul =3D navigator.appName=3D=3D"Netscape" ? navigator.language : =
navigator.userLanguage;
//	WT.cd =3D screen.colorDepth;
//	WT.sr =3D screen.width+"x"+screen.height;
	WT.jo =3D navigator.javaEnabled() ? "Yes" : "No";
	WT.ti   =3D document.title;
	DCS.dcsdat =3D dCurrent.getTime();
	if ((window.document.referrer !=3D "") && (window.document.referrer =
!=3D "-")){
		if (!(navigator.appName =3D=3D "Microsoft Internet Explorer" && =
parseInt(navigator.appVersion) < 4) ){
			DCS.dcsref =3D window.document.referrer;
		}
	}

	DCS.dcsuri =3D window.location.pathname;
	DCS.dcsqry =3D window.location.search;
	DCS.dcssip =3D window.location.hostname;

}

function A(N,V){
	return "&"+N+"=3D"+escape(V);
}

function dcs_createImage(dcs_src)
{
	if (document.images){
		dcs_imgarray[dcs_ptr] =3D new Image;
		dcs_imgarray[dcs_ptr].src =3D dcs_src;
		dcs_ptr++;
	}
}

function dcsMeta(){
	var MRV=3D"";
	var F=3Dfalse;
	var myDocumentElements;
	if (document.all){
		F =3D true;
		myDocumentElements=3Ddocument.all.tags("meta");
	}
	if (!F && document.documentElement){
		F =3D true;
		myDocumentElements=3Ddocument.getElementsByTagName("meta");
	}
	if (F){
		for (var i=3D1; i<=3DmyDocumentElements.length;i++){
			myMeta=3DmyDocumentElements.item(i-1);
			if (myMeta.name.indexOf('WT.')=3D=3D0){
				WT[myMeta.name.substring(3)]=3DmyMeta.content;
			}
			if (myMeta.name.indexOf('DCSext.')=3D=3D0){
				DCSext[myMeta.name.substring(7)]=3DmyMeta.content;
			}
		}
	}
}

function dcs_TAG(TagImage){
	var P =
=3D"http"+(window.location.protocol.indexOf('https:')=3D=3D0?'s':'')+"://=
"+TagImage+"/dcs.gif?";
	for (N in DCS){P+=3DA( N, DCS[N]);}
	for (N in WT){P+=3DA( "WT."+N, WT[N]);}
	for (N in DCSext){P+=3DA( N, DCSext[N]);}

	dcs_createImage(P);
}
// This is a sample of the function that would be called if you needed =
to re-run the script.
//function dcs_ReRun(URI,QRY){
//	DCS.dcsuri =3D URI;
//	DCS.dcsqry =3D QRY;
//	dcs_TAG();
//}

dcsMeta();
dcs_var();
dcs_TAG(TagPath);
//-->
</SCRIPT>
<!--=20
<img BORDER=3D"0" NAME=3D"DCSIMG" WIDTH=3D"1" HEIGHT=3D"1" =
SRC=3D"http://63.96.161.95/njs.gif?dcsuri=3D/nojavascript" alt=3D"">This =
code is building Meta information to pass to the webTrends server for =
reporting.
--><!-- WebTrend end --></BODY></HTML>

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/header_logo.gif

R0lGODlhYgBVANUAADg4OPhxbfhjW/RPT56envA1QvaPkfuEenBydPKjnPzd4OTk5MnJyfmcpPau
sv/v8Pe8wPfO0vzn6QIPIVdXV/V0gv709PNCQfNZZ9+KjP75+vrw8P/7+/r6+v73+P/9/d56fdhZ
Zf39/dlJUu7x9QAVK/X19f3///r9///9/wAaNe4fLAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABiAFUAAAb/wJZw
SCwaj8ikcslsOp/QqHRKrVqv2Kx2y+16v+CweEwum8/otHrNbrvf8Lh8Tq/b7/i8fs/v+/9GJhEO
EApEGwobHIBUESEHCQ4hEi0iGSAJkYxMGxIbH0IMKwIBBwcrChYhAwEGARmbSRIZkAkZKQorKwMC
A7seIAUCvQUQHBIQEB2xocIHBgkFEgkrAQECuhASwgG+GBYZAQkgEcwRKxekARcrGw4YBgcDBQ4t
CgMH3Riz3BflfR8sWAAlIsQFawIKrKjQ4kGCfAf+cXBgrYGFCMJ8BfATIQO0BAo4jBAnbxclIQ8s
GEkpRIEAeRgeeFiUB0WGg5BCGGjR4KWA/wsVTjp5EM+ABQgGYOH5kGEXKWwNWnCA0KDBPykeWkBg
NSDPuQFgFRYwpMUEvgEM8STA101XvS0SSh0QKueEBiEQfF4YAKHL1AgS7sqZCCJDgggikBpwQJdL
hExyFowQsDhBiDL3KMeRgM6avLRjXAUg62bDCGHDFF4Vo8ABaTcQCpRKuCLqEAoTcudGoEUDhLdw
tpqa5wDUEAAskifnnQWE5jgc4gVo8FoIcuUsmF/x8LLxmk4qLWQ9cl25disPIqh0owAEpgyrjZRf
jiVBgPhqMoyohQE4eezZXSEBWuut8QEIo8w2lhLzBYgeBAWu4UA11yhkWxINatfBCUt8oP+BcUx0
IOIRIpjQWwiUrbOCUUtk2AEBFAAAAAIMrNRAN3thQB0SC8AoIwAU0DhEjwzUiIUHnvXigGAMAkgB
BQBOYKQQDiiky5W6NACiEARMAKByFJDQQpEETHlFBM8w5kSDXyYHwBAQYCmnLjsNQUCb2FHQQZFF
cvHAA080WAICUGI3gZgPWHmlK3L+wwCAABCgAoAMvNhnFtNk0lcTDRLQwgJfLqCVnAw9QCqXAHp6
J3bMLYOFTTolYMBlnKbawgZeYidqA3LupIGi6CyCgK2rgrlFQQeVckGdTHTaAgm5KidqBb228CuW
0rRQqHKqOqlFB03xMs+CtWLnqQTRJjf/bbUpAItKCwiUAIC8JdRYrJtaxPaUW4HaCi2A62KLAQZz
GmKCBwJlxQED2+KbhSuuXEAPFM4+kC4LAc9ZcBELMNzmm1nkdQAphmiwwXgt+ntxxhpjSdoCCLCp
HMhYfPBbOe4YRk6ztloMcAvUYqljVURXBWgLXWI3KKQidBHBCCAsJkACPJv77MpAV5vEo9gB0DGk
XYhCSj7kCoEwTcf1jHXQiwpxYwUBVBAUvJQizfQWuaTTy4pDKJAJZEQ4+6+uWWNZJ8Eua1v3vSzQ
jIUFI7Dy0woxtQDuSzeCUETFa2sdgJyGNIzxmHdnEQE+Ixewj7UjpNPWpmlbvQDWBmiN2PiVgIou
KuOOn4lBPgM0AKgGIehSgEIBoGwdgLxJEKWocWKZ1u27LCK6vaXX7IABOwpBDZYDVNeCoAQM2/UG
DQFbQAO1Y2mb+WAS0GDvXZgm7i7ij4+nt3i1fCUGgmEcngDAITA8YCQ/qcDR5MM80XmNCFVqWeWE
0AEHws9NTQsDBJ6BHyKUDwEgRMACSCC/CcxIVEWQQAMwcLzjVWBJHCshkDoWQhB6Kg8m2ICJlKCB
PzHpCBzYgJiYQcQiGvGISEyiEpfIxCY68YlQjKIUp0jFKlrximoIAgA7

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/header_right.gif

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

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/_.gif

R0lGODlhHwMCAIAAAABmzAAAACH5BAAAAAAALAAAAAAfAwIAAAInhI+py+0Po5y02ouz3rz7D4bi
SJbmiabqyrbuC8fyTNf2jef6zhsFADs=

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/doc_nav_prev.gif

R0lGODlhIwAsAMQAAAAAAP///3GUvZWvzlGBtWGKuGOLuIKhxUB6tKjA2a/G3ix0tTF1tLzS5hdy
vCRztwhzxQtzwxFyv9Hm9tHl9QB2zP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
ABYALAAAAAAjACwAAAX3YCCOZGmeaKqubOu+cCzPdG2bUz7dpWIskEoFsjAobpSCRMhkSgoUWgPR
rDIRDRmFau0iorBCt8mIMAswxXJMaEwczqPL0HUUcoF30/BaVBkDO3kNYk0LLhNBQggJOzkDDF0Q
gisTV4INBGNMlCqWiyNcmxWdKYlCD255EwIPY5MufkwMjSITCaJMh3NWDwd4OWZMfC5qY3c7cEIS
ci6FY4zKFWgwW6NNXzJT1xVYNElrVk9gNT5AQkRGPCQ6pevv8PHyNwD1I/YB+Pn3LwAi/vsCAtw3
sAXAg//qDfRXkAVCgSYYwlDIL2HBhg7nkcCosaPHjx1DAAA7

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/doc_nav_next.gif

R0lGODlhLAAsAMQAAAAAAP///3GUvZWvzlGBtWGKuGOLuIKhxUB6tKjA2a/G3ix0tTF1tLzS5hdy
vCRztwhzxQtzwxFyv9Hm9tHl9QB2zP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
ABYALAAAAAAsACwAAAX6YCCOZGmeaKqubOu+cCzPdG3feC5O/KSvCsMCUqlAFgbFr0QpSIpQqKRA
WQYaiKgWimj8KNmtGFHNFaARhjhayCmeRcekQVhXJMqbISoP8AoOYgY4C1oFDT5+A2pRCzcTRFsM
Azx+CWFGiTQTdkUEXn6YmjOcnRUII6I2kGsPApVzD0UQozOFWggJiRMJjEWOelERsBMHslqDN29Q
Dn4TZ2J4ZsyXnW05YKZcZTlY2l1WTXBbU9xWQUOzSHlWJj217fHy8ycA9Cn2OQD7I/wB+f/++buR
z15BEQb76Ti4byDAgPoQQlQI8KGNgwITShR4r6PHjyBDilwRAgA7

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/doc_nav_dots.gif

R0lGODlhBQAsAIAAAP///5mZmSwAAAAABQAsAAACF4SPqcuBzhI0M9Jn8am28uhlmyaG4ikWADs=

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/doc_nav_contents.gif

R0lGODlhNAAsAOYAAAAAAP////7+//n7/vT4/dvp+O/1/ABmywFnywJnywNozARozAdpyQhrzQps
zQxtzQ1uzhBwzhNxzxRyzxVxzBZzzxl10Bl0zRp20Bt20R950SB50iF60h9yxSFzxSN0xih+0yh3
xS2B1Ct5xjCD1TGD1TOF1TWG1jeH1jmI1zqJ1zuJ1z6L2D+M2DuDykGN2EWP2USO1kqS2kuT2k2U
20eHx0iIx1CW21SY3Faa3Vud3l2TymSe12qm4Wml4G6o4XSs43+y5Y+86IKq0oSr0pfB6pvD642y
1p7F65Cz1pe42ajL7arM7q3O7q7O7q/L57jU8cDZ8sPb88Xc88bc88je9NHj9tLk9tbm99bm9tno
997r+OHt+dnk7+Pu+evz++Ts9PT4/Pj7/vf6/fr8/vn7/f3+//z9/rDQ77LR77rW8cTc88bd88nf
9Nfn9t3r+N/s+Ofx+uTt9ebu9fH3/Pb6/fv9/vr8/f///wAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAHgALAAAAAA0ACwAAAf/gAGCg4SFhoeIiYqLjI2Oj5CRkpOUlZaXmJmam5ydg11ENR4xVGV3
cmCeigJDIQcNN2wDY2ovI0cCqoZzOwe+Pl5nY1AmBxEYO3O6gwK9viVNXwJtKQcJWr47uctDvgkk
TnVkUSYKG2++vkPLXa4LLFAEA1UzDhhw6VgHIV26RNYt1ogRU0XGAglb8qUjoqtGAxpTZtVacECf
L4sVa+j6QMMKmTrELioU2UEXBSZ26qRBkaDiSJcHGOi6gMbMGCMTEGDcmc6NLg844JyJAyQCBJFI
K5ZUVePBDy8DuPQQUYGnSI2q/k0I8sVMAR3WklpkqKrdgQxCDIi5AkOsL37cmnxxKEKHzJoVByok
XbesmS8QaMYMiILCGkZtywTxsnYCypg6SzQoOJDjQLLEzFodUCFlAB0kGiy4ULIN8yciNnhkORPm
SZJ+pmPLnk1bEQBHtzHnZrQ7EoDdvwf9zj1cUHDjx4sXb0Q8QHPnxqNDn/78dm/mhKpLJ75cu/Pr
tqN79y58e/ZHx7+Xp859/HDwtePLn0+/vv1CgQAAOw==

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/doc_nav_pdf.gif

R0lGODlhOwAsANUAAAAAAP////7+//n7/vT4/dvp+Ory+wBmywFnywRozAZqzAxtzQ5uzhNxzx13
0Sh+0y6C1DmI1zqJ1z+M2EWP2UiR2kmS2kyU2k+V21+f3mGg33Cp4nat44+86JS/6ZrC6pzE66/P
79Hj9uPu+e30+/L3/Pf6/fr8/vz9/mak4JXA6bDQ77fU8MTc89Pl9uLu+efx+vv9/v///wAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAADIALAAAAAA7ACwAAAb/wIBw
SCwaj8ikcslsOp/QqHRKrVqv2Kx2y+16uSNQBrJYQDKg0Rcq+EgO8Dhc8hGsmSSOfB/nkO5JAnoH
CA4bLAYGLBsTCHAcdoBGH3ERK0YrF44HH5JFI28HDpcvHRUVHS8BK6ESap5CIHEbAS8YchiqG3Eg
sEIZcSwBHXwdASxxGb4BEHEGARV8FQEGcRDLC87Q0tRxC9jBw8XH3svNcLS2uLrWy8Bwo7WmqKor
KQ1wyr6ylZdFKyUKeHhwoJcvUHEKHUq0iIIIFARCaHjlixIfOQw0uIhhAsYyIYIuylFgocWJj0Py
iIyTQMUAlEPahOJDJxLMIWHGlDmT5qbPZp9APQHwAqDoUCFGhxg9+pHp0adIkTgN4BQq1ahEklIt
qrTr1ahMjQy1CnXs1bBd0W7livUs2yJmvy49Szcr27dfs6ZNEtcq2LpYw06FG1jJ4LVt0c7V2lbp
W7VBI0ueTLmy5SFBAAA7

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/get_reader.gif

R0lGODlhNAAsAIABAAAAAP///yH5BAEAAAEALAAAAAA0ACwAAAKVjI+py+0Po5y02ouz3rz7XwHg
JCrl6ACqsaorypSizMIN7dL2gifn7nu5WD8gomiM1ZKQF/MJtTmjpuUBOUXprlXgdjgMhMVITW45
q/XEH906zT573Op6XEskyvbCLPUPGGgyJnhSxiPFFXHIYZj3SLZnlyH3xnYXB4fhBmY309nI9fN5
qXm54Rjp2Wcq6PoKGyubVAAAOw==

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/backtop.gif

R0lGODlhWgAZAMQAAAAAAP///0p2s26OuneVvoiixoylx8HR5laAtT93s6vC26vB2h9xui1zth1x
uwN1yg5ywtHm9gB2zP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
ABMALAAAAABaABkAAAX/YCCOZGmeaKqubJtGkSIrsGvfeB4RjOT/DEIkRywWF46f8udYGJ/QVOGx
rEoehag2uqAuH17lw7kt4yLJL81QdQzNcBbBOhAprIS4HhXpVRUiEQNVDG8kADiIeyoRVggRBwIx
VoYjijaXhy2ZOHd/ERASNAl/JpwspwGppkaeSm6eDZNLgCUAt5e4h7eqIpm6vry7isCqxSSuPzQI
ymi0rL620Za9mtTT2LnZJskSELM+dd211tW4xLvQ29fV5uwjjUoGAWw/DzFhEpXb2u29nL/e9XOH
DZ4fHzLSNBvko5A6RP0C+pM4kR26giPmWNnoI4+pYucs8RpoTOQpYSCPNpFwxrHNvkVFVpHo0lIM
GZhQZJKYUvNKFpxARyBp2SSo0UA8CAk5yjQAjBk0XjadSrWqVT0hAAA7

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/prevtop.gif

R0lGODlhUgAZAJEAAPPi4Sd1uwAAAP///yH5BAAAAAAALAAAAABSABkAAALDnI+py+0Po5y0VoCz
trzHHIRimHnmOWDjKmLoS6ns7MJ2I880cPcJoAsGeD5fTnccEos2IFLDWtoEPedKA7oyb1YSNihF
CMbUAbVMNpTNbPVYfUC/HV2ocMhYn9HxNpsPp+f3UJdyR5LXp0fGByj4uEY3gtUVlRjYl3AG57fJ
aRa5UKlkZ7nwmNmZifo5KPpU2pKXNkj7uYi7Fyo62pLle7l1cVgZJiZskXRXgwyj/NRc1XtlHI3y
S11t/UK5sf0NblMAADs=

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/nexttop.gif

R0lGODlhQgAZAMQAAAAAAP///0p2s26OuneVvoiixoylx8HR5laAtT93s6vC26vB2h9xui1zth1x
uwN1yg5ywtHm9gB2zP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
ABMALAAAAABCABkAAAXpYCCOZGmeaKqubOumUaTMSvzeOBoRjOT/DEIkR7wtHL/kz7EoOlWFh3Iq
eRSeWNJCSp0+mtlnBNmlOobhIkGpMEDKEkKaGOklFQEZecpAz08AJxFTDgY1MghUfn8lgSYKZQiH
CgNcPng3AJqOAZsjnIGeJJBwEAciCpaYL6Cdn6+OnKNwPgIiEao4rZuaJK2PcA2TBne6sCi/JYNe
A5MDU4stu68iodWCdj81eQoJVH3G15294q7jJmtJMgp7U3KMN2NJlXBn8DhbtD9f9zlR+lb6ETlS
D4zAHDuyARFyUMy6GTYaSpwoMAQAOw==

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://e-docs.bea.com/wls/docs81/images/whitearrow.gif

R0lGODlhEQASAPe6AOfn5wdaserq6t7e3vr6+u/v7/7+/v39/Rxhqvn5+W6HoQhmyOXl5QlnyeLi
4t3d3evr6+vu8e3t7bfCzhBpx/f39zl3t+Hh4bnAyL/J05GovzVwreXm6DdklNnZ2UZyoCpajQhj
wm6FnAdYrZyqutTX2tjY2PLz9CFruRBbqiNwwLbCzghhvTl6vwhZrdPT01yFsbq9wDp2tC13xEZq
kMjIyAlnyjt/xQliwPz8/Iifth5ruiVzxUtzncDJ0tfc4s7Y4pCitNHY3wpnyRBaqExxmLq6uunp
6YuhuJ2su0F5syZrs/b29mSCoQhlxrrI1g5dsNvb25ysvZqwxgphva29zQpivjx/xF+DqRdovJqn
tSBiqJumskpwmPLy8rbBza29zlV4m/T09AtoyJmpuhdrwm6IpPj4+AtftuDg4GKEqE14pStxup+l
q9/f346ku6G0yBFrxxJpxG2GoIGevBphrH+TqER3rNra2l58m9fX1wdfuePj42SDpLu7u/X19XSM
pG2JpcfIyRFcq3GKpH+Vq7rF0AllxQ5crebm5glfuBhrwix1wAhmycjQ2Uxxl3eQqQdXq+Po7AdU
pert8QpetfH09iNxwh1iqx1iqglkxAhiwQdasFmEsQ1esoabsBFWnqu3wxFgslqFsdTU1L29vcHM
16CmrBdep9LS0sLN2TV7wxpTj0p1orzEzODh4YSXqujs8bTAzdDR0UhtlKu1vwlguyZwvo2bqv//
/whnygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAALoALAAAAAARABIA
AAj/AHUJFDgGxR0YnWSUaTCwoQ0LuGq44ZNoQIxAixrqGqLGzwAIAAQQyCXmRRs2DbGUGsDAwYUS
ZKRYIqDn1C2BjIw8ECAAQBotoCaFiZALTxAKDZA8qGDgQIICGDbockGDUi4TFuQISpDLgIFcuQgA
aaFrxKMICejM8LDCzBwFcAHBanVIV6Qukp7c4NBhT4C/ATgFsMJQVyVCQla9apKpDoLHmLYsiSNw
hx1TWWYByCBrwoQvhnyMoqBLxZsCUzSFYhBSAMgoIojouvTpAYE1uj54kdDywgAuqHTxKEQq1w9R
uqiQOHCmwBEHtZRc0ZHqAJMejQQOSgI2R4UTjlxJLsj1Jw+OgQtSQIoFtn0uVbRsaVygCEQfOFXA
aCjCKoTGgU6w4AkiUKCxyQINBQQAOw==

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/styles.css

BODY {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; COLOR: #000; PADDING-TOP: 0px; FONT-FAMILY: Verdana, Arial, =
Helvetica, sans-serif; BACKGROUND-COLOR: #fff
}
TABLE {
	FONT-SIZE: 11px; VERTICAL-ALIGN: top; FONT-FAMILY: Verdana, Arial, =
Helvetica, sans-serif
}
TD {
	FONT-SIZE: 11px; VERTICAL-ALIGN: top; FONT-FAMILY: Verdana, Arial, =
Helvetica, sans-serif
}
A:link {
	COLOR: #0076cc; TEXT-DECORATION: none
}
A:visited {
	COLOR: #0076cc; TEXT-DECORATION: none
}
A:hover {
	COLOR: #0076cc; TEXT-DECORATION: underline
}
#header {
	BORDER-RIGHT: #ababab 1px solid; MIN-WIDTH: 799px; WIDTH: 100%; =
WHITE-SPACE: nowrap; POSITION: relative; BACKGROUND-COLOR: #e6e6e6
}
#headergraphic {
	PADDING-RIGHT: 0px; MIN-WIDTH: 799px; PADDING-LEFT: 0px; =
PADDING-BOTTOM: 0px; MARGIN: 0px; WIDTH: 100%; PADDING-TOP: 0px; =
WHITE-SPACE: nowrap; HEIGHT: 85px; BACKGROUND-COLOR: #ffffff
}
.buttons {
	FONT-SIZE: 11px; RIGHT: 0px; COLOR: #fff; POSITION: relative
}
.buttons A:link {
	FONT-SIZE: 11px; COLOR: #fff; TEXT-DECORATION: none
}
.buttons A:visited {
	FONT-SIZE: 11px; COLOR: #fff; TEXT-DECORATION: none
}
.buttons A:hover {
	COLOR: #fff; TEXT-DECORATION: underline
}
#floater {
	PADDING-RIGHT: 10px; RIGHT: 0px; POSITION: absolute; TOP: 3px; =
TEXT-ALIGN: right
}
.searchbox {
	MARGIN-TOP: 6px; FONT-SIZE: 10px; RIGHT: 0px; FONT-FAMILY: Verdana, =
Arial, Helvetica, sans-serif
}
INPUT.search {
	FONT-SIZE: 11px; WIDTH: 200px; COLOR: #444; FONT-FAMILY: Verdana, =
Arial, Helvetica, sans-serif
}
.blueline {
	MARGIN-TOP: 1px; HEIGHT: 2px; BACKGROUND-COLOR: #0066cb
}
#graybar {
	MIN-WIDTH: 799px; FONT-SIZE: 11px; BACKGROUND: #e6e6e6; WIDTH: 100%; =
COLOR: #333; WHITE-SPACE: nowrap; POSITION: relative; HEIGHT: 25px
}
#graybar A:link {
	FONT-SIZE: 11px; COLOR: #000; TEXT-DECORATION: none
}
#graybar A:visited {
	FONT-SIZE: 11px; COLOR: #000; TEXT-DECORATION: none
}
#graybar A:hover {
	TEXT-DECORATION: underline
}
.topnav {
	PADDING-RIGHT: 0px; PADDING-LEFT: 2px; LEFT: 0px; PADDING-BOTTOM: 0px; =
MARGIN-LEFT: 8px; PADDING-TOP: 5px; POSITION: relative
}
.twodots {
	BACKGROUND-IMAGE: url(images/twodots.gif); BACKGROUND-REPEAT: repeat-x; =
HEIGHT: 3px
}
#left_nav {
	BORDER-RIGHT: #f7f7f7 1px solid; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
FONT-SIZE: 11px; BACKGROUND: #f7f7f7; PADDING-BOTTOM: 0px; MARGIN-LEFT: =
4px; WIDTH: 160px; LINE-HEIGHT: 1.8; PADDING-TOP: 0px; BORDER-BOTTOM: =
#f7f7f7 1px solid
}
.nav_head {
	PADDING-RIGHT: 4px; PADDING-LEFT: 7px; FONT-WEIGHT: bold; FONT-SIZE: =
11px; BACKGROUND: #d9d8d8; PADDING-BOTTOM: 4px; MARGIN: 0px 0px 4px; =
COLOR: #555; LINE-HEIGHT: 14px; PADDING-TOP: 4px; FONT-FAMILY: Verdana, =
Arial, Helvetica, sans-serif
}
.nav_group {
	PADDING-BOTTOM: 6px; LINE-HEIGHT: 1.6em
}
.nav_group A:link {
	FONT-SIZE: 11px; MARGIN-LEFT: 11px; COLOR: #555; FONT-FAMILY: Verdana, =
Arial, Helvetica, sans-serif; TEXT-DECORATION: none
}
.nav_group A:visited {
	FONT-SIZE: 11px; MARGIN-LEFT: 11px; COLOR: #555; FONT-FAMILY: Verdana, =
Arial, Helvetica, sans-serif; TEXT-DECORATION: none
}
.nav_group A:hover {
	TEXT-DECORATION: underline
}
.breadcrumb {
	BORDER-RIGHT: #fff 1px solid; PADDING-RIGHT: 0px; BORDER-TOP: #fff 1px =
solid; PADDING-LEFT: 15px; FONT-WEIGHT: normal; FONT-SIZE: 11px; =
PADDING-BOTTOM: 15px; MARGIN: 10px 0px 0px; BORDER-LEFT: #fff 1px solid; =
COLOR: #333333; BOTTOM: 0px; PADDING-TOP: 5px; BORDER-BOTTOM: #fff 1px =
solid; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; TOP: 0px; =
TEXT-ALIGN: left; TEXT-DECORATION: none
}
.breadcrumb:hover {
	FONT-WEIGHT: normal; FONT-SIZE: 11px; COLOR: #0076cc; FONT-FAMILY: =
Verdana, Arial, Helvetica, sans-serif; TEXT-DECORATION: none
}
.breadcrumb:visited {
	FONT-WEIGHT: normal; FONT-SIZE: 11px; COLOR: #333333; FONT-FAMILY: =
Verdana, Arial, Helvetica, sans-serif; TEXT-DECORATION: none
}
.breadcrumb:hover:visited {
	FONT-WEIGHT: normal; FONT-SIZE: 11px; COLOR: #0000cc; FONT-FAMILY: =
Verdana, Arial, Helvetica, sans-serif; TEXT-DECORATION: none
}
.notice {
	BORDER-RIGHT: #666 1px dashed; PADDING-RIGHT: 8px; BORDER-TOP: #666 1px =
dashed; MARGIN-TOP: 20px; PADDING-LEFT: 8px; PADDING-BOTTOM: 8px; =
BORDER-LEFT: #666 1px dashed; PADDING-TOP: 8px; BORDER-BOTTOM: #666 1px =
dashed; BACKGROUND-COLOR: #e6e6e6
}
.hide {
	DISPLAY: none
}
.wrap {
	MARGIN: 0px; WIDTH: 750px; POSITION: relative
}
.wrap_ln {
	MARGIN-LEFT: 180px; WIDTH: 600px; POSITION: relative
}
.featured {
	BORDER-COLLAPSE: collapse
}
.featured TD {
	PADDING-RIGHT: 10px; PADDING-BOTTOM: 8px
}
.feature {
	FONT-WEIGHT: bold; FONT-SIZE: 12px
}
#col_main {
	PADDING-RIGHT: 8px; PADDING-LEFT: 14px; MARGIN: 0px 20px; WIDTH: 420px
}
#col_main_left {
	MARGIN: 0px 20px; WIDTH: 200px
}
#col_main_right {
	MARGIN: 0px 20px; WIDTH: 200px
}
#col_main_left {
	PADDING-RIGHT: 20px
}
#col_right {
	PADDING-LEFT: 8px; MARGIN: 0px 20px; WIDTH: 200px
}
.box_gray {
	BORDER-RIGHT: #d3d3d3 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: =
#d3d3d3 1px solid; PADDING-LEFT: 5px; MARGIN-BOTTOM: 12px; =
PADDING-BOTTOM: 5px; BORDER-LEFT: #d3d3d3 1px solid; PADDING-TOP: 10px; =
BORDER-BOTTOM: #d3d3d3 1px solid
}
.box_white {
	BORDER-RIGHT: #d3d3d3 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: =
#d3d3d3 1px solid; PADDING-LEFT: 5px; MARGIN-BOTTOM: 12px; =
PADDING-BOTTOM: 5px; BORDER-LEFT: #d3d3d3 1px solid; PADDING-TOP: 10px; =
BORDER-BOTTOM: #d3d3d3 1px solid
}
.box_gray {
	BACKGROUND-COLOR: #f4f4f4
}
.graybox {
	PADDING-RIGHT: 10px; BORDER-TOP: #666 1px dotted; PADDING-LEFT: 10px; =
PADDING-BOTTOM: 10px; MARGIN: 10px 0px; PADDING-TOP: 10px; =
BORDER-BOTTOM: #666 1px dotted; BACKGROUND-COLOR: #eee
}
.icon {
	PADDING-RIGHT: 2px; PADDING-LEFT: 5px; PADDING-BOTTOM: 5px; =
PADDING-TOP: 4px
}
.title {
	MARGIN-BOTTOM: 3px
}
.leftnav {
	FLOAT: left; MARGIN-LEFT: 10px; WIDTH: 160px; PADDING-TOP: 2px
}
.thumb {
	MARGIN-BOTTOM: 5px; MARGIN-RIGHT: 5px
}
.thumb_right {
	MARGIN-TOP: 5px; MARGIN-BOTTOM: 5px; MARGIN-LEFT: 5px
}
.blurb {
	MARGIN-TOP: 6px
}
.pullquote {
	PADDING-RIGHT: 8px; BORDER-TOP: #999 1px solid; PADDING-LEFT: 8px; =
FONT-WEIGHT: bold; FLOAT: right; PADDING-BOTTOM: 8px; MARGIN: 5px 0px =
5px 5px; WIDTH: 170px; COLOR: #666; PADDING-TOP: 8px; BORDER-BOTTOM: =
#999 1px solid; BACKGROUND-COLOR: #eee
}
.small {
	FONT-SIZE: 10px
}
#navLeft {
	FLOAT: left; WIDTH: 160px
}
#contentRight {
	MARGIN: 0px 0px 0px 180px; WIDTH: 560px
}
.keywordhighlight {
	FONT-WEIGHT: bold; BACKGROUND-COLOR: #fff; background-layer: #fff
}
.l {
	FONT-SIZE: 11px
}
#footer {
	MARGIN-TOP: 50px; PADDING-LEFT: 28px; MARGIN-BOTTOM: 8px; COLOR: #666
}
#footer A:link {
	FONT-SIZE: 11px; COLOR: #666; TEXT-DECORATION: none
}
#footer A:visited {
	FONT-SIZE: 11px; COLOR: #666; TEXT-DECORATION: none
}
#footer A:hover {
	TEXT-DECORATION: underline
}

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/edocs.css

INPUT {
	FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
OPTION {
	FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
SELECT {
	FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
TD {
	FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
TH {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
TD.shadedwithborder {
	BORDER-RIGHT: #000000 1px solid; BORDER-TOP: #000000 1px solid; =
BORDER-LEFT: #000000 1px solid; BORDER-BOTTOM: #000000 1px solid; =
BACKGROUND-COLOR: #eeeeee
}
A:active {
	COLOR: #ff0000
}
A:link {
	COLOR: #0076cc; TEXT-DECORATION: none
}
A:visited {
	COLOR: #0076cc; TEXT-DECORATION: none
}
A:hover {
	COLOR: #0076cc; TEXT-DECORATION: underline
}
.navarea {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; MARGIN: 0.05in 0.03in 0.05in 0.07in; =
FONT-FAMILY: Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
.navarea-color {
	BACKGROUND-COLOR: #dde4eb
}
A.bea-navbar:link {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: white; FONT-FAMILY: =
Arial,sans-serif; TEXT-DECORATION: none
}
A.bea-navbar:active {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: white; FONT-FAMILY: =
Arial,sans-serif; TEXT-DECORATION: none
}
A.bea-navbar:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: white; FONT-FAMILY: =
Arial,sans-serif; TEXT-DECORATION: none
}
A.bea-navbar:hover {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: white; FONT-FAMILY: =
Arial,sans-serif; TEXT-DECORATION: none
}
A.horiznav-link:link {
	FONT-SIZE: 7.5pt; COLOR: black; FONT-FAMILY: =
Verdana,Helvetica,Arial,sans-serif; TEXT-DECORATION: none
}
A.horiznav-link:active {
	FONT-SIZE: 7.5pt; COLOR: black; FONT-FAMILY: =
Verdana,Helvetica,Arial,sans-serif; TEXT-DECORATION: none
}
A.horiznav-link:visited {
	FONT-SIZE: 7.5pt; COLOR: black; FONT-FAMILY: =
Verdana,Helvetica,Arial,sans-serif; TEXT-DECORATION: none
}
A.horiznav-link:hover {
	FONT-SIZE: 7.5pt; COLOR: black; FONT-FAMILY: =
Verdana,Helvetica,Arial,sans-serif; TEXT-DECORATION: none
}
A.medlink:hover {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: red; TEXT-DECORATION: none
}
A.medlink:link {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #996600; TEXT-DECORATION: =
none
}
A.medlink:active {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #996600; TEXT-DECORATION: =
none
}
A.medlink:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #996600; TEXT-DECORATION: =
none
}
A.nav:hover {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #404b58; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.nav:link {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #404b58; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.nav:active {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #404b58; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.nav:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: #404b58; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.nav-minor:hover {
	FONT-SIZE: 8pt; COLOR: black; TEXT-DECORATION: none
}
A.nav-minor:link {
	FONT-SIZE: 8pt; COLOR: #404b58; TEXT-DECORATION: none
}
A.nav-minor:active {
	FONT-SIZE: 8pt; COLOR: #404b58; TEXT-DECORATION: none
}
A.nav-minor:visited {
	FONT-SIZE: 8pt; COLOR: #404b58; TEXT-DECORATION: none
}
A.navsel:link {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.navsel:active {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
A.navsel:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: =
Arial,Helvetica,sans-serif; TEXT-DECORATION: none
}
.leftnav-color {
	BACKGROUND-COLOR: #dde4eb
}
OL {
	FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.5in; COLOR: #000000; =
FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
OL OL LI {
	FONT-SIZE: 10pt; COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica, =
sans-serif; LIST-STYLE-TYPE: lower-alpha
}
LI {
	MARGIN-TOP: 0.1in; MARGIN-BOTTOM: 0px
}
OL LI P {
	MARGIN-LEFT: 0in
}
P {
	FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; COLOR: #000000; =
FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
TD {
	FONT-SIZE: 10pt; COLOR: #000000; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
TD P {
	FONT-SIZE: 10pt; MARGIN-LEFT: 0in; COLOR: #000000; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
TD.rednote {
	FONT-SIZE: 10pt; COLOR: red; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
UL {
	FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.5in; COLOR: #000000; =
FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
.code {
	FONT-SIZE: small; FONT-FAMILY: "Courier New", Courier, monospace
}
.footer {
	MARGIN-TOP: 0.1in; FONT-SIZE: 8pt; MARGIN-LEFT: 0in
}
.lists {
	MARGIN-TOP: 0.1in
}
OL.smallindent {
	MARGIN: 0.1in 0.1in 0.1in 0.025in
}
P.booktitle {
	MARGIN-TOP: 0px; FONT-WEIGHT: bold; FONT-SIZE: 14pt; MARGIN-BOTTOM: =
0px; MARGIN-LEFT: 1%; COLOR: #0076cc; TEXT-ALIGN: left
}
H1.apphead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.chaphead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.glosshead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.Title {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.topictitle1 {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.appheadTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; =
COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
H1.chapheadTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; =
COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
H1.glossheadTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; =
COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
DIV.chapheadTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; =
COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
P.apphead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
P.chaphead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
P.glosshead {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H2.TOC {
	FONT-WEIGHT: normal; FONT-SIZE: 10pt; MARGIN: 0.1in 0.15in 0px 0.25in; =
COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif
}
P.cautionpara {
	MARGIN-LEFT: 0.95in
}
P.cellheading {
	FONT-WEIGHT: bold; MARGIN: 0px 0px 0.1in 0in; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.celllistpara {
	MARGIN-LEFT: 0.2in
}
P.cellnote {
	MARGIN-BOTTOM: 0.1in; MARGIN-LEFT: 0in
}
P.codetitle {
	MARGIN-TOP: 0.25in; FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN-LEFT: =
0.25in
}
P.figuretitle {
	MARGIN-TOP: 0.25in; FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN-LEFT: =
0.25in
}
P.comment {
	FONT-WEIGHT: bold; COLOR: #ff0000; FONT-FAMILY: =
Arial,Helvetica,Geneva,sans-serif
}
P.defpara {
	MARGIN-LEFT: 0in
}
P.defpara2 {
	MARGIN-LEFT: 0in
}
P.defterm {
	FONT-WEIGHT: bold; MARGIN-LEFT: 0in; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.defterm2 {
	FONT-WEIGHT: bold; MARGIN-LEFT: 0.45in
}
.glossbullet {
	MARGIN-LEFT: 0.2in
}
P.glossdef {
	MARGIN-TOP: 0.1in; MARGIN-LEFT: 0.4in
}
P.glosslistpara {
	MARGIN-TOP: 0.1in; MARGIN-LEFT: 0.7in
}
P.glossnumlist {
	MARGIN-TOP: 0.1in; MARGIN-LEFT: 0px
}
.GlossDef-NumBegin {
	MARGIN-LEFT: 0.2in
}
.GlossDef-Num {
	MARGIN-LEFT: 0.2in
}
P.glossterm {
	FONT-WEIGHT: bold
}
H1.grouptitlesIX {
	MARGIN-TOP: 0.2in; FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN-LEFT: =
0.15in; FONT-FAMILY: Arial,Helvetica,sans-serif
}
P.grouptitlesIX {
	MARGIN-TOP: 0.2in; FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN-LEFT: =
0.15in; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.head1 {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.2in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
P.head1 {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.2in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H2.head2 {
	FONT-WEIGHT: normal; FONT-SIZE: 150%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
P.head2 {
	FONT-WEIGHT: normal; FONT-SIZE: 150%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H3.head3 {
	FONT-WEIGHT: normal; FONT-SIZE: 120%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H3.greytitlebar {
	MARGIN-TOP: 2%; PADDING-LEFT: 6px; FONT-WEIGHT: bold; FONT-SIZE: 11pt; =
BACKGROUND: #ced9e0; MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 3px; =
MARGIN-LEFT: 0px; COLOR: black; PADDING-TOP: 3px; FONT-FAMILY: Verdana, =
Geneva, Arial, Helvetica, sans-serif
}
P.head3 {
	FONT-WEIGHT: normal; FONT-SIZE: 120%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H4.head4 {
	FONT-WEIGHT: normal; FONT-SIZE: 105%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
P.relatedtopics {
	FONT-WEIGHT: normal; FONT-SIZE: 105%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H4 {
	FONT-WEIGHT: normal; FONT-SIZE: 105%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H4.bold {
	FONT-WEIGHT: bold; FONT-SIZE: 105%; MARGIN: 0.25in 0px 0px 1%; COLOR: =
black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; TEXT-ALIGN: left
}
P.head4 {
	FONT-WEIGHT: normal; FONT-SIZE: 105%; MARGIN: 0.25in 0px 0px 0.2in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif; =
TEXT-ALIGN: left
}
H1.headmain {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
.headmain {
	FONT-WEIGHT: normal; FONT-SIZE: 190%; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.headmainIX {
	FONT-WEIGHT: bold; FONT-SIZE: 18pt; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
P.headmainIX {
	FONT-WEIGHT: bold; FONT-SIZE: 18pt; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.headmainTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 18pt; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
P.headmainTOC {
	FONT-WEIGHT: bold; FONT-SIZE: 18pt; MARGIN: 0.1in 0px 0px 0.15in; =
COLOR: black; FONT-FAMILY: Arial,Helvetica,sans-serif
}
H1.letterguide {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0.25in 0px 0px 0in; =
VERTICAL-ALIGN: middle; FONT-FAMILY: Arial,Helvetica,sans-serif; =
TEXT-ALIGN: center
}
P.letterguide {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0.25in 0px 0px 0in; =
VERTICAL-ALIGN: middle; FONT-FAMILY: Arial,Helvetica,sans-serif; =
TEXT-ALIGN: center
}
.letterguideA {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN: 0.25in 0px 0px 0in; =
VERTICAL-ALIGN: middle; FONT-FAMILY: Arial,Helvetica,sans-serif; =
TEXT-ALIGN: center
}
P.level1IX {
	MARGIN-LEFT: 0.2in
}
P.level2IX {
	MARGIN-LEFT: 0.5in
}
P.level3IX {
	MARGIN-LEFT: 0.75in
}
P.level4IX {
	MARGIN-LEFT: 1in
}
P.level5IX {
	MARGIN-LEFT: 1.25in
}
P.listnote {
	MARGIN-LEFT: 0in
}
P.listnote2 {
	MARGIN-LEFT: 0in
}
P.listnotepara {
	MARGIN-LEFT: 0.45in
}
P.listpara {
	MARGIN-LEFT: 0px
}
P.listpara2 {
	MARGIN-LEFT: 0in
}
P.localtopic1 {
	MARGIN-TOP: 0px; MARGIN-LEFT: 0.2in
}
P.localtopic1sonly {
	MARGIN-TOP: 0px; MARGIN-LEFT: 0.2in
}
P.localtopic2 {
	MARGIN-TOP: 0px; MARGIN-LEFT: 0.4in
}
P.localtopic3 {
	MARGIN-TOP: 0px; MARGIN-LEFT: 0.6in
}
P.note {
	MARGIN-LEFT: 0.25in
}
P.notepara {
	MARGIN-LEFT: 0.7in
}
P.numlist2 {
	MARGIN-LEFT: -0.4in
}
P.small {
	FONT-SIZE: 1pt; MARGIN: 0px
}
P.table {
	MARGIN: 0px 0px 0.1in 0in; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.tablefootnote {
	MARGIN: 0px 0px 0in 0in; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.tabletitle {
	MARGIN-TOP: 0.25in; FONT-WEIGHT: bold; FONT-SIZE: 10pt; MARGIN-LEFT: =
0.25in
}
P.texthead {
	MARGIN-TOP: 0.15in; FONT-WEIGHT: bold; FONT-SIZE: 12pt; MARGIN-LEFT: =
1%; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif
}
H3.TOC2 {
	MARGIN-TOP: 0.1in; FONT-WEIGHT: normal; FONT-SIZE: 10pt; MARGIN-BOTTOM: =
0in; MARGIN-LEFT: 0.4in; COLOR: #000000; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.TOC2 {
	MARGIN-LEFT: 0.4in
}
H4.TOC3 {
	MARGIN-TOP: 0.1in; FONT-WEIGHT: normal; FONT-SIZE: 10pt; MARGIN-BOTTOM: =
0in; MARGIN-LEFT: 0.6in; COLOR: #000000; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.TOC3 {
	MARGIN-LEFT: 0.6in
}
H5.TOC4 {
	MARGIN-TOP: 0.1in; FONT-WEIGHT: normal; FONT-SIZE: 10pt; MARGIN-BOTTOM: =
0in; MARGIN-LEFT: 0.8in; COLOR: #000000; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif
}
P.TOC4 {
	MARGIN-LEFT: 0.8in
}
H1.TOCpart {
	FONT-WEIGHT: bold; FONT-SIZE: 12pt
}
P.TOCpart {
	FONT-SIZE: 12pt
}
P.troubleshoot {
	FONT-SIZE: 18pt; COLOR: red
}
DIV.tblmargin {
	FONT-SIZE: 10pt; MARGIN-LEFT: 0.25in; MARGIN-RIGHT: 0.2in; FONT-FAMILY: =
Verdana,Arial,Helvetica,sans-serif; TEXT-ALIGN: left
}
UL.smallindent {
	MARGIN: 0.1in 0.1in 0in 0.2in
}
.bullet-header {
	FONT-WEIGHT: bold; FONT-SIZE: 9pt; MARGIN: 0.1in 0.05in 0.04in 0.1in; =
COLOR: #000000; FONT-FAMILY: Verdana,Geneva,Arial,Helvetica,sans-serif
}
.bullet-text {
	MARGIN-TOP: 0.1in; MARGIN-LEFT: 0.1in
}
.descrip {
	MARGIN-TOP: 0.05in; MARGIN-BOTTOM: 0.1in; MARGIN-LEFT: 0.45in; =
FONT-STYLE: normal; FONT-FAMILY: Arial,Helvetica,sans-serif
}
.footerrule {
	BACKGROUND: url(images/footer_rule.gif)
}
.formclass {
	FONT-SIZE: 10px; MARGIN-LEFT: 0.25in; HEIGHT: 17px
}
.h2 {
	MARGIN-TOP: 0.1in; FONT-WEIGHT: bold; FONT-SIZE: small; MARGIN-LEFT: =
-0.05in; COLOR: black; FONT-FAMILY: Arial,Helvetica,Geneva,sans-serif
}
.pagetitle {
	MARGIN-TOP: 0in; FONT-WEIGHT: bold; FONT-SIZE: 14pt; MARGIN-BOTTOM: =
0in; MARGIN-LEFT: 0.25in; COLOR: gray; TEXT-ALIGN: left
}
.rule {
	BACKGROUND: url(images/rule.gif)
}
SELECT {
	FONT-SIZE: 11px
}
INPUT {
	FONT-SIZE: 11px
}
.smallredline {
	FONT-SIZE: 1pt; MARGIN: 0px
}
TABLE.edocshelp {
	MARGIN-TOP: 1%; WIDTH: 98%
}
.text {
	MARGIN-TOP: 0.1in; MARGIN-LEFT: 1%
}
.texthide {
	FONT-WEIGHT: bold; COLOR: white
}
.topictable {
	MARGIN-LEFT: 0.25in
}
UL.bulletarrow LI {
	MARGIN-TOP: 0.02in; LIST-STYLE-IMAGE: url(images/bullet_arrow.gif); =
MARGIN-LEFT: -1%
}

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/jdbc/floatwin.js

//If you can see this you are using a browser that does not support
//JavaScript or Jscript. Please download Netscape Navigator Version 4.0
//(or newer) from http:\home.netscape.com or http:\www.microsoft.com
// Microsoft Internet Explorer Version 4.0 (or newer) from =
http://home.microsoft.com
//
//This script opens a new, small, floating window and puts TOCname.htm =
and IXname.htm files in it.
//Sets a generic popup window code to enable the display of some =
viewlets in the WebLogic Platform Tour:


function SetWindowName() {
        window.name=3D"qaview";
}
        SetWindowName();

//Position windows on right side
leftPos =3D 0
if (screen) {
leftPos =3D screen.width-620;
}

function OpenWindowToc(){
                var tocwin =3D window.open('jdbcTOC.html', 'newWin1', =
'resizable=3Dyes,scrollbars=3Dyes,status=3D0,width=3D450,height=3D600,lef=
t=3D'+leftPos+',top=3D20');
}

function OpenWindowIndex(){
                var indexwin =3D window.open('', 'newWin2', =
'resizable=3Dyes,scrollbars=3Dyes,status=3D0,width=3D450,height=3D600,lef=
t=3D'+leftPos+',top=3D20');
}

function popup_window( url, id, width, height )
{
      	popup =3D window.open( url, id, =
'toolbar=3Dno,scrollbars=3Dno,location=3Dno,statusbar=3Dno,menubar=3Dno,r=
esizable=3Dno,width=3D' + width + ',height=3D' + height + =
',left=3D100,top=3D100' );
      	popup.focus();
}

function popup_window_bars( url, id, width, height )
{
      	popup =3D window.open( url, id, =
'toolbar=3Dno,scrollbars=3Dyes,location=3Dno,statusbar=3Dno,menubar=3Dyes=
,resizable=3Dno,width=3D' + width + ',height=3D' + height + =
',left=3D100,top=3D100' );
      	popup.focus();
}

------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/search.js

<!-- Begin
	// This function is called by the child window that handles CD searches
	function getSearchText() {
	    return document.forms[0].q_text.value;
	}

	function doSearch() {
	  dotdot =3D document.location.href;
	  re =3D new RegExp(".*docs81\/", "i");
	  dotdot =3D dotdot.replace( re, "");
	  re =3D new RegExp( "[^/]*\/", "g");
	  dotdot =3D dotdot.replace(re, "../");
	  re =3D new RegExp( "[a-zA-Z].*", "i" );
	  dotdot =3D dotdot.replace( re, "" )
		// search for any spaces and replace with '+'=09
		var theEntry=3DgetSearchText();
		var pattern =3D /\b \b/ig;
		var theQuery =3D theEntry.replace(pattern,"+");
		window.open( dotdot + "../../search/search_offline_main.html", =
"subwin");
		return false;
	}

// End -->


------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/googlesearch.js

//If you can see this you are using a browser that does not support
//JavaScript or Jscript. Please download Netscape Navigator Version 4.0
//(or newer) from http:\home.netscape.com or http:\www.microsoft.com
// Microsoft Internet Explorer Version 4.0 (or newer) from =
http://home.microsoft.com
//
//This script is the google search form for the google 4 appliance.
//Version 1.37c

function GoogleURL(){
	document.write('<form name=3D"gs" method=3D"get" =
action=3D"http://seeker.bea.com/search">');
}


function GoogleSearchCollection()=20
{
var strHref =3D window.location.href;
//alert("strHref=3D" + strHref);

document.write('<input type=3D"hidden" name=3D"client" =
value=3D"developer" />');
document.write('<input type=3D"hidden" name=3D"filter" value=3D"p" />');
document.write('<input type=3D"hidden" name=3D"ie" value=3D"latin1" =
/>');
document.write('<input type=3D"hidden" name=3D"lr" value=3D"lang_en" =
/>');
document.write('<input type=3D"hidden" name=3D"numgm" value=3D"5" />');
document.write('<input type=3D"hidden" name=3D"oe" value=3D"latin1" =
/>');
document.write('<input type=3D"hidden" name=3D"output" =
value=3D"xml_no_dtd" />');
document.write('<input type=3D"hidden" name=3D"proxystylesheet" =
value=3D"developer" />');

if (strHref.indexOf("alsb/docs20") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20">');
}

else if (strHref.indexOf("common/docs20") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform90|edocs_al20">');
}

else if (strHref.indexOf("common/docs90") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform90|edocs_al20">');
}

else if (strHref.indexOf("configs_history") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20|edocs_configs|edocs_platform70|edocs_platform81|edocs=
_platform90">');
}

else if (strHref.indexOf("configs_al20") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20">');
}

else if (strHref.indexOf("configs90") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform90">');
}

else if (strHref.indexOf("configs85") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform81|edocs_wli85">');
}

else if (strHref.indexOf("configs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform81">');
}

else if (strHref.indexOf("configs70") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform70">');
}

else if (strHref.indexOf("suppconfigs/index.html") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20|edocs_configs|edocs_platform70|edocs_platform81|edocs=
_platform90">');
}

else if (strHref.match("/suppconfigs\/configs\/") !=3D null) {
	//find out if we're looking at HTML pages in this very directory
	if (strHref.match("/suppconfigs\/configs\/.*html/") !=3D null) {
		// HTML pages in this directory will perform a wider search
		document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20|edocs_configs|edocs_platform70|edocs_platform81|edocs=
_platform90">');
	} else {
		// Doing a more restricted search
		document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_al20|edocs_platform90">');
	}
}

else if (strHref.indexOf("iwaydocs/iway55") !=3D -1) {

             document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wli85">');
}=20

else if (strHref.indexOf("liquiddata/docs85") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/liquiddata/docs85">');
}

else if (strHref.indexOf("liquiddata/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/liquiddata/docs81">');
}

else if (strHref.indexOf("platform/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform81">');
}

else if (strHref.indexOf("tuxedo/tux90") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/tuxedo/tux90">');
}

else if (strHref.indexOf("wladapters/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wladapters/docs81">');
}

else if (strHref.indexOf("wles/docs42") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wles/docs42">');
}

else if (strHref.indexOf("wli/docs85") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wli85">');
}

else if (strHref.indexOf("wli/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wli81|edocs_wlibc81|edocs_workshop81">');
}

else if (strHref.indexOf("wlibc/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wli81|edocs_wlibc81">');
}

else if (strHref.indexOf("wljrockit/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wljrockit/docs81">');
}

else if(strHref.indexOf("wljrockit/docs50") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wljrockit/docs50">');
}

else if (strHref.indexOf("wljrockit/docs142") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wljrockit/docs142">');
}

else if (strHref.indexOf("wlp/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wlp81">');
}

else if (strHref.indexOf("wls/docs90") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_platform90">');
}

else if (strHref.indexOf("wls/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/wls/docs81">');
}

else if (strHref.indexOf("wlspe/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" =
value=3D"edocs_wli81|edocs_workshop81">');
}

else if (strHref.indexOf("workshop/docs81") !=3D -1) {

	document.write('<input type=3D"hidden" name=3D"site" value=3D"edocs" =
/>');
	document.write('<input type=3D"hidden" name=3D"sitesearch" =
value=3D"e-docs.bea.com/workshop/docs81">');
}

document.write('<input type=3D"hidden" name=3D"source" value=3D"edocs" =
/>');
document.write('</form>');
}


------=_NextPart_000_0000_01C84C04.79B822F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://e-docs.bea.com/wls/docs81/copyright.js

//If you can see this you are using a browser that does not support
//JavaScript or Jscript. Please download Netscape Navigator Version 4.0
//(or newer) from http:\home.netscape.com or http:\www.microsoft.com
// Microsoft Internet Explorer Version 4.0 (or newer) from =
http://home.microsoft.com
//
//This script outputs the correct copyright date and link to copyright =
page.
//Version 1.37a

function Copyright()=20
{
var strHref =3D window.location.href;
//alert("strHref=3D" + strHref);


	copyright=3Dnew Date();
	update=3Dcopyright.getFullYear();
	document.write('<a href=3D"http://edocs.bea.com/copyright.html">&copy; =
' + update + ' BEA Systems</a>');
}

------=_NextPart_000_0000_01C84C04.79B822F0--
