<!---------------------------------------------------------------------------------------------
//   
//  @Author : linliangyi in Team of Miracle
//  @Date   : 07/10/2005 
//
----------------------------------------------------------------------------------------------->

//Event Declaration

<ATTACH   EVENT="onclick" HANDLER="MouseOnClick" />
<ATTACH   EVENT="ondblclick" HANDLER="MouseOnDBLClick" />
<ATTACH   EVENT="onmousemove"  HANDLER="MouseMove">
<ATTACH   EVENT="onkeypress" HANDLER="KeyPress" />
<ATTACH   EVENT="onmousedown" HANDLER = "MouseDown"/>
<ATTACH   EVENT="onmouseup" HANDLER = "MouseUp"/>
<ATTACH   EVENT="onmouseleave" HANDLER = "MouseLeave"/>

<ATTACH   EVENT="ondrag" HANDLER = "Drag"/>
<ATTACH   EVENT="ondragend" HANDLER = "DragEnd"/>
<ATTACH   EVENT="ondragenter" HANDLER = "DragEnter"/>
<ATTACH   EVENT="ondragleave" HANDLER = "DragLeave"/>
<ATTACH   EVENT="ondragover" HANDLER = "DragOver"/>
<ATTACH   EVENT="ondrog" HANDLER = "Drog"/>

<PUBLIC:METHOD NAME="checkSelectState"/>

//Evnet Handle
<script language="javascript">
	
	var whatIdone = "";
	var ps_X;
	var bIsMouseDown = false;
	var bInResize =false;
	var oResizeObj = null;
	var oMainContainer = null;
	var oTBody = null;
	var compID = null;
	
	var oResizeLine=null;
	var oResizeDIV=null;
	

	function MouseLeave(){
		//resetTableState();
	}
	
	function resetTableState(){
		bIsMouseDown = false;
		bInResize =false;
		oResizeObj = null;
	}
	
	function MouseDown(){
		bIsMouseDown = true;

		var oSrcElement = event.srcElement;
		if(bInResize && oSrcElement.tagName == "TH"){
			ps_X = event.x;
			oResizeObj=oSrcElement;
			oResizeObj.setCapture();
			
            var y=0;
            var thead = this.getElementsByTagName("THead")[0];  
           	var tbody = this.getElementsByTagName("TBody")[0];
            var c = thead;
            
            while (c.offsetParent != null){ 
			    y += c.offsetTop;
			    c= c.offsetParent;
			}
			
			
			createLine(ps_X, y,thead.offsetHeight + tbody.offsetHeight);
		}
	}
	
	function MouseUp(){
		
		var oSrcElement = event.srcElement;
		if(oResizeObj !=null && !isNaN(ps_X) && bInResize){
			if(parseInt(oResizeObj.width) + event.x - ps_X > 0){
				changeColWidth(oResizeObj , parseInt(oResizeObj.width) + event.x - ps_X);
				//oResizeObj.width = parseInt(oResizeObj.width) + event.x - ps_X;
			}

			if(oSrcElement.colNum == oResizeObj.colNum){
				oSrcElement.bClickAftResize = true;
			}
			oResizeObj.releaseCapture();
			oResizeObj = null;
			this.style.cursor="DEFAULT";
			bInResize =false;
			removeLine();
		}
		bIsMouseDown =false;
	}


	function changeColWidth(oResizeObj , width){
		var colNum = oResizeObj.colNum; 	
		var rows = getRows();
		if(this.withCheck != "yes"){
			for(var i=0 ; i < rows.length ; i++){
				var td = rows[i].getElementsByTagName("TD")[colNum-1];
				td.width = width;
			}
		}else{
			for(var i=0 ; i < rows.length ; i++){
				var td = rows[i].getElementsByTagName("TD")[colNum];
				td.width = width;
			}
		}
		oResizeObj.width = width;
	}

	function MouseMove(){
		if(oResizeObj !=null && bIsMouseDown && bInResize){
        	oResizeLine.style.left =event.x + element.document.body.scrollLeft;
		 	return;
		}

		var oSrcElement = event.srcElement;

		if(oSrcElement.tagName != "TH" && bInResize){
				this.style.cursor="DEFAULT";
				bInResize =false;
				return;
		}
		
		if(oSrcElement.tagName =="TH"){
			var bordWidth = oSrcElement.offsetWidth - oSrcElement.clientWidth;
			var tdWidth = oSrcElement.clientWidth - 2*bordWidth;
			
			if(oSrcElement.colNum == null){
				this.style.cursor="DEFAULT";
				bInResize =false;
				return;
			}else if(tdWidth - event.offsetX <=2){
	        	this.style.cursor="col-resize";
	        	bInResize = true;
	        	return;  
			} else {
				this.style.cursor="DEFAULT";
				bInResize =false;
				return;
        	} 
		}
		
		
		
	}

	function MouseOnClick(){
		//whatIdone += "|Mouse on Click|";
		
		var oSrcElement = event.srcElement;
		if(oSrcElement.id== getCompID() + "_CheckAll"){
			doCheckAll();
			return;		
		}
		
	}
	

	function doCheckAll(){
		var resultState =element.document.getElementById(getCompID()+"_CheckAll").checked;
		var oAllInput = element.document.getElementsByName(getCompID() + "_RowCheck");
		for(var i = 0 ; i < oAllInput.length ; i ++){
			if(oAllInput[i].parentElement.parentElement.style.display != "none"){
				
				oAllInput[i].checked = resultState;
			}
		}
	}

	function checkSelectState(){
		if(null != this.withCheck && this.withCheck == "yes"){
			var resultState = true;
			var oAllInput = element.document.getElementsByName(getCompID() + "_RowCheck");
			for(var i = 0 ; i < oAllInput.length ; i ++){
				
				if(oAllInput[i].parentElement.parentElement.style.display != "none"){
					
					resultState = resultState && oAllInput[i].checked;
				}					
			}
			element.document.getElementById(getCompID()+"_CheckAll").checked = resultState;
		}
	}
	
	function getMainContainer(){
		if(oMainContainer == null){
			var oTmp = this.parentElement;
			while(oTmp.container != "MAIN"){
				oTmp = oTmp.parentElement;
			}	
			oMainContainer = oTmp;	
		}
		return oMainContainer;
	}

	function getRows(){
		var aRows = getTBody().getElementsByTagName("TR");
		return aRows;
	}


	function getTBody(){
		if(oTBody == null){
			oTBody = this.getElementsByTagName("TBody")[0];
		}
		return oTBody;
	}
	
	function getCompID(){
		if(compID == null){
			compID = getMainContainer().id;
		}
		return compID;
	}
	
	function getColHead(oSrcElement){
		if(oSrcElement.tagName == "TD"){
			var oHead = this.getElementsByTagName("THead")[0];
			if(null != oHead){
				var aHeadTDs = oHead.getElementsByTagName("TH");
				for(var i = 0 ; i < aHeadTDs.length ; i++){
					if(aHeadTDs[i].colNum == oSrcElement.colNum){
						return aHeadTDs[i];
					}
				}
			}
		}	
	}
	
	
	function createLine(left,top,height){
	
		left=left+element.document.body.scrollLeft;
		oResizeDIV = document.createElement("DIV");
		oResizeDIV.innerHTML="<TABLE><TR><TD bgColor=black></TD></TR></TABLE>";
		oResizeLine=oResizeDIV.children[0];
		oResizeLine.style.bgColor="black"; 
		oResizeLine.style.border="0px solid #000000";
		oResizeLine.cellPadding=0; 
		oResizeLine.cellSpacing=0;  
		oResizeLine.style.width=1;
		oResizeLine.style.top =top;
		oResizeLine.style.left=left;
		oResizeLine.style.height =height;	
		oResizeLine.style.position= "absolute";  
		oResizeLine.style.display ="block"; 
		oResizeLine.style.zIndex=1000; 
		//this.parentElement.appendChild(oResizeLine);
		this.parentElement.insertAdjacentElement("AfterBegin",oResizeLine); 
	}
	
	function removeLine(){
	   if(oResizeDIV != null){
	     oResizeLine.removeNode(true);
	     oResizeDIV.removeNode(true);
	     oResizeLine=null; 
	     oResizeDIV=null;
	  }
	}
	
	function cancleEvent(){
	
		window.event.cancelBubble=true;
		window.event.returnValue=false;
	}
	
	
	function resumeEvent(){
		window.event.cancelBubble=false;
		window.event.returnValue=true;
	}
	
	function Drag(){
		cancleEvent();
	}

	function DragEnd(){
		cancleEvent();
	}

	function DragEnter(){
		cancleEvent();
	}

	function DragLeave(){
		cancleEvent();
	}

	function DragOver(){
		cancleEvent();
	}

	function Drog(){
		cancleEvent();
	}

	
</script>